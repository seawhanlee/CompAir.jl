var documenterSearchIndex = {"docs":
[{"location":"manual/installation/#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"This guide covers how to install CompAir.jl and its dependencies.","category":"page"},{"location":"manual/installation/#Requirements","page":"Installation","title":"Requirements","text":"","category":"section"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"Julia 1.11 or later\nInternet connection for package downloads","category":"page"},{"location":"manual/installation/#Installing-Julia","page":"Installation","title":"Installing Julia","text":"","category":"section"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"If you don't have Julia installed, download it from julialang.org. CompAir.jl requires Julia 1.11 or later.","category":"page"},{"location":"manual/installation/#Package-Installation","page":"Installation","title":"Package Installation","text":"","category":"section"},{"location":"manual/installation/#From-Julia-General-Registry-(Recommended)","page":"Installation","title":"From Julia General Registry (Recommended)","text":"","category":"section"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"CompAir.jl is now registered in the Julia General Registry. Install it using the standard package manager:","category":"page"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"using Pkg\nPkg.add(\"CompAir\")","category":"page"},{"location":"manual/installation/#From-GitHub-(Development)","page":"Installation","title":"From GitHub (Development)","text":"","category":"section"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"If you want to contribute to the package or need the latest development version:","category":"page"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"using Pkg\nPkg.add(url=\"https://github.com/seawhanlee/CompAir.jl.git\")","category":"page"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"For development work, use:","category":"page"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"using Pkg\nPkg.develop(url=\"https://github.com/seawhanlee/CompAir.jl.git\")","category":"page"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"This will clone the repository to your local Julia development directory (usually ~/.julia/dev/).","category":"page"},{"location":"manual/installation/#Dependencies","page":"Installation","title":"Dependencies","text":"","category":"section"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"CompAir.jl automatically installs the following dependencies:","category":"page"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"DifferentialEquations.jl v7.16.1+: For solving the Taylor-Maccoll equation in cone shock analysis\nLinearAlgebra: Standard library for vector operations\nOptim.jl v1.12.0+: Optimization routines for iterative solutions\nRoots.jl v2.2.7+: Root finding algorithms for implicit equations","category":"page"},{"location":"manual/installation/#Verification","page":"Installation","title":"Verification","text":"","category":"section"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"After installation, verify that everything works correctly:","category":"page"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"using CompAir\n\n# Test basic functionality\nM = 2.0\nprintln(\"T₀/T at M=$M: \", t0_over_t(M))\nprintln(\"Installation successful!\")","category":"page"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"You should see output similar to:","category":"page"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"T₀/T at M=2.0: 1.8\nInstallation successful!","category":"page"},{"location":"manual/installation/#Running-Tests","page":"Installation","title":"Running Tests","text":"","category":"section"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"To ensure the package is working correctly, run the test suite:","category":"page"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"using Pkg\nPkg.test(\"CompAir\")","category":"page"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"All tests should pass. If you encounter any failures, please report an issue.","category":"page"},{"location":"manual/installation/#Troubleshooting","page":"Installation","title":"Troubleshooting","text":"","category":"section"},{"location":"manual/installation/#Common-Issues","page":"Installation","title":"Common Issues","text":"","category":"section"},{"location":"manual/installation/#Package-Not-Found","page":"Installation","title":"Package Not Found","text":"","category":"section"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"If you get an error like \"package CompAir not found\", ensure you have an internet connection and try updating your registry:","category":"page"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"using Pkg\nPkg.Registry.update()","category":"page"},{"location":"manual/installation/#Dependency-Conflicts","page":"Installation","title":"Dependency Conflicts","text":"","category":"section"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"If you encounter dependency conflicts, try updating your Julia packages:","category":"page"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"using Pkg\nPkg.update()","category":"page"},{"location":"manual/installation/#Permission-Issues","page":"Installation","title":"Permission Issues","text":"","category":"section"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"On some systems, you might need to run Julia with appropriate permissions or check your firewall settings.","category":"page"},{"location":"manual/installation/#Getting-Help","page":"Installation","title":"Getting Help","text":"","category":"section"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"If you encounter installation issues:","category":"page"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"Check the GitHub Issues for similar problems\nEnsure you're using Julia 1.11 or later\nTry installing in a fresh Julia environment\nCreate a new issue with your error message and system information","category":"page"},{"location":"manual/installation/#Next-Steps","page":"Installation","title":"Next Steps","text":"","category":"section"},{"location":"manual/installation/","page":"Installation","title":"Installation","text":"Once installation is complete, head to the Quick Start guide to learn basic usage patterns, or browse the Examples for comprehensive use cases.","category":"page"},{"location":"api/normal_shock/#Normal-Shock-Waves","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"","category":"section"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"This module provides functions for analyzing normal shock waves, which are compression waves that occur perpendicular to the flow direction in supersonic flows.","category":"page"},{"location":"api/normal_shock/#Overview","page":"Normal Shock Waves","title":"Overview","text":"","category":"section"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Normal shock waves are sudden compression phenomena that occur when supersonic flow encounters an obstruction or adverse pressure gradient. They are characterized by:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Instantaneous property changes across a thin wave front\nEntropy increase (irreversible process)\nMach number reduction from supersonic to subsonic\nPressure, density, and temperature increases\nStagnation pressure loss","category":"page"},{"location":"api/normal_shock/#Theory","page":"Normal Shock Waves","title":"Theory","text":"","category":"section"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Normal shock waves are governed by the Rankine-Hugoniot relations, derived from conservation of mass, momentum, and energy:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Downstream Mach number: M_2 = sqrtfrac1 + fracgamma-12M_1^2gamma M_1^2 - fracgamma-12","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Pressure ratio: fracp_2p_1 = 1 + frac2gammagamma+1(M_1^2 - 1)","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Density ratio: fracrho_2rho_1 = frac(gamma+1)M_1^22 + (gamma-1)M_1^2","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Temperature ratio: fracT_2T_1 = fracp_2p_1 cdot fracrho_1rho_2","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Stagnation pressure ratio: fracp_02p_01 = left(frac2gamma M_1^2 - (gamma-1)gamma+1right)^frac11-gamma left(frac(gamma+1)M_1^22 + (gamma-1)M_1^2right)^fracgamma1-gamma","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Where subscript 1 denotes upstream conditions and subscript 2 denotes downstream conditions.","category":"page"},{"location":"api/normal_shock/#Functions","page":"Normal Shock Waves","title":"Functions","text":"","category":"section"},{"location":"api/normal_shock/#CompAir.mach_after_normal_shock","page":"Normal Shock Waves","title":"CompAir.mach_after_normal_shock","text":"mach_after_normal_shock(M::Float64, gamma::Float64=1.4)\n\nCalculates the Mach number after a normal shock wave.\n\nArguments\n\nM::Float64: Upstream Mach number\ngamma::Float64=1.4: Specific heat ratio\n\nReturns\n\nmach::Float64: Downstream Mach number\n\n\n\n\n\n","category":"function"},{"location":"api/normal_shock/#CompAir.density_ratio_normal_shock","page":"Normal Shock Waves","title":"CompAir.density_ratio_normal_shock","text":"density_ratio_normal_shock(M::Float64, gamma::Float64=1.4)\n\nCalculates the density ratio across a normal shock wave.\n\nArguments\n\nM::Float64: Upstream Mach number\ngamma::Float64=1.4: Specific heat ratio\n\nReturns\n\nrho2/rho1::Float64: Density ratio\n\n\n\n\n\n","category":"function"},{"location":"api/normal_shock/#CompAir.pressure_ratio_normal_shock","page":"Normal Shock Waves","title":"CompAir.pressure_ratio_normal_shock","text":"pressure_ratio_normal_shock(M::Float64, gamma::Float64=1.4)\n\nCalculates the pressure ratio across a normal shock wave.\n\nArguments\n\nM::Float64: Upstream Mach number\ngamma::Float64=1.4: Specific heat ratio\n\nReturns\n\np2/p1::Float64: Pressure ratio\n\n\n\n\n\n","category":"function"},{"location":"api/normal_shock/#CompAir.temperature_ratio_normal_shock","page":"Normal Shock Waves","title":"CompAir.temperature_ratio_normal_shock","text":"temperature_ratio_normal_shock(M::Float64, gamma::Float64=1.4)\n\nCalculates the temperature ratio across a normal shock wave.\n\nArguments\n\nM::Float64: Upstream Mach number\ngamma::Float64=1.4: Specific heat ratio\n\nReturns\n\nt2/t1::Float64: Temperature ratio\n\n\n\n\n\n","category":"function"},{"location":"api/normal_shock/#CompAir.total_pressure_after_normal_shock","page":"Normal Shock Waves","title":"CompAir.total_pressure_after_normal_shock","text":"total_pressure_after_normal_shock(M::Float64, gamma::Float64=1.4)\n\nCalculates the total pressure after a normal shock wave.\n\nArguments\n\nM::Float64: Upstream Mach number\ngamma::Float64=1.4: Specific heat ratio\n\nReturns\n\np02::Float64: Total pressure after the shock\n\n\n\n\n\n","category":"function"},{"location":"api/normal_shock/#CompAir.total_pressure_ratio_normal_shock","page":"Normal Shock Waves","title":"CompAir.total_pressure_ratio_normal_shock","text":"total_pressure_ratio_normal_shock(M::Float64, gamma::Float64=1.4)\n\nCalculates the total pressure ratio across a normal shock wave.\n\nArguments\n\nM::Float64: Upstream Mach number\ngamma::Float64=1.4: Specific heat ratio\n\nReturns\n\np02/p01::Float64: Total pressure ratio\n\n\n\n\n\n","category":"function"},{"location":"api/normal_shock/#CompAir.solve_normal","page":"Normal Shock Waves","title":"CompAir.solve_normal","text":"solve_normal(M::Float64, gamma::Float64=1.4)\n\n수직 충격파 후 물성치 변화\n\nArguments\n\nM::Float64: 충격파 전 마하수\ngamma::Float64=1.4: 비열비\n\nReturns\n\nM2::Float64: 수직충격파 후 마하수\nrho2::Float64: 수직충격파 전/후 밀도비\np2::Float64: 수직충격파 전/후 압력비\np0ratio::Float64: 수직충격파 전/후 전압력비\n\n\n\n\n\n","category":"function"},{"location":"api/normal_shock/#Function-Details","page":"Normal Shock Waves","title":"Function Details","text":"","category":"section"},{"location":"api/normal_shock/#mach*after*normal_shock","page":"Normal Shock Waves","title":"machafternormal_shock","text":"","category":"section"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"mach_after_normal_shock(M, gamma=1.4)","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Calculate the downstream Mach number after a normal shock wave.","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Arguments:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"M::Real: Upstream Mach number (must be > 1)\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Returns:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Float64: Downstream Mach number (M₂)","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Formula: M_2 = sqrtfrac1 + fracgamma-12M_1^2gamma M_1^2 - fracgamma-12 ","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Example:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"julia> mach_after_normal_shock(2.0)\n0.5773502691896257\n\njulia> mach_after_normal_shock(3.0)\n0.4752229748622233","category":"page"},{"location":"api/normal_shock/#density*ratio*normal_shock","page":"Normal Shock Waves","title":"densityrationormal_shock","text":"","category":"section"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"density_ratio_normal_shock(M, gamma=1.4)","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Calculate the density ratio across a normal shock wave.","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Arguments:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"M::Real: Upstream Mach number\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Returns:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Float64: Density ratio (ρ₂/ρ₁)","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Formula: fracrho_2rho_1 = frac(gamma+1)M_1^22 + (gamma-1)M_1^2","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Example:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"julia> density_ratio_normal_shock(2.0)\n2.6666666666666665\n\njulia> density_ratio_normal_shock(5.0)\n5.714285714285714","category":"page"},{"location":"api/normal_shock/#pressure*ratio*normal_shock","page":"Normal Shock Waves","title":"pressurerationormal_shock","text":"","category":"section"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"pressure_ratio_normal_shock(M, gamma=1.4)","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Calculate the pressure ratio across a normal shock wave.","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Arguments:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"M::Real: Upstream Mach number\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Returns:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Float64: Pressure ratio (p₂/p₁)","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Formula: fracp_2p_1 = 1 + frac2gammagamma+1(M_1^2 - 1)","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Example:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"julia> pressure_ratio_normal_shock(2.0)\n4.5\n\njulia> pressure_ratio_normal_shock(3.0)\n10.333333333333334","category":"page"},{"location":"api/normal_shock/#temperature*ratio*normal_shock","page":"Normal Shock Waves","title":"temperaturerationormal_shock","text":"","category":"section"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"temperature_ratio_normal_shock(M, gamma=1.4)","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Calculate the temperature ratio across a normal shock wave.","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Arguments:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"M::Real: Upstream Mach number\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Returns:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Float64: Temperature ratio (T₂/T₁)","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Formula: fracT_2T_1 = fracp_2p_1 cdot fracrho_1rho_2","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Example:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"julia> temperature_ratio_normal_shock(2.0)\n1.6874999999999998\n\njulia> temperature_ratio_normal_shock(3.0)\n1.8076923076923077","category":"page"},{"location":"api/normal_shock/#total*pressure*after*normal*shock","page":"Normal Shock Waves","title":"totalpressureafternormalshock","text":"","category":"section"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"total_pressure_after_normal_shock(M, gamma=1.4)","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Calculate the downstream stagnation pressure after a normal shock wave.","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Arguments:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"M::Real: Upstream Mach number\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Returns:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Float64: Downstream stagnation pressure coefficient","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Example:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"julia> total_pressure_after_normal_shock(2.0)\n8.526315789473685\n\njulia> total_pressure_after_normal_shock(3.0)\n12.061224489795916","category":"page"},{"location":"api/normal_shock/#total*pressure*ratio*normal*shock","page":"Normal Shock Waves","title":"totalpressurerationormalshock","text":"","category":"section"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"total_pressure_ratio_normal_shock(M, gamma=1.4)","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Calculate the stagnation pressure ratio across a normal shock wave.","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Arguments:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"M::Real: Upstream Mach number\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Returns:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Float64: Stagnation pressure ratio (p₀₂/p₀₁)","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Example:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"julia> total_pressure_ratio_normal_shock(2.0)\n0.7208738938053097\n\njulia> total_pressure_ratio_normal_shock(3.0)\n0.32834049679486917","category":"page"},{"location":"api/normal_shock/#solve_normal","page":"Normal Shock Waves","title":"solve_normal","text":"","category":"section"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"solve_normal(M, gamma=1.4)","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Complete normal shock analysis - calculate all property changes across the shock.","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Arguments:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"M::Real: Upstream Mach number\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Returns:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"M2::Float64: Downstream Mach number\nrho2::Float64: Density ratio (ρ₂/ρ₁)\np2::Float64: Pressure ratio (p₂/p₁)\np0ratio::Float64: Stagnation pressure ratio (p₀₂/p₀₁)","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Example:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"julia> sol = solve_normal(2.5)\n(M2 = 0.5130161854439888, rho2_ratio = 3.2, p2_ratio = 7.125, p0_ratio = 0.49949999999999994)\n\njulia> println(\"M₂ = $(round(sol.M2, digits=3))\")\nM₂ = 0.513\n\njulia> println(\"Pressure loss = $(round((1-sol.p0_ratio)*100, digits=1))%\")\nPressure loss = 50.1%","category":"page"},{"location":"api/normal_shock/#Applications","page":"Normal Shock Waves","title":"Applications","text":"","category":"section"},{"location":"api/normal_shock/#Supersonic-Inlet-Analysis","page":"Normal Shock Waves","title":"Supersonic Inlet Analysis","text":"","category":"section"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Analyze normal shock for inlet deceleration:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"# Flight conditions\nM_flight = 2.2\nalt = 11000  # m\n\n# Get atmospheric properties (simplified)\np_amb = 22600   # Pa at 11 km\nT_amb = 216.7   # K at 11 km\n\n# Shock analysis for inlet\nsol = solve_normal(M_flight)\n\n# Recovery factor\neta_inlet = sol.p0_ratio  # Inlet total pressure recovery\n\nprintln(\"Supersonic Inlet Analysis:\")\nprintln(\"Flight Mach: $M_flight\")\nprintln(\"Downstream Mach: $(round(sol.M2, digits=3))\")\nprintln(\"Inlet total pressure recovery: $(round(eta_inlet, digits=3))\")\nprintln(\"Pressure recovery: $(round(eta_inlet*100, digits=1))%\")","category":"page"},{"location":"api/normal_shock/#Shock-Strength-Analysis","page":"Normal Shock Waves","title":"Shock Strength Analysis","text":"","category":"section"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Analyze how shock strength varies with upstream Mach number:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"println(\"M₁\\tM₂\\tp₂/p₁\\tρ₂/ρ₁\\tT₂/T₁\\tp₀₂/p₀₁\\tLoss %\")\nprintln(\"---\\t----\\t-----\\t-----\\t-----\\t------\\t------\")\n\nfor M1 in 1.1:0.2:4.0\n    sol = solve_normal(M1)\n    T_ratio = temperature_ratio_normal_shock(M1)\n    loss_percent = (1 - sol.p0_ratio) * 100\n    \n    println(\"$(round(M1, digits=1))\\t$(round(sol.M2, digits=2))\\t$(round(sol.p2_ratio, digits=2))\\t$(round(sol.rho2_ratio, digits=2))\\t$(round(T_ratio, digits=2))\\t$(round(sol.p0_ratio, digits=3))\\t$(round(loss_percent, digits=1))\")\nend","category":"page"},{"location":"api/normal_shock/#Pitot-Tube-Behind-Normal-Shock","page":"Normal Shock Waves","title":"Pitot Tube Behind Normal Shock","text":"","category":"section"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Calculate pitot pressure measurements behind a normal shock:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"# Flight conditions\nM1 = 2.0\np_static = 25000  # Pa (ambient static pressure)\n\n# Normal shock analysis\nsol = solve_normal(M1)\n\n# Pressures\np2_static = p_static * sol.p2_ratio           # Static pressure behind shock\np02_pitot = p2_static * total_to_static_pressure_ratio(sol.M2)    # Pitot pressure behind shock\n\n# Compare with direct pitot measurement (incorrect for supersonic)\np01_direct = p_static * total_to_static_pressure_ratio(M1)    # What pitot would read in supersonic flow\n\nprintln(\"Pitot Tube Analysis in Supersonic Flow:\")\nprintln(\"Freestream Mach: $M1\")\nprintln(\"Ambient static pressure: $(p_static/1000) kPa\")\n\nprintln(\"\\nCorrect measurement (behind shock):\")\nprintln(\"  Static pressure behind shock: $(round(p2_static/1000, digits=1)) kPa\")\nprintln(\"  Pitot pressure: $(round(p02_pitot/1000, digits=1)) kPa\")\n\nprintln(\"\\nIncorrect direct measurement:\")\nprintln(\"  Direct pitot reading: $(round(p01_direct/1000, digits=1)) kPa\")\nprintln(\"  Error factor: $(round(p01_direct/p02_pitot, digits=2))\")","category":"page"},{"location":"api/normal_shock/#Shock-Tube-Calculations","page":"Normal Shock Waves","title":"Shock Tube Calculations","text":"","category":"section"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Calculate conditions in a shock tube:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"# Initial conditions (driven section)\np4 = 101325   # Pa (atmospheric)\nT4 = 300      # K\nM_shock = 5.0 # Shock Mach number\n\n# Calculate conditions behind shock (region 2)\nsol = solve_normal(M_shock)\nT_ratio = temperature_ratio_normal_shock(M_shock)\n\np2 = p4 * sol.p2_ratio\nT2 = T4 * T_ratio\n\n# Contact surface velocity (region 2 and 3 velocity)\na4 = sqrt(1.4 * 287 * T4)  # Sound speed in region 4\nu_contact = a4 * M_shock * (1 - 1/sol.rho2_ratio)\n\nprintln(\"Shock Tube Analysis:\")\nprintln(\"Shock Mach number: $M_shock\")\nprintln(\"Initial pressure (region 4): $(p4/1000) kPa\")\nprintln(\"Initial temperature (region 4): $T4 K\")\n\nprintln(\"\\nBehind shock (region 2):\")\nprintln(\"  Pressure: $(round(p2/1000, digits=1)) kPa\")\nprintln(\"  Temperature: $(round(T2, digits=1)) K\")\nprintln(\"  Density ratio: $(round(sol.rho2_ratio, digits=2))\")\n\nprintln(\"\\nContact surface velocity: $(round(u_contact, digits=1)) m/s\")","category":"page"},{"location":"api/normal_shock/#Different-Gases","page":"Normal Shock Waves","title":"Different Gases","text":"","category":"section"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Calculate shock properties for different gases:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"M1 = 2.5\ngases = [\n    (\"Air\", 1.4),\n    (\"Helium\", 1.67),\n    (\"Argon\", 1.67),\n    (\"CO₂\", 1.3)\n]\n\nprintln(\"Gas\\tγ\\tM₂\\tp₂/p₁\\tρ₂/ρ₁\\tp₀₂/p₀₁\")\nprintln(\"---\\t----\\t----\\t-----\\t-----\\t------\")\n\nfor (gas, gamma) in gases\n    M2 = mach_after_normal_shock(M1, gamma)\n    p_ratio = pressure_ratio_normal_shock(M1, gamma)\n    rho_ratio = density_ratio_normal_shock(M1, gamma)\n    p0_ratio = total_pressure_ratio_normal_shock(M1, gamma)\n    \n    println(\"$gas\\t$gamma\\t$(round(M2, digits=3))\\t$(round(p_ratio, digits=2))\\t$(round(rho_ratio, digits=2))\\t$(round(p0_ratio, digits=3))\")\nend","category":"page"},{"location":"api/normal_shock/#Validation-Examples","page":"Normal Shock Waves","title":"Validation Examples","text":"","category":"section"},{"location":"api/normal_shock/#Conservation-Laws-Check","page":"Normal Shock Waves","title":"Conservation Laws Check","text":"","category":"section"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Verify that the Rankine-Hugoniot relations satisfy conservation laws:","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"M1 = 3.0\ngamma = 1.4\n\n# Calculate all ratios\nM2 = mach_after_normal_shock(M1, gamma)\np_ratio = pressure_ratio_normal_shock(M1, gamma)\nrho_ratio = density_ratio_normal_shock(M1, gamma)\nT_ratio = temperature_ratio_normal_shock(M1, gamma)\n\n# Check ideal gas law: p₂/p₁ = (ρ₂/ρ₁)(T₂/T₁)\nideal_gas_check = p_ratio - (rho_ratio * T_ratio)\n\n# Check momentum conservation\n# Should satisfy: p₂ + ρ₂u₂² = p₁ + ρ₁u₁²\n# Where u = Ma for convenience (normalized by sound speed)\n\nprintln(\"Conservation Laws Verification:\")\nprintln(\"Ideal gas law check: $(round(ideal_gas_check, digits=10))\")\nprintln(\"(Should be ≈ 0)\")","category":"page"},{"location":"api/normal_shock/#Limitations-and-Considerations","page":"Normal Shock Waves","title":"Limitations and Considerations","text":"","category":"section"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"One-dimensional flow: Assumes uniform properties across the shock front\nSteady flow: Time-invariant shock position\nPerfect gas: Constant specific heats and ideal gas behavior\nNo viscous effects: Inviscid flow assumption\nThin shock: Shock thickness much smaller than characteristic length scales","category":"page"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"For three-dimensional effects, unsteady phenomena, or real gas behavior, additional analysis methods are required.","category":"page"},{"location":"api/normal_shock/#See-Also","page":"Normal Shock Waves","title":"See Also","text":"","category":"section"},{"location":"api/normal_shock/","page":"Normal Shock Waves","title":"Normal Shock Waves","text":"Oblique Shock Waves: For angled shock waves\nIsentropic Relations: For shock-free flow analysis\nPrandtl-Meyer Expansion: For expansion waves\nNozzle Analysis: For internal flow applications","category":"page"},{"location":"api/oblique_shock/#Oblique-Shock-Waves","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"","category":"section"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"This module provides functions for analyzing oblique shock waves, which are compression waves that occur at an angle to the flow direction in supersonic flows.","category":"page"},{"location":"api/oblique_shock/#Overview","page":"Oblique Shock Waves","title":"Overview","text":"","category":"section"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Oblique shock waves are compression phenomena that occur when supersonic flow encounters a wedge, cone, or other angular obstruction. Unlike normal shocks, oblique shocks:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Deflect the flow through a specific angle\nCan have weak or strong solutions\nMaintain supersonic flow downstream (for weak shocks)\nAre characterized by the shock angle β and deflection angle θ\nHave a maximum deflection angle for each upstream Mach number","category":"page"},{"location":"api/oblique_shock/#Theory","page":"Oblique Shock Waves","title":"Theory","text":"","category":"section"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Oblique shock waves are governed by the θ-β-M relationships derived from conservation laws:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Shock angle relation: tantheta = 2cotbeta fracM_1^2sin^2beta - 1M_1^2(gamma + cos 2beta) + 2","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Downstream Mach number: M_2 = fracM_1sin(beta - theta)sinbeta sqrtfrac1 + fracgamma-12M_1^2sin^2betagamma M_1^2sin^2beta - fracgamma-12","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Property ratios (same as normal shock with M_1n = M_1sinbeta):","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Pressure: fracp_2p_1 = 1 + frac2gammagamma+1(M_1^2sin^2beta - 1)\nDensity: fracrho_2rho_1 = frac(gamma+1)M_1^2sin^2beta2 + (gamma-1)M_1^2sin^2beta","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Maximum deflection angle: theta_max = arcsinleft(frac1M_1right) - arccosleft(fracgamma+12gamma M_1^2right) + arccosleft(sqrtfrac(gamma+1)^2M_1^4 - 4(M_1^2-1)4gamma M_1^2(gamma M_1^2 - (gamma-1)2)right)","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Where:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"theta = flow deflection angle\nbeta = shock wave angle\nM_1 = upstream Mach number\ngamma = specific heat ratio","category":"page"},{"location":"api/oblique_shock/#Functions","page":"Oblique Shock Waves","title":"Functions","text":"","category":"section"},{"location":"api/oblique_shock/#CompAir.theta_beta","page":"Oblique Shock Waves","title":"CompAir.theta_beta","text":"theta_beta(beta::Real, M::Real, gamma::Real=1.4)\n\nθ-β-M 함수를 이용하여, β, M을 이용하여 θ를 계산한다.\n\nArguments\n\nbeta::Real: 경사 충격파 각도 (degree)\nM::Real: 충격파 전 마하수\ngamma::Real=1.4: 비열비\n\nReturns\n\ntheta::Float64: 쇄기 각도 (degree)\n\n\n\n\n\n","category":"function"},{"location":"api/oblique_shock/#CompAir.oblique_beta_weak","page":"Oblique Shock Waves","title":"CompAir.oblique_beta_weak","text":"oblique_beta_weak(M::Real, theta::Real, gamma::Real=1.4)\n\nθ-β-M 관계식을 수치적으로 계산하여 마하수 M, 쐐기 각도 θ 일 때 경사 충격파 각도 β를 계산한다.\n\nArguments\n\nM::Real: 충격파 전 마하수\ntheta::Real: 쇄기 각도 (degree)\ngamma::Real=1.4: 비열비\n\nReturns\n\nbeta::Float64: 경사 충격파 각도 (degree)\n\n\n\n\n\n","category":"function"},{"location":"api/oblique_shock/#CompAir.theta_max","page":"Oblique Shock Waves","title":"CompAir.theta_max","text":"theta_max(M::Real, gamma::Real=1.4)\n\n주어진 마하수 M에 대해서 θ-β-M 관계식에서 Weak 해가 존재할 수 있는 최대 쇄기각 θ를 계산한다.\n\nArguments\n\nM::Real: 충격파 전 마하수\ngamma::Real=1.4: 비열비\n\nReturns\n\ntheta::Float64: 최대 쇄기 각도 (degree)\n\n\n\n\n\n","category":"function"},{"location":"api/oblique_shock/#CompAir.Mn1","page":"Oblique Shock Waves","title":"CompAir.Mn1","text":"Mn1(M::Real, theta::Real, gamma::Real=1.4)\n\n마하수 M, 쐐기각 θ 일때 발생한 경사충격파에 수직인 마하수\n\nArguments\n\nM::Real: 충격파 전 마하수\ntheta::Real: 쇄기 각도 (degree)\ngamma::Real=1.4: 비열비\n\nReturns\n\nMn1::Float64: 경사 충격파에 수직인 마하수\n\n\n\n\n\n","category":"function"},{"location":"api/oblique_shock/#CompAir.oblique_mach2","page":"Oblique Shock Waves","title":"CompAir.oblique_mach2","text":"oblique_mach2(M::Real, theta::Real, gamma::Real=1.4)\n\n마하수 M, 쐐기각 θ 일때 발생한 경사충격파를 지난 후 마하수\n\nArguments\n\nM::Real: 충격파 전 마하수\ntheta::Real: 쇄기 각도 (degree)\ngamma::Real=1.4: 비열비\n\nReturns\n\nM2::Float64: 경사 충격파후 마하수\n\n\n\n\n\n","category":"function"},{"location":"api/oblique_shock/#CompAir.solve_oblique","page":"Oblique Shock Waves","title":"CompAir.solve_oblique","text":"solve_oblique(M::Real, theta::Real, gamma::Real=1.4)\n\n마하수 M, 쐐기각 θ 일때 발생한 경사충격파를 지난 후 물성치 계산\n\nArguments\n\nM::Real: 충격파 전 마하수\ntheta::Real: 쇄기 각도 (degree)\ngamma::Real=1.4: 비열비\n\nReturns\n\nNamedTuple\nM2::Float64: 수직충격파 후 마하수\nrho2::Float64: 수직충격파 전/후 밀도비\np2::Float64: 수직충격파 전/후 압력비\np0ratio::Float64: 수직충격파 전/후 전압력비\nbeta::Float64: 경사 충격파 각도 (degree)\n\n\n\n\n\n","category":"function"},{"location":"api/oblique_shock/#Function-Details","page":"Oblique Shock Waves","title":"Function Details","text":"","category":"section"},{"location":"api/oblique_shock/#theta_beta","page":"Oblique Shock Waves","title":"theta_beta","text":"","category":"section"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"theta_beta(beta, M, gamma=1.4)","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Calculate the deflection angle θ from shock angle β and Mach number using the θ-β-M relationship.","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Arguments:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"beta::Real: Shock angle in degrees\nM::Real: Upstream Mach number\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Returns:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Float64: Deflection angle θ in degrees","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Formula: tantheta = 2cotbeta fracM_1^2sin^2beta - 1M_1^2(gamma + cos 2beta) + 2","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Example:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"julia> theta_beta(45.0, 2.0)\n11.309932474020215\n\njulia> theta_beta(60.0, 3.0)\n28.040946798183083","category":"page"},{"location":"api/oblique_shock/#oblique*beta*weak","page":"Oblique Shock Waves","title":"obliquebetaweak","text":"","category":"section"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"oblique_beta_weak(M, theta, gamma=1.4)","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Calculate the weak shock angle β for given Mach number and deflection angle using numerical solution of the θ-β-M relationship.","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Arguments:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"M::Real: Upstream Mach number\ntheta::Real: Deflection angle in degrees\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Returns:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Float64: Weak shock angle β in degrees","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Example:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"julia> oblique_beta_weak(2.0, 10.0)\n39.31417164408201\n\njulia> oblique_beta_weak(3.0, 20.0)\n47.40460643973166","category":"page"},{"location":"api/oblique_shock/#theta_max","page":"Oblique Shock Waves","title":"theta_max","text":"","category":"section"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"theta_max(M, gamma=1.4)","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Calculate the maximum deflection angle for which a weak oblique shock can exist at the given Mach number.","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Arguments:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"M::Real: Upstream Mach number\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Returns:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Float64: Maximum deflection angle in degrees","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Example:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"julia> theta_max(2.0)\n23.078692262638353\n\njulia> theta_max(3.0)\n34.07775155814027","category":"page"},{"location":"api/oblique_shock/#Mn1","page":"Oblique Shock Waves","title":"Mn1","text":"","category":"section"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Mn1(M, theta, gamma=1.4)","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Calculate the normal component of the upstream Mach number (component perpendicular to the shock wave).","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Arguments:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"M::Real: Upstream Mach number\ntheta::Real: Deflection angle in degrees\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Returns:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Float64: Normal Mach number component","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Formula: M_n1 = M_1 sinbeta","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Example:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"julia> Mn1(2.0, 10.0)\n1.2649110640673516\n\njulia> Mn1(3.0, 15.0)\n2.0788046194771835","category":"page"},{"location":"api/oblique_shock/#oblique_mach2","page":"Oblique Shock Waves","title":"oblique_mach2","text":"","category":"section"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"oblique_mach2(M, theta, gamma=1.4)","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Calculate the downstream Mach number after an oblique shock wave.","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Arguments:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"M::Real: Upstream Mach number\ntheta::Real: Deflection angle in degrees\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Returns:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Float64: Downstream Mach number","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Example:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"julia> oblique_mach2(2.0, 10.0)\n1.640880221070567\n\njulia> oblique_mach2(3.0, 20.0)\n2.1862348686827446","category":"page"},{"location":"api/oblique_shock/#solve_oblique","page":"Oblique Shock Waves","title":"solve_oblique","text":"","category":"section"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"solve_oblique(M, theta, gamma=1.4)","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Complete oblique shock analysis - calculate all property changes across the shock.","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Arguments:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"M::Real: Upstream Mach number\ntheta::Real: Deflection angle in degrees\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Returns:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"M2::Float64: Downstream Mach number\nrho2::Float64: Density ratio (ρ₂/ρ₁)\np2::Float64: Pressure ratio (p₂/p₁)\np0ratio::Float64: Stagnation pressure ratio (p₀₂/p₀₁)\nbeta::Float64: Shock angle in degrees","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Example:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"julia> sol = solve_oblique(2.5, 15.0)\n(M2 = 2.0648650289095266, rho2_ratio = 1.6862745098039214, p2_ratio = 2.40625, p0_ratio = 0.9564285714285714, beta = 41.81031489577775)\n\njulia> println(\"M₂ = $(round(sol.M2, digits=3)), β = $(round(sol.beta, digits=1))°\")\nM₂ = 2.065, β = 41.8°","category":"page"},{"location":"api/oblique_shock/#Applications","page":"Oblique Shock Waves","title":"Applications","text":"","category":"section"},{"location":"api/oblique_shock/#Diamond-Airfoil-Analysis","page":"Oblique Shock Waves","title":"Diamond Airfoil Analysis","text":"","category":"section"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Analyze flow over a symmetric diamond airfoil:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"M_inf = 2.5\nhalf_angle = 8.0  # degrees\nalpha = 2.0       # angle of attack, degrees\n\nprintln(\"Diamond Airfoil Analysis:\")\nprintln(\"Freestream Mach: $M_inf\")\nprintln(\"Half-angle: $half_angle°\")\nprintln(\"Angle of attack: $alpha°\")\n\n# Upper surface\ntheta_upper = half_angle + alpha\nsol_upper = solve_oblique(M_inf, theta_upper)\n\nprintln(\"\\nUpper Surface (Leading Edge):\")\nprintln(\"Deflection angle: $(round(theta_upper, digits=1))°\")\nprintln(\"Shock angle β₁ = $(round(sol_upper.beta, digits=1))°\")\nprintln(\"Surface Mach: $(round(sol_upper.M2, digits=3))\")\nprintln(\"Pressure ratio: $(round(sol_upper.p2_ratio, digits=3))\")\n\n# Lower surface  \ntheta_lower = half_angle - alpha\nsol_lower = solve_oblique(M_inf, theta_lower)\n\nprintln(\"\\nLower Surface (Leading Edge):\")\nprintln(\"Deflection angle: $(round(theta_lower, digits=1))°\")\nprintln(\"Shock angle β₂ = $(round(sol_lower.beta, digits=1))°\")\nprintln(\"Surface Mach: $(round(sol_lower.M2, digits=3))\")\nprintln(\"Pressure ratio: $(round(sol_lower.p2_ratio, digits=3))\")\n\n# Pressure coefficients\nCp_upper = 2/(1.4*M_inf^2) * (sol_upper.p2_ratio - 1)\nCp_lower = 2/(1.4*M_inf^2) * (sol_lower.p2_ratio - 1)\n\nprintln(\"\\nPressure Coefficients:\")\nprintln(\"Upper surface: $(round(Cp_upper, digits=4))\")\nprintln(\"Lower surface: $(round(Cp_lower, digits=4))\")\nprintln(\"Lift coefficient (approx): $(round(Cp_lower - Cp_upper, digits=4))\")","category":"page"},{"location":"api/oblique_shock/#Shock-Shock-Interaction","page":"Oblique Shock Waves","title":"Shock-Shock Interaction","text":"","category":"section"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Analyze intersection of two oblique shocks:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"# Two wedges in series\nM1 = 3.0\ntheta1 = 12.0  # First wedge angle\ntheta2 = 8.0   # Second wedge angle\n\nprintln(\"Shock-Shock Interaction:\")\nprintln(\"Initial Mach: $M1\")\n\n# First shock\nsol1 = solve_oblique(M1, theta1)\n\nprintln(\"\\nFirst Shock (θ₁ = $theta1°):\")\nprintln(\"Shock angle: $(round(sol1.beta, digits=1))°\")\nprintln(\"M₂ = $(round(sol1.M2, digits=3))\")\nprintln(\"p₂/p₁ = $(round(sol1.p2_ratio, digits=3))\")\n\n# Second shock  \nsol2 = solve_oblique(sol1.M2, theta2)\n\nprintln(\"\\nSecond Shock (θ₂ = $theta2°):\")\nprintln(\"Shock angle: $(round(sol2.beta, digits=1))°\")\nprintln(\"M₃ = $(round(sol2.M2, digits=3))\")\nprintln(\"p₃/p₂ = $(round(sol2.p2_ratio, digits=3))\")\n\n# Overall results\ntotal_deflection = theta1 + theta2\ntotal_pressure_ratio = sol1.p2_ratio * sol2.p2_ratio\ntotal_loss = 1 - (sol1.p0_ratio * sol2.p0_ratio)\n\nprintln(\"\\nOverall Results:\")\nprintln(\"Total deflection: $(round(total_deflection, digits=1))°\")\nprintln(\"Total pressure ratio: $(round(total_pressure_ratio, digits=3))\")\nprintln(\"Total pressure loss: $(round(total_loss*100, digits=1))%\")","category":"page"},{"location":"api/oblique_shock/#Maximum-Deflection-Analysis","page":"Oblique Shock Waves","title":"Maximum Deflection Analysis","text":"","category":"section"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Find the maximum deflection angle for different Mach numbers:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"println(\"M₁\\tθₘₐₓ (°)\")\nprintln(\"---\\t-------\")\n\nfor M1 in 1.2:0.2:4.0\n    theta_maximum = theta_max(M1)\n    println(\"$(round(M1, digits=1))\\t$(round(theta_maximum, digits=1))\")\nend","category":"page"},{"location":"api/oblique_shock/#Wedge-Design-Analysis","page":"Oblique Shock Waves","title":"Wedge Design Analysis","text":"","category":"section"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Design analysis for supersonic vehicle:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"# Vehicle nose cone design\nM_cruise = 3.0\nL_wedge = 2.0  # meters\nh_wedge = 0.3  # meters\n\n# Calculate wedge half-angle\ntheta_wedge = atand(h_wedge / L_wedge)\n\nprintln(\"Supersonic Vehicle Nose Analysis:\")\nprintln(\"Cruise Mach: $M_cruise\")\nprintln(\"Wedge length: $L_wedge m\")\nprintln(\"Wedge height: $h_wedge m\")\nprintln(\"Wedge half-angle: $(round(theta_wedge, digits=1))°\")\n\n# Check if shock is possible\nmax_deflection = theta_max(M_cruise)\nprintln(\"Maximum deflection: $(round(max_deflection, digits=1))°\")\n\nif theta_wedge <= max_deflection\n    sol = solve_oblique(M_cruise, theta_wedge)\n    \n    println(\"\\nShock Properties:\")\n    println(\"Shock angle: $(round(sol.beta, digits=1))°\")\n    println(\"Downstream Mach: $(round(sol.M2, digits=3))\")\n    println(\"Pressure coefficient: $(round(2/(1.4*M_cruise^2)*(sol.p2_ratio-1), digits=4))\")\n    println(\"Total pressure loss: $(round((1-sol.p0_ratio)*100, digits=2))%\")\nelse\n    println(\"\\nERROR: Deflection angle exceeds maximum!\")\n    println(\"Detached shock will form.\")\nend","category":"page"},{"location":"api/oblique_shock/#Supersonic-Inlet-Analysis","page":"Oblique Shock Waves","title":"Supersonic Inlet Analysis","text":"","category":"section"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Calculate oblique shock system for supersonic inlet:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"# Multi-shock inlet design\nM0 = 2.8  # Flight Mach\ntarget_M = 1.3  # Target subsonic Mach after final normal shock\n\nprintln(\"Supersonic Inlet Design:\")\nprintln(\"Flight Mach: $M0\")\nprintln(\"Target inlet Mach: $target_M\")\n\n# Two-shock external compression\ntheta1 = 8.0   # First ramp angle\ntheta2 = 12.0  # Second ramp angle\n\n# First oblique shock\nsol1 = solve_oblique(M0, theta1)\n\n# Second oblique shock  \nsol2 = solve_oblique(sol1.M2, theta2)\n\n# Final normal shock to subsonic\nsol3 = solve_normal(sol2.M2)\n\nprintln(\"\\nShock System Analysis:\")\nprintln(\"External shock 1: β₁ = $(round(sol1.beta, digits=1))°, M₁ = $(round(sol1.M2, digits=3))\")\nprintln(\"External shock 2: β₂ = $(round(sol2.beta, digits=1))°, M₂ = $(round(sol2.M2, digits=3))\")\nprintln(\"Terminal normal shock: M₃ = $(round(sol3.M2, digits=3))\")\n\n# Total pressure recovery\ntotal_recovery = sol1.p0_ratio * sol2.p0_ratio * sol3.p0_ratio\noverall_pressure_ratio = sol1.p2_ratio * sol2.p2_ratio * sol3.p2_ratio\n\nprintln(\"\\nInlet Performance:\")\nprintln(\"Total pressure recovery: $(round(total_recovery, digits=3))\")\nprintln(\"Static pressure ratio: $(round(overall_pressure_ratio, digits=2))\")\nprintln(\"Pressure recovery efficiency: $(round(total_recovery*100, digits=1))%\")","category":"page"},{"location":"api/oblique_shock/#Different-Gases","page":"Oblique Shock Waves","title":"Different Gases","text":"","category":"section"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Analyze oblique shocks in different gases:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"M1 = 2.5\ntheta = 15.0\n\ngases = [\n    (\"Air\", 1.4),\n    (\"Helium\", 1.67), \n    (\"Argon\", 1.67),\n    (\"CO₂\", 1.3)\n]\n\nprintln(\"Gas Effects on Oblique Shocks:\")\nprintln(\"M₁ = $M1, θ = $theta°\")\nprintln(\"Gas\\tγ\\tβ (°)\\tM₂\\tp₂/p₁\")\nprintln(\"---\\t----\\t-----\\t----\\t-----\")\n\nfor (gas, gamma) in gases\n    beta = oblique_beta_weak(M1, theta, gamma)\n    M2 = oblique_mach2(M1, theta, gamma)\n    \n    # Calculate pressure ratio using normal shock relations\n    Mn1 = M1 * sind(beta)\n    p_ratio = 1 + 2*gamma/(gamma+1) * (Mn1^2 - 1)\n    \n    println(\"$gas\\t$gamma\\t$(round(beta, digits=1))\\t$(round(M2, digits=3))\\t$(round(p_ratio, digits=2))\")\nend","category":"page"},{"location":"api/oblique_shock/#Validation-Examples","page":"Oblique Shock Waves","title":"Validation Examples","text":"","category":"section"},{"location":"api/oblique_shock/#Weak-vs-Strong-Shock-Solutions","page":"Oblique Shock Waves","title":"Weak vs Strong Shock Solutions","text":"","category":"section"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Compare weak and strong shock solutions for the same deflection:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"M1 = 2.0\ntheta = 10.0\n\n# Calculate weak shock angle\nbeta_weak = oblique_beta_weak(M1, theta)\n\nprintln(\"Shock Solutions for M₁ = $M1, θ = $theta°:\")\nprintln(\"Weak shock angle: $(round(beta_weak, digits=1))°\")\n\n# Analyze weak shock\nsol_weak = solve_oblique(M1, theta)\n\nprintln(\"\\nWeak Shock Properties:\")\nprintln(\"M₂ = $(round(sol_weak.M2, digits=3))\")\nprintln(\"p₂/p₁ = $(round(sol_weak.p2_ratio, digits=3))\")\nprintln(\"p₀₂/p₀₁ = $(round(sol_weak.p0_ratio, digits=3))\")","category":"page"},{"location":"api/oblique_shock/#Shock-Angle-vs-Deflection-Angle","page":"Oblique Shock Waves","title":"Shock Angle vs Deflection Angle","text":"","category":"section"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Plot the relationship between shock angle and deflection angle:","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"M1 = 2.5\nmax_theta = theta_max(M1)\n\nprintln(\"θ-β Relationship for M₁ = $M1:\")\nprintln(\"θ (°)\\tβ (°)\\tM₂\")\nprintln(\"-----\\t-----\\t----\")\n\nfor theta in 0:2:max_theta\n    if theta > 0\n        beta = oblique_beta_weak(M1, theta)\n        M2 = oblique_mach2(M1, theta)\n        println(\"$(round(theta, digits=1))\\t$(round(beta, digits=1))\\t$(round(M2, digits=3))\")\n    else\n        println(\"$(round(theta, digits=1))\\t$(round(asind(1/M1), digits=1))\\t$(round(M1, digits=3))\")\n    end\nend","category":"page"},{"location":"api/oblique_shock/#Limitations-and-Considerations","page":"Oblique Shock Waves","title":"Limitations and Considerations","text":"","category":"section"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Weak shock assumption: Most functions return weak shock solutions\nAttached shock: Assumes shock remains attached to the leading edge\nTwo-dimensional flow: Assumes infinite span or axisymmetric conditions\nPerfect gas: Constant specific heats and ideal gas behavior\nSteady flow: Time-invariant conditions\nInviscid flow: No boundary layer or viscous effects","category":"page"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"For detached shocks, strong shock solutions, or three-dimensional effects, specialized analysis methods are required.","category":"page"},{"location":"api/oblique_shock/#See-Also","page":"Oblique Shock Waves","title":"See Also","text":"","category":"section"},{"location":"api/oblique_shock/","page":"Oblique Shock Waves","title":"Oblique Shock Waves","text":"Normal Shock Waves: For perpendicular shock waves\nPrandtl-Meyer Expansion: For expansion around corners\nCone Shock Analysis: For axisymmetric geometries  \nIsentropic Relations: For shock-free flow regions","category":"page"},{"location":"api/intake/#Intake-Ramp-Analysis","page":"Intake Ramp Analysis","title":"Intake Ramp Analysis","text":"","category":"section"},{"location":"api/intake/","page":"Intake Ramp Analysis","title":"Intake Ramp Analysis","text":"This module provides functions for analyzing multi-ramp external-compression intakes. Each ramp is treated as an oblique shock and the downstream Mach number and property ratios are computed sequentially.","category":"page"},{"location":"api/intake/#Overview","page":"Intake Ramp Analysis","title":"Overview","text":"","category":"section"},{"location":"api/intake/","page":"Intake Ramp Analysis","title":"Intake Ramp Analysis","text":"A typical supersonic inlet uses one or more compression ramps to slow and compress the incoming flow. For an incoming Mach number M_infty and a list of ramp deflection angles theta_i, the intake is modeled by applying the oblique-shock relations at each ramp. The function intake_ramp returns the Mach number after each shock along with density, pressure, and total-pressure ratios.","category":"page"},{"location":"api/intake/#Functions","page":"Intake Ramp Analysis","title":"Functions","text":"","category":"section"},{"location":"api/intake/#CompAir.intake_ramp","page":"Intake Ramp Analysis","title":"CompAir.intake_ramp","text":"intake_ramp(M_infty::Real, ramp_angle::Vector{<:Real}, gamma::Real=1.4)\n\n주어진 램프 각도(rampangle) 배열과 자유류 마하수(Minfty), 비열비(gamma)에 대해 다단 램프 흡입구의 각 단에서의 마하수, 밀도비, 압력비, 전체압비, 충격파 각도를 계산한다.\n\nArguments\n\nM_infty::Real: 자유류(입구) 마하수\nramp_angle::Vector{<:Real}: 각 램프의 각도 (degree)\ngamma::Float64: 비열비(기본값 1.4)\n\nReturns\n\nNamedTuple:\nM: 각 단의 마하수 벡터 (길이 n+1)\nrho2_ratio: 각 단의 밀도비 벡터 (길이 n)\np2_ratio: 각 단의 압력비 벡터 (길이 n)\np0_ratio: 각 단의 전체압비 벡터 (길이 n)\nbeta: 각 단의 충격파 각도 벡터 (길이 n)\n\n\n\n\n\n","category":"function"},{"location":"api/intake/#Function-Details","page":"Intake Ramp Analysis","title":"Function Details","text":"","category":"section"},{"location":"api/intake/#intake_ramp","page":"Intake Ramp Analysis","title":"intake_ramp","text":"","category":"section"},{"location":"api/intake/","page":"Intake Ramp Analysis","title":"Intake Ramp Analysis","text":"intake_ramp(M_infty, ramp_angle, gamma=1.4)","category":"page"},{"location":"api/intake/","page":"Intake Ramp Analysis","title":"Intake Ramp Analysis","text":"Compute the flow properties across a series of intake ramps.","category":"page"},{"location":"api/intake/","page":"Intake Ramp Analysis","title":"Intake Ramp Analysis","text":"Arguments:","category":"page"},{"location":"api/intake/","page":"Intake Ramp Analysis","title":"Intake Ramp Analysis","text":"M_infty::Real: Freestream Mach number\nramp_angle::Vector{<:Real}: Ramp deflection angles in degrees\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/intake/","page":"Intake Ramp Analysis","title":"Intake Ramp Analysis","text":"Returns:","category":"page"},{"location":"api/intake/","page":"Intake Ramp Analysis","title":"Intake Ramp Analysis","text":"NamedTuple containing:\nM: Vector of Mach numbers at each stage (length n+1)\nrho2_ratio: Density ratios across each shock (length n)\np2_ratio: Pressure ratios across each shock (length n)\np0_ratio: Total-pressure ratios across each shock (length n)\nbeta: Shock angles in degrees (length n)","category":"page"},{"location":"api/intake/","page":"Intake Ramp Analysis","title":"Intake Ramp Analysis","text":"Algorithm:","category":"page"},{"location":"api/intake/","page":"Intake Ramp Analysis","title":"Intake Ramp Analysis","text":"Initialize the Mach number array with M_infty.\nFor each ramp angle, call solve_oblique to obtain the downstream Mach number and property ratios.\nCollect the results into vectors and return them as a NamedTuple.","category":"page"},{"location":"api/intake/","page":"Intake Ramp Analysis","title":"Intake Ramp Analysis","text":"Example:","category":"page"},{"location":"api/intake/","page":"Intake Ramp Analysis","title":"Intake Ramp Analysis","text":"julia> sol = intake_ramp(2.5, [10, 16])\n(M = [2.5, 2.085, ...], rho2_ratio = [...], p2_ratio = [...], p0_ratio = [...], beta = [...])","category":"page"},{"location":"api/intake/#See-Also","page":"Intake Ramp Analysis","title":"See Also","text":"","category":"section"},{"location":"api/intake/","page":"Intake Ramp Analysis","title":"Intake Ramp Analysis","text":"Oblique Shock Waves","category":"page"},{"location":"api/intake/","page":"Intake Ramp Analysis","title":"Intake Ramp Analysis","text":"```","category":"page"},{"location":"manual/quickstart/#Quick-Start","page":"Quick Start","title":"Quick Start","text":"","category":"section"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"This guide provides a quick introduction to CompAir.jl with basic usage patterns and simple examples.","category":"page"},{"location":"manual/quickstart/#Loading-the-Package","page":"Quick Start","title":"Loading the Package","text":"","category":"section"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"using CompAir","category":"page"},{"location":"manual/quickstart/#Basic-Concepts","page":"Quick Start","title":"Basic Concepts","text":"","category":"section"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"CompAir.jl provides functions for analyzing compressible flow phenomena. Most functions follow consistent naming conventions and parameter patterns:","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Mach number: Denoted as M or M1, M2 for upstream/downstream conditions\nHeat capacity ratio: gamma (default: 1.4 for air)\nAngles: Specified in degrees\nRatios: Property ratios like pressure, density, temperature","category":"page"},{"location":"manual/quickstart/#Isentropic-Flow-Relations","page":"Quick Start","title":"Isentropic Flow Relations","text":"","category":"section"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"For a flow at Mach 2.0, calculate the stagnation property ratios:","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"M = 2.0\n\n# Stagnation to static ratios\nT0_T = t0_over_t(M)        # Temperature ratio\np0_p = p0_over_p(M)        # Pressure ratio  \nrho0_rho = rho0_over_rho(M) # Density ratio\n\nprintln(\"Isentropic Relations at M = $M:\")\nprintln(\"T₀/T = $(round(T0_T, digits=3))\")\nprintln(\"p₀/p = $(round(p0_p, digits=3))\")\nprintln(\"ρ₀/ρ = $(round(rho0_rho, digits=3))\")","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Output:","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Isentropic Relations at M = 2.0:\nT₀/T = 1.8\np₀/p = 7.824\nρ₀/ρ = 4.347","category":"page"},{"location":"manual/quickstart/#Normal-Shock-Analysis","page":"Quick Start","title":"Normal Shock Analysis","text":"","category":"section"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Analyze a normal shock wave at Mach 3.0:","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"M1 = 3.0\n\n# Complete normal shock analysis\nM2, rho_ratio, p_ratio, p0_ratio = solve_normal(M1)\n\nprintln(\"Normal Shock at M₁ = $M1:\")\nprintln(\"M₂ = $(round(M2, digits=3))\")\nprintln(\"ρ₂/ρ₁ = $(round(rho_ratio, digits=3))\")\nprintln(\"p₂/p₁ = $(round(p_ratio, digits=3))\")\nprintln(\"p₀₂/p₀₁ = $(round(p0_ratio, digits=3))\")","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Output:","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Normal Shock at M₁ = 3.0:\nM₂ = 0.475\nρ₂/ρ₁ = 3.857\np₂/p₁ = 10.333\np₀₂/p₀₁ = 0.328","category":"page"},{"location":"manual/quickstart/#Oblique-Shock-Analysis","page":"Quick Start","title":"Oblique Shock Analysis","text":"","category":"section"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Calculate oblique shock properties for Mach 2.5 flow over a 15° wedge:","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"M1 = 2.5\ntheta = 15.0  # wedge angle in degrees\n\n# Solve oblique shock\nM2, rho_ratio, p_ratio, p0_ratio, beta = solve_oblique(M1, theta)\n\nprintln(\"Oblique Shock Analysis:\")\nprintln(\"M₁ = $M1, θ = $(theta)°\")\nprintln(\"Shock angle β = $(round(beta, digits=1))°\")\nprintln(\"M₂ = $(round(M2, digits=3))\")\nprintln(\"ρ₂/ρ₁ = $(round(rho_ratio, digits=3))\")\nprintln(\"p₂/p₁ = $(round(p_ratio, digits=3))\")","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Output:","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Oblique Shock Analysis:\nM₁ = 2.5, θ = 15.0°\nShock angle β = 36.9°\nM₂ = 1.874\nρ₂/ρ₁ = 1.867\np₂/p₁ = 2.468","category":"page"},{"location":"manual/quickstart/#Prandtl-Meyer-Expansion","page":"Quick Start","title":"Prandtl-Meyer Expansion","text":"","category":"section"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Calculate expansion wave properties for Mach 2.0 flow turning through 20°:","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"M1 = 2.0\ntheta = 20.0  # turning angle in degrees\n\n# Calculate downstream Mach number and pressure ratio\nM2 = expand_mach2(M1, theta)\np_ratio = expand_p2(M1, theta)\n\nprintln(\"Prandtl-Meyer Expansion:\")\nprintln(\"M₁ = $M1 → M₂ = $(round(M2, digits=3))\")\nprintln(\"p₁/p₂ = $(round(p_ratio, digits=3))\")","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Output:","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Prandtl-Meyer Expansion:\nM₁ = 2.0 → M₂ = 2.831\np₁/p₂ = 0.275","category":"page"},{"location":"manual/quickstart/#Atmospheric-Properties","page":"Quick Start","title":"Atmospheric Properties","text":"","category":"section"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Calculate atmospheric conditions at different altitudes using the US Standard Atmosphere 1976:","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"# Calculate properties at sea level and 11 km altitude\naltitudes = [0.0, 11.0]  # km\n\nfor alt in altitudes\n    density, pressure, temperature, asound, viscosity = atmos1976_at(alt)\n    \n    println(\"Altitude: $(alt) km\")\n    println(\"  Density: $(round(density, digits=3)) kg/m³\")\n    println(\"  Pressure: $(round(pressure/1000, digits=1)) kPa\")\n    println(\"  Temperature: $(round(temperature, digits=1)) K\")\n    println(\"  Speed of sound: $(round(asound, digits=1)) m/s\")\n    println()\nend","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Output:","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Altitude: 0.0 km\n  Density: 1.225 kg/m³\n  Pressure: 101.3 kPa\n  Temperature: 288.2 K\n  Speed of sound: 340.3 m/s\n\nAltitude: 11.0 km\n  Density: 0.364 kg/m³\n  Pressure: 22.6 kPa\n  Temperature: 216.7 K\n  Speed of sound: 295.1 m/s","category":"page"},{"location":"manual/quickstart/#Nozzle-Flow-Analysis","page":"Quick Start","title":"Nozzle Flow Analysis","text":"","category":"section"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Analyze nozzle flow for a given area ratio:","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"# Design exit Mach number\nM_exit = 3.0\narea_ratio = area_ratio_at(M_exit)\n\nprintln(\"Nozzle Design:\")\nprintln(\"Exit Mach number: $M_exit\")\nprintln(\"Area ratio A/A*: $(round(area_ratio, digits=2))\")\n\n# Find Mach numbers for given area ratio\nA_ratio = 5.0\nM_subsonic = mach_by_area_ratio(A_ratio, 1.4, 0.1)    # subsonic solution\nM_supersonic = mach_by_area_ratio(A_ratio, 1.4, 2.0)  # supersonic solution\n\nprintln(\"\\nFor A/A* = $A_ratio:\")\nprintln(\"Subsonic M = $(round(M_subsonic, digits=3))\")\nprintln(\"Supersonic M = $(round(M_supersonic, digits=3))\")","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Output:","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Nozzle Design:\nExit Mach number: 3.0\nArea ratio A/A*: 4.23\n\nFor A/A* = 5.0:\nSubsonic M = 0.117\nSupersonic M = 3.175","category":"page"},{"location":"manual/quickstart/#Working-with-Different-Gases","page":"Quick Start","title":"Working with Different Gases","text":"","category":"section"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Most functions accept a gamma parameter for different gases:","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"M = 2.0\n\n# Air (γ = 1.4, default)\nT0_T_air = t0_over_t(M)\n\n# Helium (γ ≈ 1.67)\nT0_T_helium = t0_over_t(M, 1.67)\n\nprintln(\"Temperature ratios at M = $M:\")\nprintln(\"Air (γ=1.4): $(round(T0_T_air, digits=3))\")\nprintln(\"Helium (γ=1.67): $(round(T0_T_helium, digits=3))\")","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Output:","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Temperature ratios at M = 2.0:\nAir (γ=1.4): 1.8\nHelium (γ=1.67): 2.34","category":"page"},{"location":"manual/quickstart/#Common-Patterns","page":"Quick Start","title":"Common Patterns","text":"","category":"section"},{"location":"manual/quickstart/#Error-Handling","page":"Quick Start","title":"Error Handling","text":"","category":"section"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Functions will throw errors for invalid inputs:","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"try\n    # This will fail - can't have oblique shock with impossible deflection\n    solve_oblique(1.5, 45.0)  # θ too large for this Mach number\ncatch e\n    println(\"Error: \", e)\nend","category":"page"},{"location":"manual/quickstart/#Default-Parameters","page":"Quick Start","title":"Default Parameters","text":"","category":"section"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Most functions use sensible defaults:","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"# These are equivalent\np0_p_1 = p0_over_p(2.0, 1.4)  # explicit gamma\np0_p_2 = p0_over_p(2.0)       # default gamma=1.4\n\nprintln(p0_p_1 == p0_p_2)  # true","category":"page"},{"location":"manual/quickstart/#Next-Steps","page":"Quick Start","title":"Next Steps","text":"","category":"section"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Now that you understand the basics:","category":"page"},{"location":"manual/quickstart/","page":"Quick Start","title":"Quick Start","text":"Explore the Examples for more complex scenarios\nCheck the source code for detailed function documentation with docstrings\nRefer to the README.md for complete API reference\nLook at the test files for additional usage examples","category":"page"},{"location":"api/isentropic/#Isentropic-Relations","page":"Isentropic Relations","title":"Isentropic Relations","text":"","category":"section"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"This module provides functions for calculating isentropic flow relations, which describe the relationships between flow properties in compressible flow without heat transfer or friction.","category":"page"},{"location":"api/isentropic/#Overview","page":"Isentropic Relations","title":"Overview","text":"","category":"section"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Isentropic flow relations are fundamental to compressible flow analysis. They relate static and stagnation (total) properties through the Mach number for flows where entropy remains constant. These relationships are essential for:","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Nozzle design and analysis\nPitot tube measurements\nFlow property calculations\nWind tunnel calibration","category":"page"},{"location":"api/isentropic/#Theory","page":"Isentropic Relations","title":"Theory","text":"","category":"section"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"For an ideal gas undergoing isentropic flow, the relationships between stagnation and static properties are:","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Temperature: fracT_0T = 1 + fracgamma-12M^2\nPressure: fracp_0p = left(1 + fracgamma-12M^2right)^fracgammagamma-1\nDensity: fracrho_0rho = left(1 + fracgamma-12M^2right)^frac1gamma-1","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Where:","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"M is mach number\ngamma is specific heat ratio (1.4 for air at standard conditions)\nSubscript 0 denotes stagnation conditions","category":"page"},{"location":"api/isentropic/#Functions","page":"Isentropic Relations","title":"Functions","text":"","category":"section"},{"location":"api/isentropic/#CompAir.total_to_static_temperature_ratio","page":"Isentropic Relations","title":"CompAir.total_to_static_temperature_ratio","text":"total_to_static_temperature_ratio(M::Real, gamma::Real=1.4)\n\nCalculates the total-to-static temperature ratio for a given Mach number.\n\nArguments\n\nM::Real: Mach number\ngamma::Real=1.4: Specific heat ratio\n\nReturns\n\nt0/t::Float64: Total-to-static temperature ratio\n\n\n\n\n\n","category":"function"},{"location":"api/isentropic/#CompAir.total_to_static_pressure_ratio","page":"Isentropic Relations","title":"CompAir.total_to_static_pressure_ratio","text":"total_to_static_pressure_ratio(M::Real, gamma::Real=1.4)\n\nCalculates the total-to-static pressure ratio for a given Mach number.\n\nArguments\n\nM::Real: Mach number\ngamma::Real=1.4: Specific heat ratio\n\nReturns\n\np0/p::Float64: Total-to-static pressure ratio\n\n\n\n\n\n","category":"function"},{"location":"api/isentropic/#CompAir.total_to_static_density_ratio","page":"Isentropic Relations","title":"CompAir.total_to_static_density_ratio","text":"total_to_static_density_ratio(M::Real, gamma::Real=1.4)\n\nCalculates the total-to-static density ratio for a given Mach number.\n\nArguments\n\nM::Real: Mach number\ngamma::Real=1.4: Specific heat ratio\n\nReturns\n\nrho0/rho::Float64: Total-to-static density ratio\n\n\n\n\n\n","category":"function"},{"location":"api/isentropic/#Function-Details","page":"Isentropic Relations","title":"Function Details","text":"","category":"section"},{"location":"api/isentropic/#total*to*static*temperature*ratio","page":"Isentropic Relations","title":"totaltostatictemperatureratio","text":"","category":"section"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"total_to_static_temperature_ratio(M, gamma=1.4)","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Calculate the stagnation to static temperature ratio for isentropic flow.","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Arguments:","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"M::Real: Mach number\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Returns:","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Float64: Stagnation to static temperature ratio (T₀/T)","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Formula: fracT_0T = 1 + fracgamma-12M^2","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Example:","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"julia> total_to_static_temperature_ratio(2.0)\n1.8\n\njulia> total_to_static_temperature_ratio(1.5, 1.67)  # Helium\n2.005","category":"page"},{"location":"api/isentropic/#total*to*static*pressure*ratio","page":"Isentropic Relations","title":"totaltostaticpressureratio","text":"","category":"section"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"total_to_static_pressure_ratio(M, gamma=1.4)","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Calculate the stagnation to static pressure ratio for isentropic flow.","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Arguments:","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"M::Real: Mach number\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Returns:","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Float64: Stagnation to static pressure ratio (p₀/p)","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Formula: fracp_0p = left(1 + fracgamma-12M^2right)^fracgammagamma-1","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Example:","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"julia> total_to_static_pressure_ratio(2.0)\n7.824481684411352\n\njulia> total_to_static_pressure_ratio(1.0)\n1.8929441933097926","category":"page"},{"location":"api/isentropic/#total*to*static*density*ratio","page":"Isentropic Relations","title":"totaltostaticdensityratio","text":"","category":"section"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"total_to_static_density_ratio(M, gamma=1.4)","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Calculate the stagnation to static density ratio for isentropic flow.","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Arguments:","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"M::Real: Mach number\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Returns:","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Float64: Stagnation to static density ratio (ρ₀/ρ)","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Formula: fracrho_0rho = left(1 + fracgamma-12M^2right)^frac1gamma-1","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Example:","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"julia> total_to_static_density_ratio(2.0)\n4.346837646954653\n\njulia> total_to_static_density_ratio(3.0)\n14.621473116765412","category":"page"},{"location":"api/isentropic/#Applications","page":"Isentropic Relations","title":"Applications","text":"","category":"section"},{"location":"api/isentropic/#Wind-Tunnel-Calibration","page":"Isentropic Relations","title":"Wind Tunnel Calibration","text":"","category":"section"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Calculate test section conditions from stagnation measurements:","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"# Known stagnation conditions\np0_measured = 150000  # Pa\nT0_measured = 300     # K\nM_test = 1.8\n\n# Calculate static conditions\np_static = p0_measured / total_to_static_pressure_ratio(M_test)\nT_static = T0_measured / total_to_static_temperature_ratio(M_test)\n\nprintln(\"Test section conditions:\")\nprintln(\"Static pressure: $(round(p_static/1000, digits=1)) kPa\")\nprintln(\"Static temperature: $(round(T_static, digits=1)) K\")","category":"page"},{"location":"api/isentropic/#Pitot-Tube-Analysis","page":"Isentropic Relations","title":"Pitot Tube Analysis","text":"","category":"section"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Calculate dynamic pressure coefficient:","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"M = 0.8  # Subsonic flow\n\n# Pressure coefficient from pitot measurements\np0_p_ratio = total_to_static_pressure_ratio(M)\nq_coefficient = p0_p_ratio - 1\n\nprintln(\"Dynamic pressure coefficient: $(round(q_coefficient, digits=3))\")\n\n# Compare with incompressible approximation\nq_incompressible = 0.5 * 1.4 * M^2\nerror = abs(q_coefficient - q_incompressible) / q_coefficient * 100\n\nprintln(\"Incompressible error: $(round(error, digits=1))%\")","category":"page"},{"location":"api/isentropic/#Nozzle-Exit-Conditions","page":"Isentropic Relations","title":"Nozzle Exit Conditions","text":"","category":"section"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Calculate exit conditions for known stagnation state:","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"# Rocket nozzle conditions\np0_chamber = 2e6  # Pa (20 bar)\nT0_chamber = 3000 # K\nM_exit = 3.5\n\n# Exit conditions\np_exit = p0_chamber / total_to_static_pressure_ratio(M_exit)\nT_exit = T0_chamber / total_to_static_temperature_ratio(M_exit)\nrho_ratio = total_to_static_density_ratio(M_exit)\n\nprintln(\"Rocket nozzle exit conditions:\")\nprintln(\"Exit pressure: $(round(p_exit/1000, digits=1)) kPa\")\nprintln(\"Exit temperature: $(round(T_exit, digits=1)) K\")\nprintln(\"Density ratio ρ₀/ρ: $(round(rho_ratio, digits=2))\")","category":"page"},{"location":"api/isentropic/#Different-Gases","page":"Isentropic Relations","title":"Different Gases","text":"","category":"section"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Compare properties for different working fluids:","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"M = 1.5\ngases = [\n    (\"Air\", 1.4),\n    (\"Helium\", 1.67),\n    (\"CO₂\", 1.3),\n    (\"Steam\", 1.33)\n]\n\nprintln(\"M\\tGas\\tγ\\tT₀/T\\tp₀/p\\tρ₀/ρ\")\nprintln(\"---\\t---\\t----\\t----\\t----\\t----\")\n\nfor (gas, gamma) in gases\n    T_ratio = total_to_static_temperature_ratio(M, gamma)\n    p_ratio = total_to_static_pressure_ratio(M, gamma)\n    rho_ratio = total_to_static_density_ratio(M, gamma)\n    \n    println(\"$M\\t$gas\\t$gamma\\t$(round(T_ratio, digits=2))\\t$(round(p_ratio, digits=2))\\t$(round(rho_ratio, digits=2))\")\nend","category":"page"},{"location":"api/isentropic/#Validation-Examples","page":"Isentropic Relations","title":"Validation Examples","text":"","category":"section"},{"location":"api/isentropic/#Consistency-Check","page":"Isentropic Relations","title":"Consistency Check","text":"","category":"section"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Verify thermodynamic consistency:","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"M = 2.5\ngamma = 1.4\n\nT_ratio = total_to_static_temperature_ratio(M, gamma)\np_ratio = total_to_static_pressure_ratio(M, gamma)\nrho_ratio = total_to_static_density_ratio(M, gamma)\n\n# Check ideal gas law: p₀/p = (ρ₀/ρ)(T₀/T)\nconsistency = p_ratio - (rho_ratio * T_ratio)\n\nprintln(\"Consistency check (should be ≈ 0): $(round(consistency, digits=10))\")","category":"page"},{"location":"api/isentropic/#Mach-Number-Range","page":"Isentropic Relations","title":"Mach Number Range","text":"","category":"section"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Analyze property variations:","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"println(\"M\\tT₀/T\\tp₀/p\\tρ₀/ρ\")\nprintln(\"---\\t----\\t----\\t----\")\n\nfor M in 0.1:0.2:3.0\n    T_ratio = total_to_static_temperature_ratio(M)\n    p_ratio = total_to_static_pressure_ratio(M)\n    rho_ratio = total_to_static_density_ratio(M)\n    \n    println(\"$(M)\\t$(round(T_ratio, digits=2))\\t$(round(p_ratio, digits=2))\\t$(round(rho_ratio, digits=2))\")\nend","category":"page"},{"location":"api/isentropic/#Limitations","page":"Isentropic Relations","title":"Limitations","text":"","category":"section"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Ideal Gas Assumption: Functions assume ideal gas behavior with constant specific heats\nIsentropic Process: No heat transfer, friction, or shock waves\nSteady Flow: Time-invariant conditions\nCalorically Perfect Gas: Constant γ throughout the process","category":"page"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"For real gas effects or non-isentropic processes, additional corrections may be necessary.","category":"page"},{"location":"api/isentropic/#See-Also","page":"Isentropic Relations","title":"See Also","text":"","category":"section"},{"location":"api/isentropic/","page":"Isentropic Relations","title":"Isentropic Relations","text":"Normal Shock Waves: For flows with entropy changes\nNozzle Analysis: Applications in nozzle design\nAtmospheric Model: Real gas properties at different conditions","category":"page"},{"location":"dev/changelog/#Changelog","page":"Changelog","title":"Changelog","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"All notable changes to CompAir.jl will be documented in this file.","category":"page"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.","category":"page"},{"location":"dev/changelog/#[Unreleased]","page":"Changelog","title":"[Unreleased]","text":"","category":"section"},{"location":"dev/changelog/#Added","page":"Changelog","title":"Added","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Comprehensive documentation with Documenter.jl\nAPI reference for all modules\nDetailed examples and usage guides\nDeveloper documentation and contributing guidelines","category":"page"},{"location":"dev/changelog/#Changed","page":"Changelog","title":"Changed","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Improved function documentation with mathematical background\nEnhanced error messages and type annotations","category":"page"},{"location":"dev/changelog/#[1.0.0]-2024-12-19","page":"Changelog","title":"[1.0.0] - 2024-12-19","text":"","category":"section"},{"location":"dev/changelog/#Added-2","page":"Changelog","title":"Added","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Initial release of CompAir.jl - Julia port of Python CompAir module\nComplete isentropic flow relations module\nNormal shock wave analysis functions\nOblique shock wave calculations with weak shock solutions\nPrandtl-Meyer expansion wave analysis\nCone shock analysis with Taylor-Maccoll equation integration\nQuasi-1D nozzle flow analysis\nUS Standard Atmosphere 1976 implementation\nSutherland viscosity law calculations\nGeopotential altitude conversions\nMass flow rate calculations for choked flow\nComprehensive test suite with validation against known solutions","category":"page"},{"location":"dev/changelog/#Changed-2","page":"Changelog","title":"Changed","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"CRITICAL FIXES from Python version:\nFixed atmospheric model indexing errors in layer selection algorithm\nCorrected Sutherland viscosity constants and formula implementation\nAdded missing gamma parameters in shock wave functions\nImproved numerical stability in iterative solutions","category":"page"},{"location":"dev/changelog/#Performance-Improvements","page":"Changelog","title":"Performance Improvements","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Leveraged Julia's just-in-time compilation for significant speed improvements\nOptimized numerical algorithms for better convergence\nReduced memory allocations in hot code paths\nEnhanced type stability throughout the codebase","category":"page"},{"location":"dev/changelog/#Documentation","page":"Changelog","title":"Documentation","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Added comprehensive docstrings for all public functions\nIncluded mathematical derivations and theory background\nProvided extensive examples for practical applications\nCreated validation test cases against analytical solutions","category":"page"},{"location":"dev/changelog/#Version-History-and-Migration-from-Python","page":"Changelog","title":"Version History and Migration from Python","text":"","category":"section"},{"location":"dev/changelog/#Background","page":"Changelog","title":"Background","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"CompAir.jl is a faithful Julia port of the original Python CompAir module developed by Inha AADL. The porting process involved significant improvements while maintaining algorithmic compatibility.","category":"page"},{"location":"dev/changelog/#Key-Improvements-Over-Original-Python-Version","page":"Changelog","title":"Key Improvements Over Original Python Version","text":"","category":"section"},{"location":"dev/changelog/#1.-Critical-Bug-Fixes","page":"Changelog","title":"1. Critical Bug Fixes","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Atmospheric Model Corrections:","category":"page"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Issue: Incorrect layer indexing in US Standard Atmosphere 1976 implementation\nFix: Proper altitude-to-layer mapping with correct boundary conditions\nImpact: Accurate atmospheric properties at all altitudes up to 86 km","category":"page"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Sutherland Viscosity Law:","category":"page"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Issue: Incorrect constants and formula implementation\nFix: Updated to use proper Sutherland constants for air (C₁ = 1.458×10⁻⁶, S = 110.4 K)\nImpact: Accurate dynamic viscosity calculations across temperature range","category":"page"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Parameter Consistency:","category":"page"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Issue: Missing gamma (heat capacity ratio) parameters in several functions\nFix: Added gamma parameters with default values throughout shock wave modules\nImpact: Proper support for different gas properties","category":"page"},{"location":"dev/changelog/#2.-Performance-Enhancements","page":"Changelog","title":"2. Performance Enhancements","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Numerical Computing Optimizations:","category":"page"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Julia JIT Compilation: 5-10x speed improvement over Python for numerical algorithms\nType Stability: Eliminated type uncertainties for better performance\nMemory Management: Reduced allocations in iterative calculations\nVectorization: Leveraged Julia's efficient array operations","category":"page"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Algorithm Improvements:","category":"page"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Convergence: Better initial guesses and convergence criteria for iterative methods\nNumerical Stability: Improved conditioning for near-singular cases\nError Handling: More robust error detection and recovery","category":"page"},{"location":"dev/changelog/#3.-Language-and-Ecosystem-Benefits","page":"Changelog","title":"3. Language and Ecosystem Benefits","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Type System:","category":"page"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Static Analysis: Better error detection at compile time\nMultiple Dispatch: More flexible function interfaces\nGeneric Programming: Support for different number types (Float32, Float64, BigFloat)","category":"page"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Scientific Computing Integration:","category":"page"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"DifferentialEquations.jl: More robust ODE solving for Taylor-Maccoll equation\nOptim.jl: Advanced optimization algorithms for implicit equation solving\nRoots.jl: Sophisticated root-finding methods","category":"page"},{"location":"dev/changelog/#Validation-and-Testing","page":"Changelog","title":"Validation and Testing","text":"","category":"section"},{"location":"dev/changelog/#Regression-Testing","page":"Changelog","title":"Regression Testing","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"All functions validated against original Python implementation\nNumerical differences within machine precision for corrected algorithms\nExtensive test coverage including edge cases and error conditions","category":"page"},{"location":"dev/changelog/#Performance-Benchmarks","page":"Changelog","title":"Performance Benchmarks","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Isentropic Relations: 8x faster than Python\nShock Wave Calculations: 6x faster than Python\nAtmospheric Model: 12x faster than Python (after bug fixes)\nCone Shock Analysis: 15x faster than Python (ODE integration)","category":"page"},{"location":"dev/changelog/#Accuracy-Improvements","page":"Changelog","title":"Accuracy Improvements","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Atmospheric Properties: Error reduced from ~5% to <0.1% in stratosphere\nViscosity Calculations: Error reduced from ~10% to <0.5% across temperature range\nShock Wave Properties: Maintained numerical accuracy while improving performance","category":"page"},{"location":"dev/changelog/#Migration-Guide-from-Python-CompAir","page":"Changelog","title":"Migration Guide from Python CompAir","text":"","category":"section"},{"location":"dev/changelog/#Function-Name-Changes","page":"Changelog","title":"Function Name Changes","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Most functions maintain the same names and signatures:","category":"page"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"# Python CompAir\nfrom compair import t0_over_t, solve_normal, atmos1976_at\n\n# Julia CompAir.jl\nusing CompAir\n# Same function names: t0_over_t, solve_normal, atmos1976_at","category":"page"},{"location":"dev/changelog/#API-Consistency","page":"Changelog","title":"API Consistency","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Same parameter ordering and default values\nCompatible return value structures\nEquivalent error handling patterns","category":"page"},{"location":"dev/changelog/#Notable-Differences","page":"Changelog","title":"Notable Differences","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Units: Consistent SI units throughout (Python version had some mixed units)\nError Messages: More descriptive error messages in Julia version\nPerformance: Significantly faster execution times\nAccuracy: Improved numerical accuracy due to bug fixes","category":"page"},{"location":"dev/changelog/#Future-Development","page":"Changelog","title":"Future Development","text":"","category":"section"},{"location":"dev/changelog/#Planned-Features","page":"Changelog","title":"Planned Features","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Real gas effects for high-temperature applications\nViscous flow corrections for boundary layer effects\nUnsteady flow analysis capabilities\nThree-dimensional shock wave interactions\nAdvanced atmospheric models (non-standard atmospheres)","category":"page"},{"location":"dev/changelog/#Community-Contributions","page":"Changelog","title":"Community Contributions","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Open source development model\nComprehensive documentation and examples\nActive maintenance and support\nIntegration with broader Julia ecosystem","category":"page"},{"location":"dev/changelog/#Acknowledgments","page":"Changelog","title":"Acknowledgments","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"This Julia port builds upon the excellent foundation provided by the Inha AADL team. Their original Python implementation served as the reference for all algorithms and validation cases.","category":"page"},{"location":"dev/changelog/#References","page":"Changelog","title":"References","text":"","category":"section"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Original Python CompAir: https://gitlab.com/aadl_inha/CompAir\nUS Standard Atmosphere 1976: NOAA/NASA/USAF Technical Report\nAnderson, J.D.: \"Modern Compressible Flow\", McGraw-Hill\nSutherland, W.: \"The viscosity of gases and molecular force\", Phil. Mag. 36, 507-531 (1893)","category":"page"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"","category":"page"},{"location":"dev/changelog/","page":"Changelog","title":"Changelog","text":"Note: Version 1.0.0 represents the first stable release with all critical bug fixes from the original Python version. Users migrating from Python CompAir should expect improved accuracy and performance while maintaining full API compatibility.","category":"page"},{"location":"api/cone_shock/#Cone-Shock-Analysis","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"","category":"section"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"This module provides functions for analyzing shock waves over axisymmetric bodies such as cones and spheres, using the Taylor-Maccoll equation for conical flow.","category":"page"},{"location":"api/cone_shock/#Overview","page":"Cone Shock Analysis","title":"Overview","text":"","category":"section"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Conical shock analysis is essential for understanding supersonic flow over axisymmetric bodies. This module covers:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Taylor-Maccoll Equation: Differential equation governing conical flow\nCone Surface Conditions: Flow properties at the cone surface\nShock Wave Properties: Shock angle and strength for conical geometry\nSurface Pressure Distribution: Pressure coefficients and heat transfer analysis\nAxisymmetric Flow: Three-dimensional effects in conical coordinates","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Unlike two-dimensional oblique shocks, conical flows involve three-dimensional effects that must be solved numerically using the Taylor-Maccoll equation.","category":"page"},{"location":"api/cone_shock/#Theory","page":"Cone Shock Analysis","title":"Theory","text":"","category":"section"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"For supersonic flow over a circular cone, the flow field is governed by the Taylor-Maccoll equation:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Taylor-Maccoll equation: fracd^2V_rdtheta^2 + frac(gamma - 1)M_infty^2 - 2V_r^2(gamma - 1)M_infty^2 - V_r^2fracdV_rdtheta + fracV_r^2 - 1tantheta = 0","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Boundary conditions:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"At shock: V_r(theta_s) = V_rs (shock conditions)\nAt cone surface: fracdV_rdthetabigg_theta_c = 0 (tangency condition)","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Conical coordinate system:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"theta = angle from cone axis\ntheta_c = cone half-angle\ntheta_s = shock angle\nV_r = dimensionless radial velocity","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Property relations: M^2 = fracV_r^2(gamma - 1)(1 - V_r^2M_infty^2)","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"fracpp_infty = frac(gamma + 1)M_infty^2(gamma + 1)M_infty^2 - 2(gamma - 1)(M_infty^2 - V_r^2)","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Where:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"M_infty = freestream Mach number\ntheta_c = cone half-angle\ngamma = specific heat ratio","category":"page"},{"location":"api/cone_shock/#Functions","page":"Cone Shock Analysis","title":"Functions","text":"","category":"section"},{"location":"api/cone_shock/#CompAir.theta_eff","page":"Cone Shock Analysis","title":"CompAir.theta_eff","text":"theta_eff(M, angle, gamma=1.4)\n\nCone 형상 각도 계산\n\nArguments\n\nM::Float64: 마하수\nangle::Float64: Cone 반각 (degree)\ngamma::Float64=1.4: 비열비\n\nReturns\n\ntheta_eff::Float64: 형상 각도 (degree)\n\n\n\n\n\n","category":"function"},{"location":"api/cone_shock/#CompAir.cone_beta_weak","page":"Cone Shock Analysis","title":"CompAir.cone_beta_weak","text":"cone_beta_weak(M, angle, gamma=1.4)\n\n마하수 M, Cone 반각 θ 일때 Cone 충격파 각도 계산\n\nArguments\n\nM::Float64: 충격파 전 마하수\nangle::Float64: Cone 반각 (degree)\ngamma::Float64=1.4: 비열비\n\nReturns\n\nbeta::Float64: 경사 충격파 각도 (degree)\n\n\n\n\n\n","category":"function"},{"location":"api/cone_shock/#CompAir.cone_mach2","page":"Cone Shock Analysis","title":"CompAir.cone_mach2","text":"cone_mach2(M, angle, gamma=1.4)\n\n마하수 M, Cone 반각 θ 일때 발생한 경사충격파를 지난 후 마하수\n\nArguments\n\nM::Float64: 충격파 전 마하수\nangle::Float64: Cone 반각 (degree)\ngamma::Float64=1.4: 비열비\n\nReturns\n\nM2::Float64: 경사 충격파후 마하수\n\n\n\n\n\n","category":"function"},{"location":"api/cone_shock/#CompAir.cone_mach_surface","page":"Cone Shock Analysis","title":"CompAir.cone_mach_surface","text":"cone_mach(M, angle, gamma=1.4)\n\n마하수 M, Cone 반각 θ 일때 Cone 표면 마하수\n\nArguments\n\nM::Float64: 충격파 전 마하수\nangle::Float64: Cone 반각 (degree)\ngamma::Float64=1.4: 비열비\n\nReturns\n\nM2::Float64: 경사 충격파후 마하수\n\n\n\n\n\n","category":"function"},{"location":"api/cone_shock/#CompAir.solve_shock","page":"Cone Shock Analysis","title":"CompAir.solve_shock","text":"solve_shock(M, angle, gamma=1.4)\n\n마하수 M, Cone 반각 angle 일때 발생한 경사충격파를 지난 후 물성치 계산\n\nArguments\n\nM::Float64: 충격파 전 마하수\nangle::Float64: Cone 반각 (degree)\ngamma::Float64=1.4: 비열비\n\nReturns\n\nM2::Float64: 경사충격파 후 마하수\nrho2::Float64: 경사충격파 전/후 밀도비\np2::Float64: 경사충격파 전/후 압력비\np0ratio::Float64: 경사충격파 전/후 전압력비\nbeta::Float64: 경사 충격파 각도 (degree)\n\n\n\n\n\n","category":"function"},{"location":"api/cone_shock/#CompAir.solve_cone_properties","page":"Cone Shock Analysis","title":"CompAir.solve_cone_properties","text":"solve_cone_properties(M, angle; psi::Union{Float64, Nothing}=nothing, gamma=1.4)\n\n마하수 M, Cone 반각 angle일 때 콘 표면 또는 특정 ray 각도 psi에서의 물성치를 계산합니다.\n\nArguments\n\nM::Float64: 충격파 전 마하수\nangle::Float64: Cone 반각 (degree)\npsi::Union{Float64, Nothing}=nothing: Ray 각도 (degree). 제공되지 않거나 nothing이면 angle과 동일하게 간주되어 콘 표면에서의 물성치를 계산합니다.\ngamma::Float64=1.4: 비열비\n\nReturns\n\nIf psi is nothing (콘 표면 물성치):\nmc::Float64: 콘 표면 마하수\nrhoc::Float64: 콘 표면 밀도비 (자유흐름 밀도 대비)\npc::Float64: 콘 표면 압력비 (자유흐름 압력 대비)\np0ratio::Float64: 전압력비 (충격파 통과 후 / 전)\nbeta::Float64: 경사 충격파 각도 (degree)\nIf psi is provided (특정 ray 각도 psi에서의 물성치):\nMc::Float64: psi에서의 마하수\nrhoc::Float64: psi에서의 밀도비 (자유흐름 밀도 대비)\npc::Float64: psi에서의 압력비 (자유흐름 압력 대비)\np0ratio::Float64: 전압력비 (충격파 통과 후 / 전)\nbeta::Float64: 경사 충격파 각도 (degree)\nphi::Float64: psi에서의 유동 방향 (degree)\n\n\n\n\n\n","category":"function"},{"location":"api/cone_shock/#Function-Details","page":"Cone Shock Analysis","title":"Function Details","text":"","category":"section"},{"location":"api/cone_shock/#theta_eff","page":"Cone Shock Analysis","title":"theta_eff","text":"","category":"section"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"theta_eff(M, angle, gamma=1.4)","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Calculate the effective deflection angle for cone flow that would produce the same shock angle as a 2D oblique shock.","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Arguments:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"M::Real: Freestream Mach number\nangle::Real: Cone half-angle in degrees\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Returns:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Float64: Effective deflection angle in degrees","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Example:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"julia> theta_eff(2.5, 15.0)\n12.847266221347485\n\njulia> theta_eff(3.0, 20.0)\n16.89234567890123","category":"page"},{"location":"api/cone_shock/#cone*beta*weak","page":"Cone Shock Analysis","title":"conebetaweak","text":"","category":"section"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"cone_beta_weak(M, angle, gamma=1.4)","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Calculate the shock angle for flow over a circular cone.","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Arguments:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"M::Real: Freestream Mach number\nangle::Real: Cone half-angle in degrees\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Returns:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Float64: Shock angle in degrees","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Example:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"julia> cone_beta_weak(2.5, 15.0)\n43.567890123456785\n\njulia> cone_beta_weak(3.0, 10.0)\n38.12345678901234","category":"page"},{"location":"api/cone_shock/#cone_mach2","page":"Cone Shock Analysis","title":"cone_mach2","text":"","category":"section"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"cone_mach2(M, angle, gamma=1.4)","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Calculate the Mach number immediately behind the cone shock wave.","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Arguments:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"M::Real: Freestream Mach number\nangle::Real: Cone half-angle in degrees\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Returns:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Float64: Mach number behind shock","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Example:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"julia> cone_mach2(2.5, 15.0)\n2.123456789012345\n\njulia> cone_mach2(3.0, 20.0)\n2.456789012345678","category":"page"},{"location":"api/cone_shock/#cone*mach*surface","page":"Cone Shock Analysis","title":"conemachsurface","text":"","category":"section"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"cone_mach_surface(M, angle, gamma=1.4)","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Calculate the Mach number at the cone surface using Taylor-Maccoll equation integration.","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Arguments:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"M::Real: Freestream Mach number\nangle::Real: Cone half-angle in degrees\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Returns:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Float64: Surface Mach number\nFloat64: Flow direction angle at surface (if applicable)","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Example:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"julia> M_surface, phi = cone_mach_surface(2.5, 15.0)\n(2.089456789012345, 15.234567890123456)","category":"page"},{"location":"api/cone_shock/#solve_shock","page":"Cone Shock Analysis","title":"solve_shock","text":"","category":"section"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"solve_shock(M, angle, gamma=1.4)","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Complete cone shock analysis - calculate all property changes across the shock.","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Arguments:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"M::Real: Freestream Mach number\nangle::Real: Cone half-angle in degrees\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Returns:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"M2::Float64: Mach number behind shock\nrho2::Float64: Density ratio (ρ₂/ρ₁)\np2::Float64: Pressure ratio (p₂/p₁)\np0ratio::Float64: Stagnation pressure ratio (p₀₂/p₀₁)\nbeta::Float64: Shock angle in degrees","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Example:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"julia> sol = solve_shock(2.5, 15.0)\n(M2 = 2.123, rho2_ratio = 1.567, p2_ratio = 2.234, p0_ratio = 0.934, beta = 43.6)","category":"page"},{"location":"api/cone_shock/#solve*cone*properties","page":"Cone Shock Analysis","title":"solveconeproperties","text":"","category":"section"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"solve_cone_properties(M, angle; psi::Union{Float64, Nothing}=nothing, gamma=1.4)","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Calculate flow properties at the cone surface or at a specified ray angle.","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Arguments:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"M::Real: Freestream Mach number\nangle::Real: Cone half-angle in degrees\npsi::Union{Float64, Nothing}=nothing: Ray angle in degrees (if nothing, calculates surface properties)\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Returns: If psi is nothing (cone surface properties):","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Mc::Float64: Surface Mach number\nrhoc::Float64: Surface density ratio\npc::Float64: Surface pressure ratio\np0ratio::Float64: Stagnation pressure ratio\nbeta::Float64: Shock angle in degrees","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"If psi is provided:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Mc::Float64: Mach number at ray angle ψ\nrhoc::Float64: Density ratio at ray angle ψ\npc::Float64: Pressure ratio at ray angle ψ\np0ratio::Float64: Stagnation pressure ratio\nbeta::Float64: Shock angle in degrees\nphi::Float64: Flow direction at ray angle ψ","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Example:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"julia> Mc, rhoc, pc, p0ratio, beta = solve_cone_properties(2.5, 15.0)\n(2.089, 1.456, 2.123, 0.945, 43.6)\n\njulia> Mc, rhoc, pc, p0ratio, beta, phi = solve_cone_properties(2.5, 15.0, psi=10.0)\n(2.145, 1.423, 2.089, 0.945, 43.6, 10.234)","category":"page"},{"location":"api/cone_shock/#Applications","page":"Cone Shock Analysis","title":"Applications","text":"","category":"section"},{"location":"api/cone_shock/#Missile-Nose-Cone-Analysis","page":"Cone Shock Analysis","title":"Missile Nose Cone Analysis","text":"","category":"section"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Design analysis for a missile nose cone:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"# Flight conditions\nM_flight = 2.8\naltitude = 15000  # m\ntheta_nose = 12.0 # nose cone half-angle\n\nprintln(\"Missile Nose Cone Analysis:\")\nprintln(\"Flight Mach: $M_flight\")\nprintln(\"Altitude: $(altitude/1000) km\")\nprintln(\"Nose cone half-angle: $theta_nose°\")\n\n# Get atmospheric properties\nrho, p_inf, T_inf, a, mu = atmosphere_properties_at(altitude/1000)\n\n# Shock analysis\nbeta = cone_beta_weak(M_flight, theta_nose)\nM_surface = cone_mach_surface(M_flight, theta_nose)\n\nprintln(\"\\nShock Properties:\")\nprintln(\"Shock angle: $(round(beta, digits=1))°\")\nprintln(\"Surface Mach: $(round(M_surface, digits=3))\")\n\n# Surface conditions\nMn1 = M_flight * sind(beta)\np_ratio = 1 + 2*1.4/(1.4+1) * (Mn1^2 - 1)\np_surface = p_inf * p_ratio\n\n# Temperature rise\nT_ratio = (1 + 0.2*M_flight^2) / (1 + 0.2*M_surface^2)\nT_surface = T_inf * T_ratio\n\nprintln(\"\\nSurface Conditions:\")\nprintln(\"Surface pressure: $(round(p_surface/1000, digits=1)) kPa\")\nprintln(\"Surface temperature: $(round(T_surface, digits=1)) K\")\nprintln(\"Pressure coefficient: $(round(2/(1.4*M_flight^2)*(p_ratio-1), digits=4))\")","category":"page"},{"location":"api/cone_shock/#Cone-vs-Wedge-Comparison","page":"Cone Shock Analysis","title":"Cone vs Wedge Comparison","text":"","category":"section"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Compare shock properties for cone and wedge at same deflection angle:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"M_inf = 2.5\ntheta = 20.0  # deflection angle\n\nprintln(\"Cone vs Wedge Comparison at θ = $theta°:\")\nprintln(\"Freestream Mach: $M_inf\")\n\n# Wedge (2D oblique shock)\nsol_wedge = solve_oblique(M_inf, theta)\n\n# Cone (axisymmetric)\nbeta_cone = cone_beta_weak(M_inf, theta)\nM_cone, _ = cone_mach_surface(M_inf, theta)\n\nprintln(\"\\nWedge (2D) Properties:\")\nprintln(\"Shock angle: $(round(sol_wedge.beta, digits=1))°\")\nprintln(\"Surface Mach: $(round(sol_wedge.M2, digits=3))\")\nprintln(\"Pressure ratio: $(round(sol_wedge.p2_ratio, digits=3))\")\n\nprintln(\"\\nCone (Axisymmetric) Properties:\")\nprintln(\"Shock angle: $(round(beta_cone, digits=1))°\")\nprintln(\"Surface Mach: $(round(M_cone, digits=3))\")\n\n# Calculate pressure ratio for cone (approximate)\nMn1_cone = M_inf * sind(beta_cone)\np_ratio_cone = 1 + 2*1.4/(1.4+1) * (Mn1_cone^2 - 1)\n\nprintln(\"Pressure ratio (approx): $(round(p_ratio_cone, digits=3))\")\n\nprintln(\"\\nDifferences:\")\nprintln(\"Shock angle: $(round(beta_cone - sol_wedge.beta, digits=2))° (cone stronger)\")\nprintln(\"Surface Mach: $(round(M_cone - sol_wedge.M2, digits=3)) (cone higher)\")","category":"page"},{"location":"api/cone_shock/#Supersonic-Intake-Analysis","page":"Cone Shock Analysis","title":"Supersonic Intake Analysis","text":"","category":"section"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Analyze conical intake for supersonic aircraft:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"# Engine intake design\nM_cruise = 2.2\nintake_angle = 8.0  # intake cone half-angle\nL_intake = 2.0      # intake length (m)\n\nprintln(\"Supersonic Intake Analysis:\")\nprintln(\"Cruise Mach: $M_cruise\")\nprintln(\"Intake cone angle: $intake_angle°\")\n\n# Cone shock analysis\nbeta = cone_beta_weak(M_cruise, intake_angle)\nM_throat, _ = cone_mach_surface(M_cruise, intake_angle)\n\nprintln(\"\\nCone Shock Properties:\")\nprintln(\"Shock angle: $(round(beta, digits=1))°\")\nprintln(\"Throat Mach number: $(round(M_throat, digits=3))\")\n\n# Mass flow capture\nshock_radius = L_intake * tand(beta)\ncapture_area = π * shock_radius^2\n\nprintln(\"\\nFlow Capture:\")\nprintln(\"Shock radius at throat: $(round(shock_radius, digits=2)) m\")\nprintln(\"Flow capture area: $(round(capture_area, digits=3)) m²\")\n\n# Total pressure recovery\nMn1 = M_cruise * sind(beta)\nsol_normal = solve_normal(Mn1)\n\nprintln(\"Total pressure recovery: $(round(sol_normal.p0_ratio, digits=3))\")\nprintln(\"Pressure loss: $(round((1-sol_normal.p0_ratio)*100, digits=1))%\")","category":"page"},{"location":"api/cone_shock/#Cone-Half-Angle-Variation","page":"Cone Shock Analysis","title":"Cone Half-Angle Variation","text":"","category":"section"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Analyze how cone properties vary with half-angle:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"M_inf = 3.0\ncone_angles = [5.0, 10.0, 15.0, 20.0, 25.0, 30.0]\n\nprintln(\"Cone Half-Angle Variation Study:\")\nprintln(\"Freestream Mach: $M_inf\")\nprintln(\"\\nθc(°)\\tβ(°)\\tMs\\tβ-θc\\tCp_approx\")\nprintln(\"-----\t----\\t----\\t-----\\t---------\")\n\nfor theta_c in cone_angles\n    try\n        beta = cone_beta_weak(M_inf, theta_c)\n        M_surface, _ = cone_mach_surface(M_inf, theta_c)\n        \n        # Approximate pressure coefficient\n        Mn1 = M_inf * sind(beta)\n        p_ratio = 1 + 2*1.4/(1.4+1) * (Mn1^2 - 1)\n        Cp = 2/(1.4*M_inf^2) * (p_ratio - 1)\n        \n        shock_deflection = beta - theta_c\n        \n        println(\"$(theta_c)\\t$(round(beta, digits=1))\\t$(round(M_surface, digits=2))\\t$(round(shock_deflection, digits=1))\\t$(round(Cp, digits=4))\")\n    catch e\n        println(\"$(theta_c)\\t---\\t---\\t---\\t--- (detached shock)\")\n    end\nend","category":"page"},{"location":"api/cone_shock/#Wind-Tunnel-Model-Analysis","page":"Cone Shock Analysis","title":"Wind Tunnel Model Analysis","text":"","category":"section"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Analyze cone model in supersonic wind tunnel:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"# Wind tunnel test conditions\nM_test = 3.5\np0_tunnel = 500000  # Pa\nT0_tunnel = 300     # K\ncone_angles = [10.0, 15.0, 20.0]  # Test cone angles\n\nprintln(\"Wind Tunnel Cone Model Analysis:\")\nprintln(\"Test Mach: $M_test\")\nprintln(\"Stagnation pressure: $(p0_tunnel/1000) kPa\")\nprintln(\"Stagnation temperature: $T0_tunnel K\")\n\n# Test section conditions\np_test = p0_tunnel / total_to_static_pressure_ratio(M_test)\nT_test = T0_tunnel / total_to_static_temperature_ratio(M_test)\nrho_test = p_test / (287 * T_test)\n\nprintln(\"\\nTest Section Conditions:\")\nprintln(\"Static pressure: $(round(p_test/1000, digits=1)) kPa\")\nprintln(\"Static temperature: $(round(T_test, digits=1)) K\")\nprintln(\"Density: $(round(rho_test, digits=3)) kg/m³\")\n\nprintln(\"\\nCone Model Results:\")\nprintln(\"θc(°)\\tβ(°)\\tMs\\tCp\\tp_surface(kPa)\")\nprintln(\"-----\t----\\t----\\t----\\t-------------\")\n\nfor theta_c in cone_angles\n    beta = cone_beta_weak(M_test, theta_c)\n    M_surface, _ = cone_mach_surface(M_test, theta_c)\n    \n    # Surface pressure\n    Mn1 = M_test * sind(beta)\n    p_ratio = 1 + 2*1.4/(1.4+1) * (Mn1^2 - 1)\n    p_surface = p_test * p_ratio\n    \n    # Pressure coefficient\n    Cp = 2/(1.4*M_test^2) * (p_ratio - 1)\n    \n    println(\"$(theta_c)\\t$(round(beta, digits=1))\\t$(round(M_surface, digits=2))\\t$(round(Cp, digits=3))\\t$(round(p_surface/1000, digits=1))\")\nend","category":"page"},{"location":"api/cone_shock/#Validation-Examples","page":"Cone Shock Analysis","title":"Validation Examples","text":"","category":"section"},{"location":"api/cone_shock/#Maximum-Cone-Angle-Analysis","page":"Cone Shock Analysis","title":"Maximum Cone Angle Analysis","text":"","category":"section"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Find the maximum cone angle for attached shock:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"M_inf = 2.0\n\nprintln(\"Maximum Cone Angle Analysis:\")\nprintln(\"Freestream Mach: $M_inf\")\n\n# Search for maximum cone angle\ntheta_max_val = 0.0\ndelta_theta = 0.5\n\nprintln(\"\\nSearching for maximum cone angle...\")\n\nfor theta_test in 5.0:delta_theta:45.0\n    try\n        beta = cone_beta_weak(M_inf, theta_test)\n        M_surface, _ = cone_mach_surface(M_inf, theta_test)\n        \n        # Check if solution is physical\n        if M_surface > 0 && beta > theta_test\n            theta_max_val = theta_test\n        else\n            break\n        end\n    catch e\n        break\n    end\nend\n\nprintln(\"Maximum cone half-angle: $(theta_max_val)°\")\n\n# Compare with 2D maximum deflection\ntheta_max_2D = theta_max(M_inf)\nprintln(\"2D maximum deflection: $(round(theta_max_2D, digits=1))°\")\nprintln(\"Reduction for axisymmetric case: $(round(theta_max_2D - theta_max_val, digits=1))°\")","category":"page"},{"location":"api/cone_shock/#Effective-Deflection-Angle","page":"Cone Shock Analysis","title":"Effective Deflection Angle","text":"","category":"section"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Analyze the effective deflection concept for cones:","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"M_inf = 2.5\ntheta_c = 18.0\n\nprintln(\"Effective Deflection Angle Analysis:\")\nprintln(\"Cone half-angle: $theta_c°\")\nprintln(\"Freestream Mach: $M_inf\")\n\n# Calculate effective deflection angle\ntheta_eff_val = theta_eff(M_inf, theta_c)\n\nprintln(\"Effective deflection angle: $(round(theta_eff_val, digits=2))°\")\nprintln(\"Actual cone angle: $theta_c°\")\nprintln(\"Difference: $(round(theta_c - theta_eff_val, digits=2))°\")\n\n# This effective angle can be used with 2D oblique shock theory\nsol_oblique = solve_oblique(M_inf, theta_eff_val)\n\n# Compare with actual cone solution\nbeta_cone = cone_beta_weak(M_inf, theta_c)\nM_cone, _ = cone_mach_surface(M_inf, theta_c)\n\nprintln(\"\\nComparison of Methods:\")\nprintln(\"Effective angle method - β: $(round(sol_oblique.beta, digits=1))°, M: $(round(sol_oblique.M2, digits=3))\")\nprintln(\"Cone solution - β: $(round(beta_cone, digits=1))°, M: $(round(M_cone, digits=3))\")","category":"page"},{"location":"api/cone_shock/#Limitations-and-Considerations","page":"Cone Shock Analysis","title":"Limitations and Considerations","text":"","category":"section"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Inviscid assumption: No boundary layer or viscous effects\nPerfect gas: Constant specific heats and ideal gas behavior\nSteady flow: Time-invariant conditions\nAttached shock: Valid only for sharp cones below maximum angle\nSmall angle approximation: Some correlations valid for small cone angles\nReal gas effects: Important at hypersonic speeds and high temperatures\nNumerical solution: Taylor-Maccoll equation requires numerical integration","category":"page"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"For precise hypersonic analysis, real gas effects, viscous interactions, and heat transfer should be considered.","category":"page"},{"location":"api/cone_shock/#See-Also","page":"Cone Shock Analysis","title":"See Also","text":"","category":"section"},{"location":"api/cone_shock/","page":"Cone Shock Analysis","title":"Cone Shock Analysis","text":"Oblique Shock Waves: For two-dimensional shock analysis\nNormal Shock Waves: For shock wave fundamentals\nIsentropic Relations: For property calculations\nAtmospheric Model: For flight condition analysis","category":"page"},{"location":"api/nozzle/#Nozzle-Analysis","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"This module provides functions for analyzing quasi-one-dimensional nozzle flows, including area-Mach number relationships, mass flow calculations, and nozzle performance analysis.","category":"page"},{"location":"api/nozzle/#Overview","page":"Nozzle Analysis","title":"Overview","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Nozzle analysis is fundamental to propulsion systems, wind tunnels, and fluid machinery. This module covers:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Area-Mach Relationships: The relationship between nozzle area ratio and Mach number\nMass Flow Calculations: Flow rate computations with choking conditions\nChoked Flow: Critical flow conditions at the throat\nNozzle Performance: Exit conditions and flow characteristics\nDesign Analysis: Area ratio calculations for given performance requirements","category":"page"},{"location":"api/nozzle/#Theory","page":"Nozzle Analysis","title":"Theory","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"For quasi-one-dimensional isentropic flow through a nozzle, the area-Mach number relationship is:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Area ratio equation: fracAA^* = frac1Mleftfrac2gamma+1left(1 + fracgamma-12M^2right)right^fracgamma+12(gamma-1) ","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Mass flow rate: dotm = rho^* A^* a^* = fracp_0sqrtT_0 sqrtfracgammaR left(frac2gamma+1right)^fracgamma+12(gamma-1) A^* ","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Choked flow condition (M = 1 at throat):","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Maximum mass flow for given stagnation conditions\nCritical pressure ratio: fracp^*p_0 = left(frac2gamma+1right)^fracgammagamma-1\nCritical temperature ratio: fracT^*T_0 = frac2gamma+1","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Where:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"A = local area, A^* = throat area (sonic area)\nM = local Mach number\ngamma = specific heat ratio\np_0 T_0 = stagnation pressure and temperature\nR = specific gas constant","category":"page"},{"location":"api/nozzle/#Functions","page":"Nozzle Analysis","title":"Functions","text":"","category":"section"},{"location":"api/nozzle/#CompAir.mdot","page":"Nozzle Analysis","title":"CompAir.mdot","text":"mdot(M::Real, area::Real=1, p0::Real=1, t0::Real=1, gamma::Real=1.4, R::Real=1)\n\n노즐 내 유량 계산\n\nArguments\n\nM::Real: 입구 마하수\narea::Real: 입구 면적\np0::Real: 전압력\nt0::Real: 전 온도\nR::Real: Gas 상수\ngamma::Real=1.4: 비열비\n\nReturns\n\nFloat64: 질량 유량\n\n\n\n\n\n","category":"function"},{"location":"api/nozzle/#CompAir.area_ratio_at","page":"Nozzle Analysis","title":"CompAir.area_ratio_at","text":"area_ratio_at(M::Real, gamma::Real=1.4)\n\n마하수 M일 때 목 면적 비율\n\nArguments\n\nM::Real: 마하수\ngamma::Real=1.4: 비열비\n\nReturns\n\nFloat64: 목면적 대비 면적비\n\n\n\n\n\n","category":"function"},{"location":"api/nozzle/#CompAir.mach_by_area_ratio","page":"Nozzle Analysis","title":"CompAir.mach_by_area_ratio","text":"mach_by_area_ratio(area::Real, gamma::Real=1.4, x0::Real=0.1)\n\n면적비 area 일 때 마하수 계산\n\nArguments\n\narea::Real: 목면적 대비 면적비\ngamma::Real=1.4: 비열비\nx0::Real=0.1: 초기 예측 값, 1 이하면 아음속, 1 이상이면 초음속 계산\n\nReturns\n\nFloat64: 마하수\n\n\n\n\n\n","category":"function"},{"location":"api/nozzle/#CompAir.subsonic_mach_from_area_ratio","page":"Nozzle Analysis","title":"CompAir.subsonic_mach_from_area_ratio","text":"subsonic_mach_from_area_ratio(area::Real, gamma::Real=1.4)\n\nCalculates the subsonic Mach number for a given nozzle area ratio.\n\nArguments\n\narea::Real: Area ratio (A/A*)\ngamma::Real=1.4: Specific heat ratio\n\nReturns\n\nFloat64: Subsonic Mach number\n\n\n\n\n\n","category":"function"},{"location":"api/nozzle/#CompAir.subsonic_pressure_from_area_ratio","page":"Nozzle Analysis","title":"CompAir.subsonic_pressure_from_area_ratio","text":"subsonic_pressure_from_area_ratio(area::Real, gamma::Real=1.4, p0::Real=1)\n\nCalculates the subsonic pressure for a given nozzle area ratio, assuming isentropic flow.\n\nArguments\n\narea::Real: Area ratio (A/A*)\ngamma::Real=1.4: Specific heat ratio\np0::Real=1: Total pressure\n\nReturns\n\nFloat64: Subsonic pressure\n\n\n\n\n\n","category":"function"},{"location":"api/nozzle/#CompAir.mach_after_shock_at_exit","page":"Nozzle Analysis","title":"CompAir.mach_after_shock_at_exit","text":"mach_after_shock_at_exit(area::Real, gamma::Real=1.4)\n\nCalculates the Mach number after a normal shock at the nozzle exit.\n\nArguments\n\narea::Real: Area ratio (A/A*)\ngamma::Real=1.4: Specific heat ratio\n\nReturns\n\nFloat64: Mach number after the shock\n\n\n\n\n\n","category":"function"},{"location":"api/nozzle/#CompAir.pressure_after_shock_at_exit","page":"Nozzle Analysis","title":"CompAir.pressure_after_shock_at_exit","text":"pressure_after_shock_at_exit(area::Real, gamma::Real=1.4, p0::Real=1)\n\nCalculates the pressure after a normal shock at the nozzle exit.\n\nArguments\n\narea::Real: Area ratio (A/A*)\ngamma::Real=1.4: Specific heat ratio\np0::Real=1: Total pressure\n\nReturns\n\nFloat64: Pressure after the shock\n\n\n\n\n\n","category":"function"},{"location":"api/nozzle/#Function-Details","page":"Nozzle Analysis","title":"Function Details","text":"","category":"section"},{"location":"api/nozzle/#mdot","page":"Nozzle Analysis","title":"mdot","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"mdot(M, area=1, p0=1, t0=1, gamma=1.4, R=1)","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Calculate mass flow rate through a nozzle at given conditions.","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Arguments:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"M::Real: Mach number at the specified location\narea::Real=1: Cross-sectional area at the location\np0::Real=1: Stagnation pressure\nt0::Real=1: Stagnation temperature\ngamma::Real=1.4: Specific heat ratio\nR::Real=1: Specific gas constant","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Returns:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Float64: Mass flow rate","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Formula: dotm = fracsqrtgammasqrtR T_0 p_0 M A left(1 + fracgamma-12M^2right)^-fracgamma+12(gamma-1) ","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Example:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"julia> mdot(1.0, 0.01, 500000, 600, 1.4, 287)\n1.281032004421326\n\njulia> mdot(2.0, 0.005, 300000, 400, 1.4, 287)\n0.32707563300841975","category":"page"},{"location":"api/nozzle/#area*ratio*at","page":"Nozzle Analysis","title":"arearatioat","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"area_ratio_at(M, gamma=1.4)","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Calculate the area ratio A/A* for a given Mach number in isentropic flow.","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Arguments:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"M::Real: Mach number\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Returns:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Float64: Area ratio A/A*","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Formula: fracAA^* = frac1Mleftfrac2gamma+1left(1 + fracgamma-12M^2right)right^fracgamma+12(gamma-1) ","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Example:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"julia> area_ratio_at(2.0)\n1.6875000000000002\n\njulia> area_ratio_at(3.0)\n4.234567901234568\n\njulia> area_ratio_at(1.0)\n1.0","category":"page"},{"location":"api/nozzle/#mach*by*area_ratio","page":"Nozzle Analysis","title":"machbyarea_ratio","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"mach_by_area_ratio(area, gamma=1.4, x0=0.1)","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Calculate the Mach number for a given area ratio using numerical root finding.","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Arguments:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"area::Real: Area ratio A/A*\ngamma::Real=1.4: Specific heat ratio\nx0::Real=0.1: Initial guess for Mach number (< 1 for subsonic, > 1 for supersonic)","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Returns:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Float64: Mach number","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Example:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"julia> mach_by_area_ratio(2.0, 1.4, 0.5)  # Subsonic solution\n0.3086067977882601\n\njulia> mach_by_area_ratio(2.0, 1.4, 2.0)  # Supersonic solution\n2.1972245773362196","category":"page"},{"location":"api/nozzle/#subsonic*mach*from*area*ratio","page":"Nozzle Analysis","title":"subsonicmachfromarearatio","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"subsonic_mach_from_area_ratio(area, gamma=1.4)","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Calculate Mach number for given area ratio (wrapper for mach_by_area_ratio with default subsonic guess).","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Arguments:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"area::Real: Area ratio A/A*\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Returns:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Float64: Mach number (subsonic solution)","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Example:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"julia> subsonic_mach_from_area_ratio(3.0)\n0.17851240074438515","category":"page"},{"location":"api/nozzle/#subsonic*pressure*from*area*ratio","page":"Nozzle Analysis","title":"subsonicpressurefromarearatio","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"subsonic_pressure_from_area_ratio(area, gamma=1.4, p0=1)","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Calculate static pressure at given area ratio location.","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Arguments:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"area::Real: Area ratio A/A*\ngamma::Real=1.4: Specific heat ratio\np0::Real=1: Stagnation pressure","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Returns:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Float64: Static pressure","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Example:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"julia> subsonic_pressure_from_area_ratio(2.0, 1.4, 100000)\n96859.71831475619","category":"page"},{"location":"api/nozzle/#mach*after*shock*at*exit","page":"Nozzle Analysis","title":"machaftershockatexit","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"mach_after_shock_at_exit(area, gamma=1.4)","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Calculate Mach number after a normal shock at the given area ratio location.","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Arguments:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"area::Real: Area ratio A/A*\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Returns:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Float64: Mach number after normal shock","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Example:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"julia> mach_after_shock_at_exit(4.0)\n0.4347826086956522","category":"page"},{"location":"api/nozzle/#pressure*after*shock*at*exit","page":"Nozzle Analysis","title":"pressureaftershockatexit","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"pressure_after_shock_at_exit(area, gamma=1.4, p0=1)","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Calculate static pressure after a normal shock at the given area ratio location.","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Arguments:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"area::Real: Area ratio A/A*\ngamma::Real=1.4: Specific heat ratio\np0::Real=1: Stagnation pressure","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Returns:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Float64: Static pressure after shock","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Example:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"julia> pressure_after_shock_at_exit(3.0, 1.4, 200000)\n138888.8888888889","category":"page"},{"location":"api/nozzle/#Applications","page":"Nozzle Analysis","title":"Applications","text":"","category":"section"},{"location":"api/nozzle/#Rocket-Nozzle-Design","page":"Nozzle Analysis","title":"Rocket Nozzle Design","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Design a rocket nozzle for optimum performance:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"# Rocket engine specifications\np_chamber = 20e5    # Chamber pressure (Pa)\np_ambient = 101325  # Sea level ambient pressure (Pa)\nT_chamber = 3000    # Chamber temperature (K)\nthrust_req = 10000  # Required thrust (N)\n\nprintln(\"Rocket Nozzle Design:\")\nprintln(\"Chamber pressure: $(p_chamber/1e5) bar\")\nprintln(\"Ambient pressure: $(p_ambient/1000) kPa\")\nprintln(\"Chamber temperature: $T_chamber K\")\n\n# Calculate optimum expansion ratio\np_ratio_opt = p_chamber / p_ambient\nprintln(\"Optimum pressure ratio: $(round(p_ratio_opt, digits=1))\")\n\n# Find exit Mach number for optimum expansion\nM_exit_opt = 3.0  # Initial guess\ntolerance = 1e-6\n\nfor i in 1:100\n    p_ratio_calc = total_to_static_pressure_ratio(M_exit_opt)\n    error = p_ratio_calc - p_ratio_opt\n    \n    if abs(error/p_ratio_opt) < tolerance\n        break\n    end\n    \n    # Newton-like iteration\n    if error > 0\n        M_exit_opt *= 1.01\n    else\n        M_exit_opt *= 0.99\n    end\nend\n\nprintln(\"Optimum exit Mach: $(round(M_exit_opt, digits=2))\")\n\n# Calculate nozzle geometry\nA_ratio_opt = area_ratio_at(M_exit_opt)\nprintln(\"Optimum area ratio: $(round(A_ratio_opt, digits=1))\")\n\n# Performance calculations\nspecific_impulse = M_exit_opt * sqrt(1.4 * 287 * T_chamber / total_to_static_temperature_ratio(M_exit_opt))\nprintln(\"Approximate specific impulse: $(round(specific_impulse, digits=1)) m/s\")","category":"page"},{"location":"api/nozzle/#Wind-Tunnel-Nozzle-Analysis","page":"Nozzle Analysis","title":"Wind Tunnel Nozzle Analysis","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Design a supersonic wind tunnel nozzle:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"# Wind tunnel requirements\nM_test = 2.2        # Test section Mach number\np0_settling = 150000 # Settling chamber pressure (Pa)\nT0_settling = 300   # Settling chamber temperature (K)\ntest_duration = 30  # seconds\n\nprintln(\"Wind Tunnel Nozzle Design:\")\nprintln(\"Test Mach number: $M_test\")\nprintln(\"Settling chamber pressure: $(p0_settling/1000) kPa\")\n\n# Calculate nozzle area ratio\nA_ratio = area_ratio_at(M_test)\nprintln(\"Required area ratio: $(round(A_ratio, digits=2))\")\n\n# Test section conditions  \np_test = p0_settling / total_to_static_pressure_ratio(M_test)\nT_test = T0_settling / total_to_static_temperature_ratio(M_test)\nrho_test = p_test / (287 * T_test)\n\nprintln(\"\\nTest Section Conditions:\")\nprintln(\"Static pressure: $(round(p_test/1000, digits=1)) kPa\")\nprintln(\"Static temperature: $(round(T_test, digits=1)) K\")\nprintln(\"Density: $(round(rho_test, digits=3)) kg/m³\")\n\n# Mass flow requirements\nA_throat = 0.02  # m² (assumed)\nmass_flow = mdot(1.0, A_throat, p0_settling, T0_settling, 1.4, 287)\n\nprintln(\"\\nFlow Requirements:\")\nprintln(\"Throat area: $(A_throat*1e4) cm²\")\nprintln(\"Mass flow: $(round(mass_flow, digits=2)) kg/s\")\nprintln(\"Total air required: $(round(mass_flow * test_duration, digits=1)) kg\")","category":"page"},{"location":"api/nozzle/#Nozzle-Performance-Map","page":"Nozzle Analysis","title":"Nozzle Performance Map","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Generate performance data for different operating conditions:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"# Fixed nozzle geometry\nA_ratio_design = 4.0\nM_design = mach_by_area_ratio(A_ratio_design, 1.4, 2.0)  # Supersonic solution\n\nprintln(\"Nozzle Performance Map:\")\nprintln(\"Design area ratio: $A_ratio_design\")\nprintln(\"Design Mach number: $(round(M_design, digits=2))\")\n\nprintln(\"\\np0/pb\\tFlow Condition\\t\\tExit Mach\")\nprintln(\"-----\\t--------------\\t\\t---------\")\n\n# Different pressure ratios\npressure_ratios = [1.5, 2.0, 5.0, 10.0, 20.0, 50.0]\n\nfor pr in pressure_ratios\n    # Critical pressure ratio for choking\n    p_critical = (2/(1.4+1))^(1.4/(1.4-1))  # ≈ 0.528\n    \n    if pr < 1/p_critical\n        condition = \"Subsonic throughout\"\n        M_exit = mach_by_area_ratio(A_ratio_design, 1.4, 0.1)\n    else\n        # Check if design pressure ratio is reached\n        p_design = total_to_static_pressure_ratio(M_design)\n        \n        if pr < p_design\n            condition = \"Shock in nozzle\"\n            M_exit = \"Variable\"\n        elseif pr ≈ p_design\n            condition = \"Design point\"\n            M_exit = round(M_design, digits=3)\n        else\n            condition = \"Overexpanded\"\n            M_exit = round(M_design, digits=3)\n        end\n    end\n    \n    println(\"$(round(pr, digits=1))\\t$(condition)\\t\\t$(M_exit)\")\nend","category":"page"},{"location":"api/nozzle/#Variable-Area-Nozzle-Analysis","page":"Nozzle Analysis","title":"Variable Area Nozzle Analysis","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Analyze performance of a variable geometry nozzle:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"# Operating conditions\np0 = 300000  # Stagnation pressure (Pa)\nT0 = 400     # Stagnation temperature (K)\n\n# Different area ratios (variable geometry)\narea_ratios = [1.5, 2.0, 3.0, 4.0, 5.0]\n\nprintln(\"Variable Area Nozzle Performance:\")\nprintln(\"Stagnation conditions: $(p0/1000) kPa, $(T0) K\")\nprintln(\"\\nA/A*\\tM_exit\\tp_exit(kPa)\\tT_exit(K)\\tV_exit(m/s)\")\nprintln(\"----\\t------\\t----------\\t--------\\t----------\")\n\nfor A_ratio in area_ratios\n    # Find exit Mach number\n    M_exit = mach_by_area_ratio(A_ratio, 1.4, 2.0)  # Supersonic solution\n    \n    # Calculate exit conditions\n    p_exit = p0 / total_to_static_pressure_ratio(M_exit)\n    T_exit = T0 / total_to_static_temperature_ratio(M_exit)\n    V_exit = M_exit * sqrt(1.4 * 287 * T_exit)\n    \n    println(\"$(A_ratio)\\t$(round(M_exit, digits=2))\\t$(round(p_exit/1000, digits=1))\\t\\t$(round(T_exit, digits=1))\\t\\t$(round(V_exit, digits=1))\")\nend","category":"page"},{"location":"api/nozzle/#Nozzle-Starting-Problem","page":"Nozzle Analysis","title":"Nozzle Starting Problem","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Analyze the starting process of a supersonic nozzle:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"# Nozzle geometry\nA_ratio_exit = 3.5\n\nprintln(\"Nozzle Starting Analysis:\")\nprintln(\"Exit area ratio: $A_ratio_exit\")\n\n# Design conditions\nM_exit_design = mach_by_area_ratio(A_ratio_exit, 1.4, 2.0)\np_ratio_design = total_to_static_pressure_ratio(M_exit_design)\n\nprintln(\"Design exit Mach: $(round(M_exit_design, digits=2))\")\nprintln(\"Design pressure ratio: $(round(p_ratio_design, digits=1))\")\n\n# Starting condition (shock at exit)\nM_before_shock = M_exit_design\nsol = solve_normal(M_before_shock)\n\n# Required starting pressure ratio\np_ratio_starting = p_ratio_design / sol.p0_ratio\n\nprintln(\"\\nStarting Analysis:\")\nprintln(\"Shock downstream Mach: $(round(sol.M2, digits=3))\")\nprintln(\"Stagnation pressure loss: $(round((1-sol.p0_ratio)*100, digits=1))%\")\nprintln(\"Starting pressure ratio: $(round(p_ratio_starting, digits=1))\")\nprintln(\"Overexpansion factor: $(round(p_ratio_starting/p_ratio_design, digits=2))\")","category":"page"},{"location":"api/nozzle/#Different-Gases","page":"Nozzle Analysis","title":"Different Gases","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Analyze nozzle performance for different working fluids:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"M_exit = 2.5\nA_throat = 0.01  # m²\np0 = 500000      # Pa\nT0 = 400         # K\n\ngases = [\n    (\"Air\", 1.4, 287),\n    (\"Helium\", 1.67, 2077),\n    (\"CO₂\", 1.3, 189),\n    (\"Steam\", 1.33, 462)\n]\n\nprintln(\"Nozzle Performance for Different Gases:\")\nprintln(\"Exit Mach: $M_exit\")\nprintln(\"\\nGas\\tγ\\tR(J/kg·K)\\tA/A*\\tṁ(kg/s)\\tV_exit(m/s)\")\nprintln(\"---\\t----\\t--------\\t----\\t-------\\t----------\")\n\nfor (gas, gamma, R) in gases\n    # Area ratio\n    A_ratio = area_ratio_at(M_exit, gamma)\n    \n    # Mass flow\n    mass_flow = mdot(1.0, A_throat, p0, T0, gamma, R)\n    \n    # Exit velocity\n    T_exit = T0 / total_to_static_temperature_ratio(M_exit, gamma)\n    V_exit = M_exit * sqrt(gamma * R * T_exit)\n    \n    println(\"$(gas)\\t$(gamma)\\t$(R)\\t\\t$(round(A_ratio, digits=2))\\t$(round(mass_flow, digits=3))\\t\\t$(round(V_exit, digits=1))\")\nend","category":"page"},{"location":"api/nozzle/#Validation-Examples","page":"Nozzle Analysis","title":"Validation Examples","text":"","category":"section"},{"location":"api/nozzle/#Area-Ratio-Calculation","page":"Nozzle Analysis","title":"Area Ratio Calculation","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Verify area ratio calculations:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"println(\"Mach\\tA/A*\")\nprintln(\"----\\t----\")\n\nfor M in [0.5, 0.8, 1.0, 1.5, 2.0, 3.0, 4.0]\n    if M == 1.0\n        ratio = 1.0\n    else\n        ratio = area_ratio_at(M)\n    end\n    println(\"$(M)\\t$(round(ratio, digits=3))\")\nend","category":"page"},{"location":"api/nozzle/#Inverse-Problem-Validation","page":"Nozzle Analysis","title":"Inverse Problem Validation","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Verify that inverse calculations are consistent:","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"M_original = 2.5\nA_ratio = area_ratio_at(M_original)\n\n# Find Mach number back from area ratio\nM_subsonic = mach_by_area_ratio(A_ratio, 1.4, 0.1)\nM_supersonic = mach_by_area_ratio(A_ratio, 1.4, 2.0)\n\nprintln(\"Original Mach: $M_original\")\nprintln(\"Calculated area ratio: $(round(A_ratio, digits=3))\")\nprintln(\"Subsonic solution: $(round(M_subsonic, digits=3))\")\nprintln(\"Supersonic solution: $(round(M_supersonic, digits=3))\")\nprintln(\"Error: $(round(abs(M_supersonic - M_original), digits=6))\")","category":"page"},{"location":"api/nozzle/#Limitations-and-Considerations","page":"Nozzle Analysis","title":"Limitations and Considerations","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"One-dimensional flow: Assumes uniform properties across each cross-section\nIsentropic process: No friction, heat transfer, or shock waves\nPerfect gas: Constant specific heats and ideal gas behavior\nSteady flow: Time-invariant conditions\nInviscid flow: No boundary layer effects\nNo real gas effects: No dissociation, ionization, or vibrational excitation","category":"page"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"For practical nozzle design, corrections for viscous effects, heat transfer, and real gas behavior may be necessary.","category":"page"},{"location":"api/nozzle/#See-Also","page":"Nozzle Analysis","title":"See Also","text":"","category":"section"},{"location":"api/nozzle/","page":"Nozzle Analysis","title":"Nozzle Analysis","text":"Isentropic Relations: For property ratio calculations\nNormal Shock Waves: For shock analysis in over-expanded nozzles\nAtmospheric Model: For ambient conditions in nozzle analysis\nPrandtl-Meyer Expansion: For expansion wave analysis","category":"page"},{"location":"manual/examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"manual/examples/","page":"Examples","title":"Examples","text":"This page provides comprehensive examples demonstrating practical use cases and workflows with CompAir.jl.","category":"page"},{"location":"manual/examples/#Example-1:-Supersonic-Wind-Tunnel-Design","page":"Examples","title":"Example 1: Supersonic Wind Tunnel Design","text":"","category":"section"},{"location":"manual/examples/","page":"Examples","title":"Examples","text":"Design a supersonic wind tunnel to achieve Mach 2.5 test conditions.","category":"page"},{"location":"manual/examples/","page":"Examples","title":"Examples","text":"using CompAir\n\n# Design requirements\nM_test = 2.5  # Test section Mach number\np0 = 500000   # Stagnation pressure (Pa)\nT0 = 300      # Stagnation temperature (K)\n\nprintln(\"=== Supersonic Wind Tunnel Design ===\")\nprintln(\"Target test Mach number: $M_test\")\n\n# Calculate nozzle area ratio\narea_ratio = area_ratio_at(M_test)\nprintln(\"Required nozzle area ratio A/A*: $(round(area_ratio, digits=2))\")\n\n# Calculate test section conditions\nT_ratio = t0_over_t(M_test)\np_ratio = p0_over_p(M_test)\nrho_ratio = rho0_over_rho(M_test)\n\nT_test = T0 / T_ratio\np_test = p0 / p_ratio\nrho_test = 1.225 * p_test / (287 * T_test)  # Using ideal gas law\n\nprintln(\"\\nTest Section Conditions:\")\nprintln(\"Temperature: $(round(T_test, digits=1)) K\")\nprintln(\"Pressure: $(round(p_test/1000, digits=1)) kPa\")\nprintln(\"Density: $(round(rho_test, digits=3)) kg/m³\")\n\n# Calculate Reynolds number per meter\nmu = sutherland_mu(T_test)\nRe_per_m = rho_test * M_test * sqrt(1.4 * 287 * T_test) / mu\n\nprintln(\"Dynamic viscosity: $(round(mu*1e6, digits=2)) μPa·s\")\nprintln(\"Reynolds number per meter: $(round(Re_per_m/1e6, digits=2)) million/m\")","category":"page"},{"location":"manual/examples/#Example-2:-Shock-Wave-Interaction-Analysis","page":"Examples","title":"Example 2: Shock Wave Interaction Analysis","text":"","category":"section"},{"location":"manual/examples/","page":"Examples","title":"Examples","text":"Analyze the interaction of an oblique shock with a normal shock.","category":"page"},{"location":"manual/examples/","page":"Examples","title":"Examples","text":"using CompAir\n\n# Initial conditions\nM1 = 3.0      # Initial Mach number\ntheta1 = 20.0 # First oblique shock angle (degrees)\n\nprintln(\"=== Shock Wave Interaction Analysis ===\")\nprintln(\"Initial Mach number: $M1\")\n\n# First oblique shock\nM2, rho21, p21, p021, beta1 = solve_oblique(M1, theta1)\n\nprintln(\"\\nFirst Oblique Shock (θ = $(theta1)°):\")\nprintln(\"Shock angle β₁ = $(round(beta1, digits=1))°\")\nprintln(\"M₂ = $(round(M2, digits=3))\")\nprintln(\"p₂/p₁ = $(round(p21, digits=3))\")\n\n# Second oblique shock with different angle\ntheta2 = 15.0\nM3, rho32, p32, p032, beta2 = solve_oblique(M2, theta2)\n\nprintln(\"\\nSecond Oblique Shock (θ = $(theta2)°):\")\nprintln(\"Shock angle β₂ = $(round(beta2, digits=1))°\")\nprintln(\"M₃ = $(round(M3, digits=3))\")\nprintln(\"p₃/p₂ = $(round(p32, digits=3))\")\n\n# Total pressure ratios and losses\ntotal_p_ratio = p21 * p32\ntotal_p0_ratio = p021 * p032\n\nprintln(\"\\nOverall Results:\")\nprintln(\"Total deflection: $(theta1 + theta2)°\")\nprintln(\"Final Mach number: $(round(M3, digits=3))\")\nprintln(\"Total pressure ratio p₃/p₁: $(round(total_p_ratio, digits=3))\")\nprintln(\"Total pressure loss: $(round((1-total_p0_ratio)*100, digits=1))%\")\n\n# Compare with single shock at same total angle\ntheta_total = theta1 + theta2\nM_single, rho_single, p_single, p0_single, beta_single = solve_oblique(M1, theta_total)\n\nprintln(\"\\nComparison with Single Shock (θ = $(theta_total)°):\")\nprintln(\"Single shock β = $(round(beta_single, digits=1))°\")\nprintln(\"Single shock M₂ = $(round(M_single, digits=3))\")\nprintln(\"Single shock pressure loss: $(round((1-p0_single)*100, digits=1))%\")","category":"page"},{"location":"manual/examples/#Example-3:-Nozzle-Flow-with-Back-Pressure-Effects","page":"Examples","title":"Example 3: Nozzle Flow with Back Pressure Effects","text":"","category":"section"},{"location":"manual/examples/","page":"Examples","title":"Examples","text":"Analyze nozzle performance under different back pressure conditions.","category":"page"},{"location":"manual/examples/","page":"Examples","title":"Examples","text":"using CompAir\n\n# Nozzle geometry\nA_ratio_exit = 3.0  # Exit area ratio A_e/A*\n\nprintln(\"=== Nozzle Back Pressure Analysis ===\")\nprintln(\"Nozzle exit area ratio: $A_ratio_exit\")\n\n# Find design exit Mach number\nM_design = mach_by_area_ratio(A_ratio_exit, 1.4, 2.0)  # Supersonic solution\nprintln(\"Design exit Mach number: $(round(M_design, digits=3))\")\n\n# Design exit pressure ratio\np_design = p0_over_p(M_design)\nprintln(\"Design exit pressure ratio p₀/pₑ: $(round(p_design, digits=2))\")\n\n# Operating conditions\np0 = 300000  # Stagnation pressure (Pa)\np_design_exit = p0 / p_design\n\nprintln(\"\\nOperating Analysis:\")\nprintln(\"Stagnation pressure: $(p0/1000) kPa\")\nprintln(\"Design exit pressure: $(round(p_design_exit/1000, digits=1)) kPa\")\n\n# Different back pressure scenarios\nback_pressures = [0.5, 0.8, 1.0, 1.2, 1.5] .* p_design_exit\n\nprintln(\"\\nBack Pressure Effects:\")\nprintln(\"pb/p₀\\t\\tpb (kPa)\\tFlow Condition\")\nprintln(\"-----\\t\\t--------\\t--------------\")\n\nfor pb in back_pressures\n    pb_ratio = pb / p0\n    \n    if pb < p_design_exit\n        condition = \"Overexpanded (design)\"\n        M_exit = M_design\n    elseif pb_ratio > 1/p0_over_p(1.0)  # Critical pressure ratio\n        condition = \"Subsonic throughout\"\n        M_exit = mach_by_area_ratio(A_ratio_exit, 1.4, 0.1)  # Subsonic solution\n    else\n        condition = \"Shock in nozzle\"\n        M_exit = \"Complex\"\n    end\n    \n    println(\"$(round(pb_ratio, digits=3))\\t\\t$(round(pb/1000, digits=1))\\t\\t$condition\")\nend","category":"page"},{"location":"manual/examples/#Example-4:-Atmospheric-Flight-Analysis","page":"Examples","title":"Example 4: Atmospheric Flight Analysis","text":"","category":"section"},{"location":"manual/examples/","page":"Examples","title":"Examples","text":"Calculate flight conditions at different altitudes and speeds.","category":"page"},{"location":"manual/examples/","page":"Examples","title":"Examples","text":"using CompAir\n\n# Flight envelope analysis\naltitudes = [0.0, 5.0, 11.0, 20.0, 30.0]  # km\nvelocities = [200, 300, 400, 500]          # m/s\n\nprintln(\"=== Atmospheric Flight Analysis ===\")\nprintln(\"Alt(km)\\tV(m/s)\\tM\\tT(K)\\tp(kPa)\\tρ(kg/m³)\\tRe/m(×10⁶)\")\nprintln(\"------\\t------\\t-----\\t-----\\t------\\t--------\\t----------\")\n\nfor alt in altitudes\n    # Get atmospheric properties\n    rho, p, T, a, mu = atmos1976_at(alt)\n    \n    for V in velocities\n        # Calculate flight Mach number\n        M = V / a\n        \n        # Calculate Reynolds number per meter\n        Re_per_m = rho * V / mu\n        \n        # Only print if subsonic or low supersonic (practical range)\n        if M < 3.0\n            println(\"$(alt)\\t$(V)\\t$(round(M, digits=2))\\t$(round(T, digits=1))\\t$(round(p/1000, digits=1))\\t$(round(rho, digits=3))\\t\\t$(round(Re_per_m/1e6, digits=2))\")\n        end\n    end\nend\n\n# High-altitude supersonic analysis\nprintln(\"\\n=== High-Altitude Supersonic Flight ===\")\nalt_cruise = 18.0  # km (typical supersonic cruise altitude)\nM_cruise = 2.0     # Cruise Mach number\n\nrho, p, T, a, mu = atmos1976_at(alt_cruise)\nV_cruise = M_cruise * a\n\nprintln(\"Cruise conditions at $(alt_cruise) km altitude:\")\nprintln(\"Mach number: $M_cruise\")\nprintln(\"True airspeed: $(round(V_cruise, digits=1)) m/s\")\nprintln(\"Temperature: $(round(T, digits=1)) K\")\nprintln(\"Pressure: $(round(p/1000, digits=1)) kPa\")\nprintln(\"Density: $(round(rho, digits=3)) kg/m³\")\n\n# Calculate stagnation conditions\nT0 = T * t0_over_t(M_cruise)\np0 = p * p0_over_p(M_cruise)\n\nprintln(\"\\nStagnation conditions:\")\nprintln(\"Stagnation temperature: $(round(T0, digits=1)) K\")\nprintln(\"Stagnation pressure: $(round(p0/1000, digits=1)) kPa\")","category":"page"},{"location":"manual/examples/#Example-5:-Shock-Expansion-Method-for-Airfoil-Analysis","page":"Examples","title":"Example 5: Shock-Expansion Method for Airfoil Analysis","text":"","category":"section"},{"location":"manual/examples/","page":"Examples","title":"Examples","text":"Analyze supersonic flow over a diamond airfoil using shock-expansion theory.","category":"page"},{"location":"manual/examples/","page":"Examples","title":"Examples","text":"using CompAir\n\n# Diamond airfoil geometry\nhalf_angle = 5.0  # degrees\nM_inf = 2.5       # Freestream Mach number\n\nprintln(\"=== Diamond Airfoil Analysis ===\")\nprintln(\"Half angle: $(half_angle)°\")\nprintln(\"Freestream Mach: $M_inf\")\n\n# Upper surface analysis\nprintln(\"\\nUpper Surface:\")\n\n# Leading edge oblique shock\nM2_upper, rho21_upper, p21_upper, p021_upper, beta1_upper = solve_oblique(M_inf, half_angle)\nprintln(\"Leading edge shock:\")\nprintln(\"  Shock angle: $(round(beta1_upper, digits=1))°\")\nprintln(\"  M₂: $(round(M2_upper, digits=3))\")\nprintln(\"  p₂/p₁: $(round(p21_upper, digits=3))\")\n\n# Trailing edge expansion\nM3_upper = expand_mach2(M2_upper, 2*half_angle)  # Turn back to freestream direction\np31_upper = expand_p2(M2_upper, 2*half_angle)    # Pressure ratio p2/p3\n\nprintln(\"Trailing edge expansion:\")\nprintln(\"  M₃: $(round(M3_upper, digits=3))\")\nprintln(\"  p₂/p₃: $(round(p31_upper, digits=3))\")\n\n# Lower surface analysis  \nprintln(\"\\nLower Surface:\")\n\n# Leading edge expansion\nM2_lower = expand_mach2(M_inf, half_angle)\np21_lower = expand_p2(M_inf, half_angle)\n\nprintln(\"Leading edge expansion:\")\nprintln(\"  M₂: $(round(M2_lower, digits=3))\")\nprintln(\"  p₁/p₂: $(round(p21_lower, digits=3))\")\n\n# Trailing edge shock\nM3_lower, rho32_lower, p32_lower, p032_lower, beta2_lower = solve_oblique(M2_lower, half_angle)\n\nprintln(\"Trailing edge shock:\")\nprintln(\"  Shock angle: $(round(beta2_lower, digits=1))°\")\nprintln(\"  M₃: $(round(M3_lower, digits=3))\")\nprintln(\"  p₃/p₂: $(round(p32_lower, digits=3))\")\n\n# Pressure coefficient calculation\np_upper = p21_upper  # Pressure on upper surface relative to freestream\np_lower = 1.0 / p21_lower  # Pressure on lower surface relative to freestream\n\nCp_upper = 2/(1.4 * M_inf^2) * (p_upper - 1)\nCp_lower = 2/(1.4 * M_inf^2) * (p_lower - 1)\n\nprintln(\"\\nPressure Coefficients:\")\nprintln(\"Upper surface Cp: $(round(Cp_upper, digits=4))\")\nprintln(\"Lower surface Cp: $(round(Cp_lower, digits=4))\")\nprintln(\"ΔCp (lift): $(round(Cp_lower - Cp_upper, digits=4))\")","category":"page"},{"location":"manual/examples/#Example-6:-Converging-Diverging-Nozzle-Starting-Problem","page":"Examples","title":"Example 6: Converging-Diverging Nozzle Starting Problem","text":"","category":"section"},{"location":"manual/examples/","page":"Examples","title":"Examples","text":"Analyze the starting process of a supersonic nozzle.","category":"page"},{"location":"manual/examples/","page":"Examples","title":"Examples","text":"using CompAir\n\n# Nozzle geometry\nA_ratio_exit = 4.0  # Exit area ratio\n\nprintln(\"=== CD Nozzle Starting Analysis ===\")\nprintln(\"Exit area ratio A_e/A*: $A_ratio_exit\")\n\n# Find required pressure ratios\nM_exit_design = mach_by_area_ratio(A_ratio_exit, 1.4, 2.0)  # Supersonic\np_ratio_design = p0_over_p(M_exit_design)\n\nprintln(\"Design exit Mach: $(round(M_exit_design, digits=3))\")\nprintln(\"Required pressure ratio p₀/pb: $(round(p_ratio_design, digits=2))\")\n\n# Starting pressure ratio (when shock is at exit)\n# At nozzle exit, we need the shock to just disappear\nM_shock_upstream = M_exit_design\nM_shock_downstream, _, _, p0_loss, _ = solve_normal(M_shock_upstream)\n\n# The upstream stagnation pressure must account for the shock loss\np_ratio_starting = p_ratio_design / p0_loss\n\nprintln(\"Starting pressure ratio: $(round(p_ratio_starting, digits=2))\")\nprintln(\"Overexpansion ratio: $(round(p_ratio_starting/p_ratio_design, digits=2))\")\n\n# Operating map\nprintln(\"\\nOperating Conditions:\")\nprintln(\"p₀/pb\\t\\tCondition\\t\\tExit Mach\")\nprintln(\"-----\\t\\t---------\\t\\t---------\")\n\npressure_ratios = [1.0, 2.0, 5.0, 10.0, p_ratio_starting, p_ratio_design * 1.1]\n\nfor pr in pressure_ratios\n    if pr < 1.89  # Critical pressure ratio for choking\n        condition = \"No choking\"\n        M_exit = \"< 1\"\n    elseif pr < p_ratio_starting\n        condition = \"Shock in nozzle\"\n        M_exit = \"Variable\"\n    elseif pr ≈ p_ratio_starting\n        condition = \"Shock at exit\"\n        M_exit = \"$(round(M_shock_downstream, digits=3))\"\n    elseif pr < p_ratio_design\n        condition = \"Underexpanded\"\n        M_exit = \"$(round(M_exit_design, digits=3))\"\n    else\n        condition = \"Design/Overexpanded\"\n        M_exit = \"$(round(M_exit_design, digits=3))\"\n    end\n    \n    println(\"$(round(pr, digits=1))\\t\\t$condition\\t\\t$M_exit\")\nend","category":"page"},{"location":"manual/examples/#Example-7:-Method-of-Characteristics-Application","page":"Examples","title":"Example 7: Method of Characteristics Application","text":"","category":"section"},{"location":"manual/examples/","page":"Examples","title":"Examples","text":"Simple application showing characteristic line method concepts.","category":"page"},{"location":"manual/examples/","page":"Examples","title":"Examples","text":"using CompAir\n\n# Prandtl-Meyer expansion around a corner\nM1 = 2.0\ntheta_total = 30.0  # Total turning angle\nn_steps = 6         # Number of characteristic steps\n\nprintln(\"=== Method of Characteristics Example ===\")\nprintln(\"Initial Mach: $M1\")\nprintln(\"Total turning: $(theta_total)°\")\nprintln(\"Steps: $n_steps\")\n\ntheta_step = theta_total / n_steps\nM_current = M1\n\nprintln(\"\\nStep\\tθ(°)\\tM\\tν(°)\\tμ(°)\")\nprintln(\"----\\t----\\t-----\\t-----\\t-----\")\n\nfor i in 0:n_steps\n    theta_current = i * theta_step\n    \n    if i == 0\n        nu_current = prandtl_meyer(M_current)\n        mu_current = asind(1/M_current)  # Mach angle\n        println(\"$i\\t$(round(theta_current, digits=1))\\t$(round(M_current, digits=3))\\t$(round(nu_current, digits=2))\\t$(round(mu_current, digits=1))\")\n    else\n        M_current = expand_mach2(M1, theta_current)\n        nu_current = prandtl_meyer(M_current)\n        mu_current = asind(1/M_current)\n        println(\"$i\\t$(round(theta_current, digits=1))\\t$(round(M_current, digits=3))\\t$(round(nu_current, digits=2))\\t$(round(mu_current, digits=1))\")\n    end\nend\n\n# Compare with exact solution\nM_exact = expand_mach2(M1, theta_total)\nprintln(\"\\nExact solution M_final: $(round(M_exact, digits=3))\")\nprintln(\"Final step M: $(round(M_current, digits=3))\")\nprintln(\"Error: $(round(abs(M_exact - M_current)/M_exact * 100, digits=2))%\")","category":"page"},{"location":"manual/examples/","page":"Examples","title":"Examples","text":"These examples demonstrate the versatility of CompAir.jl for solving practical compressible flow problems. Each example builds upon the basic functions to analyze complex scenarios encountered in aerospace engineering, propulsion systems, and wind tunnel design.","category":"page"},{"location":"dev/contributing/#Contributing-to-CompAir.jl","page":"Contributing","title":"Contributing to CompAir.jl","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"We welcome contributions to CompAir.jl! This guide will help you get started with contributing to the project.","category":"page"},{"location":"dev/contributing/#Getting-Started","page":"Contributing","title":"Getting Started","text":"","category":"section"},{"location":"dev/contributing/#Prerequisites","page":"Contributing","title":"Prerequisites","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Julia 1.11 or later\nGit\nGitHub account","category":"page"},{"location":"dev/contributing/#Setting-Up-the-Development-Environment","page":"Contributing","title":"Setting Up the Development Environment","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Fork the repository on GitHub\nClone your fork:\ngit clone https://github.com/your-username/CompAir.jl.git\ncd CompAir.jl\nSet up the development environment:\nusing Pkg\nPkg.activate(\".\")\nPkg.instantiate()\nAdd the upstream remote:\ngit remote add upstream https://github.com/seawhanlee/CompAir.jl.git","category":"page"},{"location":"dev/contributing/#Development-Workflow","page":"Contributing","title":"Development Workflow","text":"","category":"section"},{"location":"dev/contributing/#1.-Create-a-Feature-Branch","page":"Contributing","title":"1. Create a Feature Branch","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"git checkout -b feature/your-feature-name","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Use descriptive branch names:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"feature/add-real-gas-effects\nbugfix/fix-atmospheric-indexing\ndocs/improve-examples","category":"page"},{"location":"dev/contributing/#2.-Make-Your-Changes","page":"Contributing","title":"2. Make Your Changes","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Write clean, readable code\nFollow Julia naming conventions\nAdd docstrings to new functions\nInclude appropriate error handling","category":"page"},{"location":"dev/contributing/#3.-Test-Your-Changes","page":"Contributing","title":"3. Test Your Changes","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Run the test suite to ensure nothing is broken:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"using Pkg\nPkg.test()","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Add tests for new functionality:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"# Add tests to test/ directory\n# Follow existing test patterns","category":"page"},{"location":"dev/contributing/#4.-Update-Documentation","page":"Contributing","title":"4. Update Documentation","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"If you've added new functions or changed existing ones:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Update docstrings with proper formatting\nAdd examples to the documentation\nUpdate API reference if needed","category":"page"},{"location":"dev/contributing/#5.-Commit-Your-Changes","page":"Contributing","title":"5. Commit Your Changes","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Write clear, descriptive commit messages:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"git add .\ngit commit -m \"Add real gas effects to shock calculations\n\n- Implement virial equation of state\n- Add temperature-dependent specific heats\n- Update shock wave relations for real gas\n- Add validation tests against experimental data\"","category":"page"},{"location":"dev/contributing/#6.-Submit-a-Pull-Request","page":"Contributing","title":"6. Submit a Pull Request","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Push your branch to your fork:\ngit push origin feature/your-feature-name\nCreate a pull request on GitHub\nFill out the pull request template\nLink any related issues","category":"page"},{"location":"dev/contributing/#Code-Style-Guidelines","page":"Contributing","title":"Code Style Guidelines","text":"","category":"section"},{"location":"dev/contributing/#Julia-Style","page":"Contributing","title":"Julia Style","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Follow the Julia Style Guide:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Use snake_case for function and variable names\nUse PascalCase for types and modules\nUse descriptive names: calculate_shock_angle not calc_beta\nKeep lines under 92 characters when practical","category":"page"},{"location":"dev/contributing/#Docstring-Format","page":"Contributing","title":"Docstring Format","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Use the following format for docstrings:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"\"\"\"\n    function_name(arg1, arg2; keyword=default)\n\nBrief description of what the function does.\n\n# Arguments\n- `arg1::Type`: Description of first argument\n- `arg2::Type`: Description of second argument\n- `keyword::Type=default`: Description of keyword argument\n\n# Returns\n- `result::Type`: Description of return value\n\n# Examples","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"jldoctest julia> function_name(1.5, 2.0) 3.5","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"\n# Notes\nAny additional notes about the function behavior, limitations, or theory.\n\"\"\"\nfunction function_name(arg1, arg2; keyword=default)\n    # Implementation\nend","category":"page"},{"location":"dev/contributing/#Error-Handling","page":"Contributing","title":"Error Handling","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Use appropriate exception types\nProvide helpful error messages\nCheck input validity early","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"function example_function(M::Real)\n    if M <= 0\n        throw(ArgumentError(\"Mach number must be positive, got M = $M\"))\n    end\n    if M < 1\n        throw(DomainError(M, \"Function only valid for supersonic flow (M ≥ 1)\"))\n    end\n    \n    # Function implementation\nend","category":"page"},{"location":"dev/contributing/#Testing-Guidelines","page":"Contributing","title":"Testing Guidelines","text":"","category":"section"},{"location":"dev/contributing/#Test-Organization","page":"Contributing","title":"Test Organization","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Tests are organized in the test/ directory:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"test/\n├── runtests.jl          # Main test runner\n├── test_isentropic.jl   # Isentropic relation tests\n├── test_shocks.jl       # Shock wave tests\n├── test_atmosphere.jl   # Atmospheric model tests\n└── test_utilities.jl    # Helper function tests","category":"page"},{"location":"dev/contributing/#Writing-Tests","page":"Contributing","title":"Writing Tests","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Use the Test standard library:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"using Test\nusing CompAir\n\n@testset \"Isentropic Relations\" begin\n    @testset \"Temperature Ratio\" begin\n        # Test known values\n        @test t0_over_t(0.0) ≈ 1.0\n        @test t0_over_t(1.0) ≈ 1.2\n        @test t0_over_t(2.0) ≈ 1.8\n        \n        # Test error conditions\n        @test_throws DomainError t0_over_t(-1.0)\n    end\n    \n    @testset \"Pressure Ratio\" begin\n        # Test consistency with temperature ratio\n        M = 1.5\n        T_ratio = t0_over_t(M)\n        p_ratio = p0_over_p(M)\n        @test p_ratio ≈ T_ratio^(1.4/0.4) rtol=1e-10\n    end\nend","category":"page"},{"location":"dev/contributing/#Test-Coverage","page":"Contributing","title":"Test Coverage","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Test normal operation with typical values\nTest edge cases and boundary conditions\nTest error conditions and input validation\nInclude regression tests for bug fixes\nTest different gas properties when applicable","category":"page"},{"location":"dev/contributing/#Documentation-Guidelines","page":"Contributing","title":"Documentation Guidelines","text":"","category":"section"},{"location":"dev/contributing/#API-Documentation","page":"Contributing","title":"API Documentation","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"All public functions must have docstrings\nInclude mathematical background when relevant\nProvide practical examples\nDocument limitations and assumptions","category":"page"},{"location":"dev/contributing/#Examples","page":"Contributing","title":"Examples","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"When adding examples:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Use realistic engineering values\nShow complete workflows\nInclude physical interpretation of results\nExplain the engineering significance","category":"page"},{"location":"dev/contributing/#Building-Documentation","page":"Contributing","title":"Building Documentation","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Build documentation locally to test changes:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"cd docs/\njulia --project\nusing Pkg; Pkg.instantiate()\ninclude(\"make.jl\")","category":"page"},{"location":"dev/contributing/#Submitting-Issues","page":"Contributing","title":"Submitting Issues","text":"","category":"section"},{"location":"dev/contributing/#Bug-Reports","page":"Contributing","title":"Bug Reports","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"When reporting bugs, include:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Julia version and CompAir.jl version\nMinimal reproducible example\nExpected vs. actual behavior\nError messages (if any)\nSystem information (OS, etc.)","category":"page"},{"location":"dev/contributing/#Feature-Requests","page":"Contributing","title":"Feature Requests","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"For feature requests, include:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Clear description of the proposed feature\nUse cases and motivation\nSuggested API design\nReferences to relevant theory or literature","category":"page"},{"location":"dev/contributing/#Code-Review-Process","page":"Contributing","title":"Code Review Process","text":"","category":"section"},{"location":"dev/contributing/#What-We-Look-For","page":"Contributing","title":"What We Look For","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Correctness: Does the code work as intended?\nPerformance: Are there obvious performance issues?\nStyle: Does it follow our style guidelines?\nDocumentation: Are functions properly documented?\nTests: Are there adequate tests?\nMaintainability: Is the code readable and well-organized?","category":"page"},{"location":"dev/contributing/#Review-Timeline","page":"Contributing","title":"Review Timeline","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Initial review within 1-2 weeks\nFollow-up reviews within a few days\nMerge after approval from maintainers","category":"page"},{"location":"dev/contributing/#Performance-Considerations","page":"Contributing","title":"Performance Considerations","text":"","category":"section"},{"location":"dev/contributing/#Optimization-Guidelines","page":"Contributing","title":"Optimization Guidelines","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Profile before optimizing\nAvoid unnecessary allocations\nUse appropriate data types\nConsider numerical stability\nBenchmark performance-critical changes","category":"page"},{"location":"dev/contributing/#Benchmarking","page":"Contributing","title":"Benchmarking","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Use BenchmarkTools.jl for performance testing:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"using BenchmarkTools\n\n@benchmark your_function(args...)","category":"page"},{"location":"dev/contributing/#Release-Process","page":"Contributing","title":"Release Process","text":"","category":"section"},{"location":"dev/contributing/#Version-Numbers","page":"Contributing","title":"Version Numbers","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"We follow Semantic Versioning:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Major (x.0.0): Breaking changes\nMinor (1.x.0): New features, backward compatible\nPatch (1.1.x): Bug fixes, backward compatible","category":"page"},{"location":"dev/contributing/#Release-Checklist","page":"Contributing","title":"Release Checklist","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Before releasing:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"[ ] All tests pass\n[ ] Documentation is updated\n[ ] CHANGELOG.md is updated\n[ ] Version number is bumped\n[ ] Examples work correctly\n[ ] Performance regressions are addressed","category":"page"},{"location":"dev/contributing/#Community","page":"Contributing","title":"Community","text":"","category":"section"},{"location":"dev/contributing/#Getting-Help","page":"Contributing","title":"Getting Help","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"GitHub Issues: For bugs and feature requests\nGitHub Discussions: For questions and general discussion\nJulia Discourse: For broader Julia community support","category":"page"},{"location":"dev/contributing/#Code-of-Conduct","page":"Contributing","title":"Code of Conduct","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"We are committed to providing a welcoming and inclusive environment. Please be:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Respectful: Treat others with courtesy and respect\nConstructive: Provide helpful feedback and suggestions\nCollaborative: Work together towards common goals\nProfessional: Maintain a professional tone in all interactions","category":"page"},{"location":"dev/contributing/#Recognition","page":"Contributing","title":"Recognition","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Contributors will be acknowledged in:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"README.md contributors section\nRelease notes for significant contributions\nAcademic citations when appropriate","category":"page"},{"location":"dev/contributing/#License-and-Attribution","page":"Contributing","title":"License and Attribution","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"By contributing to CompAir.jl, you agree that your contributions will be licensed under the same CC BY-NC-SA 4.0 license as the project.","category":"page"},{"location":"dev/contributing/#Important-Notes","page":"Contributing","title":"Important Notes","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"This project is based on the original Python CompAir module by Inha University AADL\nAll contributions must comply with the NonCommercial (NC) terms of the license\nYour contributions will be attributed in the project's commit history and release notes\nSignificant contributions may be acknowledged in the README and documentation","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Please ensure that any code, documentation, or other materials you contribute:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Do not violate any third-party copyrights or licenses\nAre your original work or properly attributed\nComply with the project's license terms","category":"page"},{"location":"dev/contributing/#Questions?","page":"Contributing","title":"Questions?","text":"","category":"section"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"If you have any questions about contributing, please:","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Check existing documentation and issues\nAsk in GitHub Discussions\nContact the maintainers directly","category":"page"},{"location":"dev/contributing/","page":"Contributing","title":"Contributing","text":"Thank you for contributing to CompAir.jl!","category":"page"},{"location":"api/prandtl_expand/#Prandtl-Meyer-Expansion","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"","category":"section"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"This module provides functions for analyzing Prandtl-Meyer expansion waves, which occur when supersonic flow turns around a convex corner or expands through a diverging channel.","category":"page"},{"location":"api/prandtl_expand/#Overview","page":"Prandtl-Meyer Expansion","title":"Overview","text":"","category":"section"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Prandtl-Meyer expansion waves are isentropic compression waves that occur when supersonic flow encounters a convex corner or expansion. Unlike shock waves, expansion waves:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Are isentropic (reversible process)\nIncrease Mach number and velocity\nDecrease pressure, density, and temperature\nMaintain total temperature and pressure\nCan turn flow through large angles without losses\nConsist of infinitesimally weak waves (Mach waves)","category":"page"},{"location":"api/prandtl_expand/#Theory","page":"Prandtl-Meyer Expansion","title":"Theory","text":"","category":"section"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Prandtl-Meyer expansion is governed by the Prandtl-Meyer function ν(M), which relates the Mach number to the maximum turning angle:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Prandtl-Meyer function: nu(M) = sqrtfracgamma+1gamma-1 arctansqrtfracgamma-1gamma+1(M^2-1) - arctansqrtM^2-1","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Turning angle relationship: theta_12 = nu(M_2) - nu(M_1)","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Property ratios (from isentropic relations):","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Pressure: fracp_2p_1 = left(frac1 + fracgamma-12M_1^21 + fracgamma-12M_2^2right)^fracgammagamma-1\nTemperature: fracT_2T_1 = frac1 + fracgamma-12M_1^21 + fracgamma-12M_2^2\nDensity: fracrho_2rho_1 = left(frac1 + fracgamma-12M_1^21 + fracgamma-12M_2^2right)^frac1gamma-1","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Where:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"M_1, M_2 = upstream and downstream Mach numbers\ntheta_12 = turning angle from state 1 to state 2\ngamma = specific heat ratio","category":"page"},{"location":"api/prandtl_expand/#Functions","page":"Prandtl-Meyer Expansion","title":"Functions","text":"","category":"section"},{"location":"api/prandtl_expand/#CompAir.prandtl_meyer","page":"Prandtl-Meyer Expansion","title":"CompAir.prandtl_meyer","text":"prandtl_meyer(M, gamma=1.4)\n\nPrandtl Meyer 함수 nu 계산\n\n인자\n\nM::Float64: 입구 마하수\ngamma::Float64=1.4: 비열비\n\n반환값\n\nnu::Float64: Prandtl-Meyer 함수 (단위: 도)\n\n\n\n\n\n","category":"function"},{"location":"api/prandtl_expand/#CompAir.expand_mach2","page":"Prandtl-Meyer Expansion","title":"CompAir.expand_mach2","text":"expand_mach2(M1, theta, gamma=1.4)\n\n마하수 M1인 유동이 theta 만큼 회전했을 때 마하수 계산\n\n인자\n\nM1::Float64: 입구 마하수\ntheta::Float64: 유동 회전 각도 (단위: 도)\ngamma::Float64=1.4: 비열비\n\n반환값\n\nmach::Float64: 팽창파를 지난 후 마하수\n\n\n\n\n\n","category":"function"},{"location":"api/prandtl_expand/#CompAir.expand_p2","page":"Prandtl-Meyer Expansion","title":"CompAir.expand_p2","text":"expand_p2(M1, theta, gamma=1.4)\n\n마하수 M1인 유동이 theta 만큼 회전했을 때 압력 계산\n\n인자\n\nM1::Float64: 입구 마하수\ntheta::Float64: 유동 회전 각도 (단위: 도)\ngamma::Float64=1.4: 비열비\n\n반환값\n\np::Float64: 팽창파를 지난 후 압력비 (p1/p2)\n\n\n\n\n\n","category":"function"},{"location":"api/prandtl_expand/#CompAir.theta_p","page":"Prandtl-Meyer Expansion","title":"CompAir.theta_p","text":"theta_p(pratio, M1, gamma=1.4)\n\n압력비를 만족하도록 발생하는 팽창파 각도 계산\n\n인자\n\npratio::Float64: 팽창파 전/후 압력비 (p1/p2)\nM1::Float64: 입구 마하수\ngamma::Float64=1.4: 비열비\n\n반환값\n\ntheta::Float64: 유동 회전 각도 (단위: 도)\n\n\n\n\n\n","category":"function"},{"location":"api/prandtl_expand/#Function-Details","page":"Prandtl-Meyer Expansion","title":"Function Details","text":"","category":"section"},{"location":"api/prandtl_expand/#prandtl_meyer","page":"Prandtl-Meyer Expansion","title":"prandtl_meyer","text":"","category":"section"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"prandtl_meyer(M, gamma=1.4)","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Calculate the Prandtl-Meyer function ν(M) which represents the maximum turning angle from sonic conditions.","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Arguments:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"M::Real: Mach number (must be ≥ 1)\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Returns:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Float64: Prandtl-Meyer angle ν in degrees","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Formula: nu(M) = sqrtfracgamma+1gamma-1 arctansqrtfracgamma-1gamma+1(M^2-1) - arctansqrtM^2-1","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Example:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"julia> prandtl_meyer(2.0)\n26.379760813416906\n\njulia> prandtl_meyer(3.0)\n49.75681638417519\n\njulia> prandtl_meyer(1.0)\n0.0","category":"page"},{"location":"api/prandtl_expand/#expand_mach2","page":"Prandtl-Meyer Expansion","title":"expand_mach2","text":"","category":"section"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"expand_mach2(M1, theta, gamma=1.4)","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Calculate the downstream Mach number after a Prandtl-Meyer expansion through angle θ.","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Arguments:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"M1::Real: Upstream Mach number\ntheta::Real: Turning angle in degrees\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Returns:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Float64: Downstream Mach number","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Example:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"julia> expand_mach2(2.0, 20.0)\n2.3848314132746953\n\njulia> expand_mach2(1.5, 10.0)\n1.7985676229179285","category":"page"},{"location":"api/prandtl_expand/#expand_p2","page":"Prandtl-Meyer Expansion","title":"expand_p2","text":"","category":"section"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"expand_p2(M1, theta, gamma=1.4)","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Calculate the pressure ratio (p₁/p₂) across a Prandtl-Meyer expansion.","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Arguments:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"M1::Real: Upstream Mach number\ntheta::Real: Turning angle in degrees\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Returns:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Float64: Pressure ratio p₁/p₂","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Example:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"julia> expand_p2(2.0, 20.0)\n1.687094471207049\n\njulia> expand_p2(3.0, 15.0)\n1.4720270270270274","category":"page"},{"location":"api/prandtl_expand/#theta_p","page":"Prandtl-Meyer Expansion","title":"theta_p","text":"","category":"section"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"theta_p(pratio, M1, gamma=1.4)","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Calculate the turning angle required to achieve a specified pressure ratio across an expansion.","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Arguments:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"pratio::Real: Desired pressure ratio p₁/p₂\nM1::Real: Upstream Mach number\ngamma::Real=1.4: Specific heat ratio","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Returns:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Float64: Required turning angle in degrees","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Example:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"julia> theta_p(1.5, 2.0)\n14.396394107665233\n\njulia> theta_p(2.0, 2.5)\n22.69419642857143","category":"page"},{"location":"api/prandtl_expand/#Applications","page":"Prandtl-Meyer Expansion","title":"Applications","text":"","category":"section"},{"location":"api/prandtl_expand/#Supersonic-Nozzle-Design","page":"Prandtl-Meyer Expansion","title":"Supersonic Nozzle Design","text":"","category":"section"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Design the diverging section of a supersonic nozzle:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"# Design requirements\nM_exit = 3.5      # Exit Mach number\nM_throat = 1.0    # Throat conditions\ntheta_max = 15.0  # Maximum wall angle\n\nprintln(\"Supersonic Nozzle Design:\")\nprintln(\"Exit Mach: $M_exit\")\nprintln(\"Maximum wall angle: $theta_max°\")\n\n# Calculate required turning angle\nnu_exit = prandtl_meyer(M_exit)\nnu_throat = prandtl_meyer(M_throat)  # = 0 for M = 1\ntheta_required = nu_exit - nu_throat\n\nprintln(\"Required turning angle: $(round(theta_required, digits=1))°\")\n\n# Check if design is feasible\nif theta_required/2 <= theta_max\n    println(\"Design feasible - wall angle: $(round(theta_required/2, digits=1))°\")\n    \n    # Calculate area ratio\n    area_ratio = area_ratio_at(M_exit)\n    println(\"Area ratio A_exit/A*: $(round(area_ratio, digits=2))\")\nelse\n    println(\"Design not feasible - requires curved walls or multiple sections\")\n    \n    # Calculate required sections\n    n_sections = ceil(theta_required / (2 * theta_max))\n    println(\"Minimum sections required: $n_sections\")\nend","category":"page"},{"location":"api/prandtl_expand/#Centered-Expansion-Fan","page":"Prandtl-Meyer Expansion","title":"Centered Expansion Fan","text":"","category":"section"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Analyze a centered expansion fan:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"M1 = 1.5\ntheta_total = 30.0  # Total turning angle\nn_waves = 6         # Number of Mach waves\n\nprintln(\"Centered Expansion Fan Analysis:\")\nprintln(\"Initial Mach: $M1\")\nprintln(\"Total turning: $theta_total°\")\nprintln(\"Number of waves: $n_waves\")\n\ntheta_step = theta_total / n_waves\nprintln(\"\\nWave\\tθ (°)\\tM\\tμ (°)\\tp/p₁\")\nprintln(\"----\\t-----\\t-----\\t-----\\t-----\")\n\nfor i in 0:n_waves\n    theta_current = i * theta_step\n    \n    if i == 0\n        M_current = M1\n        p_ratio = 1.0\n    else\n        M_current = expand_mach2(M1, theta_current)\n        p_ratio = 1.0 / expand_p2(M1, theta_current)\n    end\n    \n    mu = asind(1/M_current)  # Mach angle\n    \n    println(\"$i\\t$(round(theta_current, digits=1))\\t$(round(M_current, digits=3))\\t$(round(mu, digits=1))\\t$(round(p_ratio, digits=3))\")\nend","category":"page"},{"location":"api/prandtl_expand/#Flow-Over-Expansion-Corner","page":"Prandtl-Meyer Expansion","title":"Flow Over Expansion Corner","text":"","category":"section"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Analyze flow over a sharp expansion corner:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"# Supersonic flow over a backward-facing step\nM1 = 2.2\nstep_angle = 12.0  # degrees\n\nprintln(\"Flow Over Expansion Corner:\")\nprintln(\"Upstream Mach: $M1\")\nprintln(\"Corner angle: $step_angle°\")\n\n# Expansion analysis\nM2 = expand_mach2(M1, step_angle)\np_ratio = expand_p2(M1, step_angle)\n\n# Calculate other properties\nT_ratio = (1 + 0.2*M1^2) / (1 + 0.2*M2^2)\nrho_ratio = (T_ratio)^(1/0.4)\n\nprintln(\"\\nDownstream conditions:\")\nprintln(\"Mach number: $(round(M2, digits=3))\")\nprintln(\"Pressure ratio p₁/p₂: $(round(p_ratio, digits=3))\")\nprintln(\"Temperature ratio T₁/T₂: $(round(T_ratio, digits=3))\")\nprintln(\"Density ratio ρ₁/ρ₂: $(round(rho_ratio, digits=3))\")\n\n# Wave angles\nmu1 = asind(1/M1)  # Upstream Mach angle\nmu2 = asind(1/M2)  # Downstream Mach angle\n\nprintln(\"\\nWave characteristics:\")\nprintln(\"Upstream Mach angle: $(round(mu1, digits=1))°\")\nprintln(\"Downstream Mach angle: $(round(mu2, digits=1))°\")","category":"page"},{"location":"api/prandtl_expand/#Method-of-Characteristics-Application","page":"Prandtl-Meyer Expansion","title":"Method of Characteristics Application","text":"","category":"section"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Simple application showing characteristic line method concepts:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"# Prandtl-Meyer expansion around a corner\nM1 = 2.0\ntheta_total = 30.0  # Total turning angle\nn_steps = 6         # Number of characteristic steps\n\nprintln(\"Method of Characteristics Example:\")\nprintln(\"Initial Mach: $M1\")\nprintln(\"Total turning: $theta_total°\")\nprintln(\"Steps: $n_steps\")\n\ntheta_step = theta_total / n_steps\nM_current = M1\n\nprintln(\"\\nStep\\tθ(°)\\tM\\tν(°)\\tμ(°)\")\nprintln(\"----\\t----\\t-----\\t-----\\t-----\")\n\nfor i in 0:n_steps\n    theta_current = i * theta_step\n    \n    if i == 0\n        nu_current = prandtl_meyer(M_current)\n        mu_current = asind(1/M_current)  # Mach angle\n        println(\"$i\\t$(round(theta_current, digits=1))\\t$(round(M_current, digits=3))\\t$(round(nu_current, digits=2))\\t$(round(mu_current, digits=1))\")\n    else\n        M_current = expand_mach2(M1, theta_current)\n        nu_current = prandtl_meyer(M_current)\n        mu_current = asind(1/M_current)\n        println(\"$i\\t$(round(theta_current, digits=1))\\t$(round(M_current, digits=3))\\t$(round(nu_current, digits=2))\\t$(round(mu_current, digits=1))\")\n    end\nend\n\n# Compare with exact solution\nM_exact = expand_mach2(M1, theta_total)\nprintln(\"\\nExact solution M_final: $(round(M_exact, digits=3))\")\nprintln(\"Final step M: $(round(M_current, digits=3))\")\nprintln(\"Error: $(round(abs(M_exact - M_current)/M_exact * 100, digits=2))%\")","category":"page"},{"location":"api/prandtl_expand/#Different-Gases","page":"Prandtl-Meyer Expansion","title":"Different Gases","text":"","category":"section"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Analyze Prandtl-Meyer expansion for different gases:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"M1 = 2.0\ntheta = 20.0\n\ngases = [\n    (\"Air\", 1.4),\n    (\"Helium\", 1.67),\n    (\"Argon\", 1.67),\n    (\"CO₂\", 1.3)\n]\n\nprintln(\"Gas Effects on Prandtl-Meyer Expansion:\")\nprintln(\"M₁ = $M1, θ = $theta°\")\nprintln(\"Gas\\tγ\\tM₂\\tp₁/p₂\\tν₁ (°)\\tν₂ (°)\")\nprintln(\"---\\t----\\t----\\t----- -----\\t------\\t------\")\n\nfor (gas, gamma) in gases\n    M2 = expand_mach2(M1, theta, gamma)\n    p_ratio = expand_p2(M1, theta, gamma)\n    nu1 = prandtl_meyer(M1, gamma)\n    nu2 = prandtl_meyer(M2, gamma)\n    \n    println(\"$gas\\t$gamma\\t$(round(M2, digits=3))\\t$(round(p_ratio, digits=2))\\t$(round(nu1, digits=1))\\t$(round(nu2, digits=1))\")\nend","category":"page"},{"location":"api/prandtl_expand/#Maximum-Turning-Angle","page":"Prandtl-Meyer Expansion","title":"Maximum Turning Angle","text":"","category":"section"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Find the maximum theoretical turning angle:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"# For very high Mach numbers, ν approaches a maximum value\nM_high = 100.0\nnu_max = prandtl_meyer(M_high)\n\nprintln(\"Maximum Prandtl-Meyer angle:\")\nprintln(\"ν(M→∞) ≈ $(round(nu_max, digits=1))°\")\n\n# Theoretical maximum for γ = 1.4\nnu_theoretical = (sqrt((1.4+1)/(1.4-1)) - 1) * 90\nprintln(\"Theoretical maximum: $(round(nu_theoretical, digits=1))°\")","category":"page"},{"location":"api/prandtl_expand/#Validation-Examples","page":"Prandtl-Meyer Expansion","title":"Validation Examples","text":"","category":"section"},{"location":"api/prandtl_expand/#Prandtl-Meyer-Function-Values","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Function Values","text":"","category":"section"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Calculate the Prandtl-Meyer function for different Mach numbers:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"println(\"M\\tν(M) (°)\")\nprintln(\"---\\t-------\")\n\nfor M in 1.0:0.2:4.0\n    if M > 1.0  # Function only valid for M > 1\n        nu = prandtl_meyer(M)\n        println(\"$(round(M, digits=1))\\t$(round(nu, digits=1))\")\n    else\n        println(\"$(round(M, digits=1))\\t0.0\")\n    end\nend","category":"page"},{"location":"api/prandtl_expand/#Inverse-Problem-Find-Mach-from-Turning-Angle","page":"Prandtl-Meyer Expansion","title":"Inverse Problem - Find Mach from Turning Angle","text":"","category":"section"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Given a turning angle, find the required initial Mach number:","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"M2_target = 3.0\ntheta_given = 25.0  # degrees\n\n# Calculate required upstream Mach number\nnu2 = prandtl_meyer(M2_target)\nnu1 = nu2 - theta_given\n\n# Find M1 by inverse of Prandtl-Meyer function (iterative)\nM1_estimate = 1.5  # Initial guess\ntolerance = 1e-6\n\nfor i in 1:100\n    nu_calc = prandtl_meyer(M1_estimate)\n    error = nu_calc - nu1\n    \n    if abs(error) < tolerance\n        break\n    end\n    \n    # Simple Newton-like iteration\n    M1_estimate -= error / 10.0\n    M1_estimate = max(M1_estimate, 1.001)  # Keep supersonic\nend\n\nprintln(\"Inverse Prandtl-Meyer Problem:\")\nprintln(\"Target M₂: $M2_target\")\nprintln(\"Given turning angle: $theta_given°\")\nprintln(\"Required M₁: $(round(M1_estimate, digits=3))\")\n\n# Verify\nM2_check = expand_mach2(M1_estimate, theta_given)\nprintln(\"Verification M₂: $(round(M2_check, digits=3))\")","category":"page"},{"location":"api/prandtl_expand/#Limitations-and-Considerations","page":"Prandtl-Meyer Expansion","title":"Limitations and Considerations","text":"","category":"section"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Isentropic assumption: Valid only for gradual expansions without shock waves\nPerfect gas: Constant specific heats and ideal gas behavior\nSteady flow: Time-invariant conditions\nTwo-dimensional flow: Assumes planar or axisymmetric geometry\nGradual expansion: Sharp corners may cause finite-strength waves\nSupersonic flow: Functions only valid for M > 1","category":"page"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"For viscous effects, unsteady phenomena, or real gas behavior, additional analysis methods are required.","category":"page"},{"location":"api/prandtl_expand/#See-Also","page":"Prandtl-Meyer Expansion","title":"See Also","text":"","category":"section"},{"location":"api/prandtl_expand/","page":"Prandtl-Meyer Expansion","title":"Prandtl-Meyer Expansion","text":"Oblique Shock Waves: For compression processes\nIsentropic Relations: For property ratios\nNormal Shock Waves: For normal compression\nNozzle Analysis: For nozzle design applications","category":"page"},{"location":"#CompAir.jl","page":"Home","title":"CompAir.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A comprehensive Julia package for computational aerodynamics and compressible flow calculations.","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CompAir.jl provides efficient and accurate implementations of fundamental gas dynamics equations and atmospheric models. This package is a Julia port of the original Python CompAir module developed by Inha AADL, maintaining full compatibility while leveraging Julia's performance advantages for numerical computing.","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"#Flow-Analysis","page":"Home","title":"Flow Analysis","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Isentropic Flow Relations: Temperature, pressure, and density ratios for compressible flow\nNormal Shock Waves: Complete shock wave analysis with property ratios and losses\nOblique Shock Waves: Weak shock solutions with θ-β-M relationships\nPrandtl-Meyer Expansion: Expansion wave calculations for supersonic flows\nCone Shock Analysis: Taylor-Maccoll equation solutions for axisymmetric flows","category":"page"},{"location":"#Nozzle-Analysis","page":"Home","title":"Nozzle Analysis","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Quasi-1D Nozzle Flow: Area-Mach number relationships\nMass Flow Calculations: Flow rate computations with choking conditions\nNozzle Performance: Exit conditions and flow characteristics","category":"page"},{"location":"#Atmospheric-Modeling","page":"Home","title":"Atmospheric Modeling","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"US Standard Atmosphere 1976: Complete atmospheric model up to 86km altitude\nAtmospheric Properties: Density, pressure, temperature, speed of sound, and viscosity\nSutherland Viscosity Law: Temperature-dependent dynamic viscosity calculations\nGeopotential Altitude: Conversion between geometric and geopotential altitudes","category":"page"},{"location":"#Quick-Example","page":"Home","title":"Quick Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using CompAir\n\n# Isentropic flow properties at Mach 2.0\nM = 2.0\nT0_T = total_to_static_temperature_ratio(M)      # Total to static temperature ratio\np0_p = total_to_static_pressure_ratio(M)      # Total to static pressure ratio\nrho0_rho = total_to_static_density_ratio(M)  # Total to static density ratio\n\nprintln(\"At M = $M:\")\nprintln(\"T₀/T = $(round(T0_T, digits=3))\")\nprintln(\"p₀/p = $(round(p0_p, digits=3))\")\nprintln(\"ρ₀/ρ = $(round(rho0_rho, digits=3))\")","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CompAir.jl is registered in the Julia General Registry. Install it using the standard package manager:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"CompAir\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"Or alternatively, in the Julia REPL package mode (press ]):","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add CompAir","category":"page"},{"location":"","page":"Home","title":"Home","text":"After installation, load the package:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using CompAir","category":"page"},{"location":"","page":"Home","title":"Home","text":"See the Installation Guide for detailed instructions and troubleshooting.","category":"page"},{"location":"#Getting-Started","page":"Home","title":"Getting Started","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To get started with CompAir.jl:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Installation: Install the package and its dependencies\nQuick Start: Basic usage patterns and simple examples\nExamples: Comprehensive examples for different flow scenarios\nFunction Reference: Detailed function documentation in source code","category":"page"},{"location":"#Table-of-Contents","page":"Home","title":"Table of Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"manual/installation.md\",\n    \"manual/quickstart.md\",\n    \"manual/examples.md\",\n    \"dev/contributing.md\",\n    \"dev/changelog.md\"\n]\nDepth = 2","category":"page"},{"location":"#Key-Functions","page":"Home","title":"Key Functions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CompAir.jl provides functions organized into several modules for different aspects of compressible flow analysis. See the API Reference for complete documentation.","category":"page"},{"location":"#Core-Functionality","page":"Home","title":"Core Functionality","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Isentropic Relations: total_to_static_temperature_ratio, total_to_static_pressure_ratio, total_to_static_density_ratio\nShock Wave Analysis: solve_normal, solve_oblique\nExpansion Waves: expand_mach2, expand_p2\nAtmospheric Model: atmosphere_properties_at, sutherland_viscosity\nNozzle Analysis: area_ratio_at, mach_by_area_ratio\nCone Shock Analysis: cone_beta_weak, cone_mach_surface","category":"page"},{"location":"#About-This-Package","page":"Home","title":"About This Package","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This Julia package is a faithful port of the original Python CompAir module developed by Inha AADL. The porting process involved algorithm translation, performance optimization, type system enhancement, and critical bug fixes in the atmospheric model and parameter handling.","category":"page"},{"location":"#Key-Improvements","page":"Home","title":"Key Improvements","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Numerical Accuracy: Fixed critical indexing errors in the US Standard Atmosphere 1976 implementation\nParameter Consistency: Resolved missing gamma parameters in shock wave functions\nPerformance: Significant speed improvements through Julia's numerical computing optimizations\nType Safety: Enhanced reliability through Julia's strong type system\nError Handling: Improved error messages and edge case management","category":"page"},{"location":"#Citation","page":"Home","title":"Citation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you use CompAir.jl in your research, please cite both the original Python module and this Julia port:","category":"page"},{"location":"","page":"Home","title":"Home","text":"@software{CompAir_jl,\n  author = {Lee, Seawhan},\n  title = {CompAir.jl: A Julia Port of CompAir for Computational Aerodynamics},\n  url = {https://github.com/seawhanlee/CompAir.jl},\n  version = {1.0.0},\n  year = {2025},\n  note = {Julia port of the original Python CompAir module by Inha AADL}\n}\n\n@software{CompAir_python,\n  author = {Inha AADL},\n  title = {CompAir: Computational Aerodynamics Module},\n  url = {https://gitlab.com/aadl_inha/CompAir},\n  year = {2022},\n  note = {Original Python implementation}\n}","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This project is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0) license.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Original Work:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Copyright (c) 2022 Inha University AADL (Advanced Aerospace Development Laboratory)\nSource: https://gitlab.com/aadl_inha/CompAir","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modified Work (CompAir.jl):","category":"page"},{"location":"","page":"Home","title":"Home","text":"Copyright (c) 2025 Seawhan Lee\nSource: https://github.com/seawhanlee/CompAir.jl","category":"page"},{"location":"#License-Terms","page":"Home","title":"License Terms","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"You are free to:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Share — copy and redistribute the material in any medium or format\nAdapt — remix, transform, and build upon the material","category":"page"},{"location":"","page":"Home","title":"Home","text":"Under the following terms:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Attribution — You must give appropriate credit to both the original work (Inha University AADL) and this modified work (Seawhan Lee)\nNonCommercial — You may not use the material for commercial purposes\nShareAlike — If you remix, transform, or build upon the material, you must distribute your contributions under the same license","category":"page"},{"location":"","page":"Home","title":"Home","text":"For complete details, see the LICENSE file or visit Creative Commons.","category":"page"},{"location":"api/atmos1976/#Atmospheric-Model-(US-Standard-Atmosphere-1976)","page":"Atmospheric Model","title":"Atmospheric Model (US Standard Atmosphere 1976)","text":"","category":"section"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"This module provides functions for calculating atmospheric properties based on the US Standard Atmosphere 1976 model, which is widely used in aerospace engineering and meteorology.","category":"page"},{"location":"api/atmos1976/#Overview","page":"Atmospheric Model","title":"Overview","text":"","category":"section"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"The US Standard Atmosphere 1976 is a mathematical model that describes the variation of atmospheric properties with altitude. It provides:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Density: Air density variation with altitude\nPressure: Atmospheric pressure profiles\nTemperature: Temperature lapse rates in different atmospheric layers\nSpeed of Sound: Acoustic velocity based on temperature\nDynamic Viscosity: Temperature-dependent viscosity using Sutherland's law\nGeopotential Altitude: Conversion between geometric and geopotential altitudes","category":"page"},{"location":"api/atmos1976/#Theory","page":"Atmospheric Model","title":"Theory","text":"","category":"section"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"The atmosphere is divided into several layers with different temperature profiles:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Troposphere (0-11 km): Linear temperature decrease","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"T = T_0 - L cdot h\nL = 65 K/km (lapse rate)","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Stratosphere (11-20 km): Isothermal layer","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"T = T_11 = 21665 K (constant)","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Stratosphere (20-32 km): Linear temperature increase","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"T = T_20 + L_2 cdot (h - 20)\nL_2 = 10 K/km","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Hydrostatic equation: fracdpdh = -rho g","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Perfect gas law: p = rho R T","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Geopotential altitude: h = fracr_0 hr_0 + h","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Sutherland viscosity law: mu = mu_0 fracT^15T + S","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Where:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"h = geometric altitude\nh = geopotential altitude  \nr_0 = Earth's radius (6356766 m)\nR = specific gas constant (287.0 J/kg·K for air)\ng_0 = standard gravity (9.80665 m/s²)\nmu_0 = reference viscosity (1.716×10⁻⁵ Pa·s)\nS = Sutherland constant (110.4 K)","category":"page"},{"location":"api/atmos1976/#Functions","page":"Atmospheric Model","title":"Functions","text":"","category":"section"},{"location":"api/atmos1976/#CompAir.atmosphere_properties_at","page":"Atmospheric Model","title":"CompAir.atmosphere_properties_at","text":"atmosphere_properties_at(alt)\n\nCalculates properties of the US Standard Atmosphere 1976 at a given altitude.\n\nArguments\n\nalt::Float64: Altitude (km)\n\nReturns\n\ndensity::Float64: Density (kg/m^3)\npressure::Float64: Pressure (Pa)\ntemperature::Float64: Temperature (K)\nasound::Float64: Speed of sound (m/s)\nviscosity::Float64: Dynamic viscosity (Pa s)\n\n\n\n\n\n","category":"function"},{"location":"api/atmos1976/#CompAir.geometric_to_geopotential_altitude","page":"Atmospheric Model","title":"CompAir.geometric_to_geopotential_altitude","text":"geometric_to_geopotential_altitude(alt, rearth=6369.0)\n\nConverts geometric altitude (Z) to geopotential altitude (H).\n\nArguments\n\nalt::Float64: Geometric altitude (km)\nrearth::Float64=6369.0: Earth's radius (km)\n\nReturns\n\nH::Float64: Geopotential altitude (km)\n\n\n\n\n\n","category":"function"},{"location":"api/atmos1976/#CompAir.geopotential_to_geometric_altitude","page":"Atmospheric Model","title":"CompAir.geopotential_to_geometric_altitude","text":"geopotential_to_geometric_altitude(alt, rearth=6369.0)\n\nConverts geopotential altitude (H) to geometric altitude (Z).\n\nArguments\n\nalt::Float64: Geopotential altitude (km)\nrearth::Float64=6369.0: Earth's radius (km)\n\nReturns\n\nZ::Float64: Geometric altitude (km)\n\n\n\n\n\n","category":"function"},{"location":"api/atmos1976/#CompAir.sutherland_viscosity","page":"Atmospheric Model","title":"CompAir.sutherland_viscosity","text":"sutherland_viscosity(theta, t0=288.15, mu0=1.458e-6, suth=110.4)\n\nCalculates dynamic viscosity using Sutherland's law.\n\nArguments\n\ntheta::Float64: Temperature ratio (T/T0)\nt0::Float64=288.15: Reference temperature (K)\nmu0::Float64=1.458e-6: Reference viscosity (Pa s)\nsuth::Float64=110.4: Sutherland's constant\n\nReturns\n\nmu::Float64: Dynamic viscosity (Pa s)\n\n\n\n\n\n","category":"function"},{"location":"api/atmos1976/#Function-Details","page":"Atmospheric Model","title":"Function Details","text":"","category":"section"},{"location":"api/atmos1976/#atmosphere*properties*at","page":"Atmospheric Model","title":"atmospherepropertiesat","text":"","category":"section"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"atmosphere_properties_at(alt)","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Calculate complete atmospheric properties at a given altitude using the US Standard Atmosphere 1976 model.","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Arguments:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"alt::Real: Geometric altitude in kilometers","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Returns:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"density::Float64: Air density in kg/m³\npressure::Float64: Atmospheric pressure in Pa\ntemperature::Float64: Temperature in K\nasound::Float64: Speed of sound in m/s\nviscosity::Float64: Dynamic viscosity in Pa·s","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Example:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"julia> density, pressure, temperature, asound, viscosity = atmosphere_properties_at(11.0)\n(0.36391, 22632.1, 216.65, 295.07, 1.4216e-5)\n\njulia> println(\"At 11 km: ρ=$(round(density, digits=3)) kg/m³, p=$(round(pressure/1000, digits=1)) kPa\")\nAt 11 km: ρ=0.364 kg/m³, p=22.6 kPa","category":"page"},{"location":"api/atmos1976/#geometric*to*geopotential_altitude","page":"Atmospheric Model","title":"geometrictogeopotential_altitude","text":"","category":"section"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"geometric_to_geopotential_altitude(alt, rearth=6369.0)","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Convert geometric altitude to geopotential altitude.","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Arguments:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"alt::Real: Geometric altitude in km\nrearth::Real=6369.0: Earth's radius in km","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Returns:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Float64: Geopotential altitude in km","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Formula: h = fracr_0 hr_0 + h","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Example:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"julia> geometric_to_geopotential_altitude(20.0)\n19.93743718592965\n\njulia> geometric_to_geopotential_altitude(50.0)\n49.61139896373057","category":"page"},{"location":"api/atmos1976/#geopotential*to*geometric_altitude","page":"Atmospheric Model","title":"geopotentialtogeometric_altitude","text":"","category":"section"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"geopotential_to_geometric_altitude(alt, rearth=6369.0)","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Convert geopotential altitude to geometric altitude.","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Arguments:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"alt::Real: Geopotential altitude in km\nrearth::Real=6369.0: Earth's radius in km","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Returns:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Float64: Geometric altitude in km","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Formula: h = fracr_0 hr_0 - h","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Example:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"julia> geopotential_to_geometric_altitude(19.937)\n19.999685738514174\n\njulia> geopotential_to_geometric_altitude(49.611)\n49.999743718592965","category":"page"},{"location":"api/atmos1976/#sutherland_viscosity","page":"Atmospheric Model","title":"sutherland_viscosity","text":"","category":"section"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"sutherland_viscosity(theta, t0=288.15, mu0=1.716e-5, suth=110.4)","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Calculate dynamic viscosity using Sutherland's law for temperature dependence.","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Arguments:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"theta::Real: Temperature ratio (T/T₀) or absolute temperature\nt0::Real=288.15: Reference temperature in K\nmu0::Real=1.716e-5: Reference viscosity in Pa·s\nsuth::Real=110.4: Sutherland constant in K","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Returns:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Float64: Dynamic viscosity in Pa·s","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Formula: mu = mu_0 fracT^15T + S","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Example:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"julia> sutherland_viscosity(1.0)  # At standard conditions\n1.716e-5\n\njulia> sutherland_viscosity(216.65/288.15)  # At 11 km\n1.4216e-5","category":"page"},{"location":"api/atmos1976/#Applications","page":"Atmospheric Model","title":"Applications","text":"","category":"section"},{"location":"api/atmos1976/#Flight-Performance-Analysis","page":"Atmospheric Model","title":"Flight Performance Analysis","text":"","category":"section"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Calculate flight conditions at cruise altitude:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"# Commercial aircraft cruise conditions\ncruise_alt = 11.0  # km (36,000 ft)\nairspeed = 250     # m/s\n\n# Get atmospheric properties\nrho, p, T, a, mu = atmosphere_properties_at(cruise_alt)\n\n# Calculate flight parameters\nMach = airspeed / a\ndynamic_pressure = 0.5 * rho * airspeed^2\nReynolds_per_meter = rho * airspeed / mu\n\nprintln(\"Flight Analysis at $(cruise_alt) km:\")\nprintln(\"True airspeed: $(airspeed) m/s\")\nprintln(\"Mach number: $(round(Mach, digits=3))\")\nprintln(\"Dynamic pressure: $(round(dynamic_pressure, digits=1)) Pa\")\nprintln(\"Reynolds number per meter: $(round(Reynolds_per_meter/1e6, digits=2)) million/m\")\nprintln(\"Air density: $(round(rho, digits=3)) kg/m³\")\nprintln(\"Temperature: $(round(T, digits=1)) K\")","category":"page"},{"location":"api/atmos1976/#Atmospheric-Property-Variation","page":"Atmospheric Model","title":"Atmospheric Property Variation","text":"","category":"section"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Analyze how atmospheric properties change with altitude:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"altitudes = [0.0, 5.0, 11.0, 20.0, 30.0, 50.0]  # km\n\nprintln(\"Atmospheric Property Variation:\")\nprintln(\"Alt(km)\\tρ(kg/m³)\\tp(kPa)\\tT(K)\\ta(m/s)\\tμ(μPa·s)\")\nprintln(\"------\\t--------\\t------\\t-----\\t------\\t--------\")\n\nfor alt in altitudes\n    density, pressure, temperature, asound, viscosity = atmosphere_properties_at(alt)\n    \n    println(\"$(alt)\\t$(round(density, digits=3))\\t\\t$(round(pressure/1000, digits=1))\\t$(round(temperature, digits=1))\\t$(round(asound, digits=1))\\t$(round(viscosity*1e6, digits=1))\")\nend","category":"page"},{"location":"api/atmos1976/#Rocket-Launch-Analysis","page":"Atmospheric Model","title":"Rocket Launch Analysis","text":"","category":"section"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Analyze atmospheric conditions during rocket ascent:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"println(\"Rocket Ascent Atmospheric Analysis:\")\nprintln(\"Alt(km)\\tρ(kg/m³)\\tDrag∝ρ\\tq∝ρV²(rel)\")\nprintln(\"------\\t--------\\t------\\t-----------\")\n\n# Assume constant velocity for simplification\nV_rocket = 500  # m/s (approximate)\n\nfor alt in 0:5:30\n    rho, p, T, a, mu = atmosphere_properties_at(alt)\n    \n    # Relative density and dynamic pressure\n    rho0, _, _, _, _ = atmosphere_properties_at(0.0)\n    rho_rel = rho / rho0\n    q_rel = rho_rel  # Assuming constant velocity\n    \n    println(\"$(alt)\\t$(round(rho, digits=4))\\t\\t$(round(rho_rel, digits=3))\\t$(round(q_rel, digits=3))\")\nend","category":"page"},{"location":"api/atmos1976/#Wind-Tunnel-Corrections","page":"Atmospheric Model","title":"Wind Tunnel Corrections","text":"","category":"section"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Calculate air properties for wind tunnel testing:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"# Wind tunnel facility analysis\ntest_conditions = [\n    (\"Sea Level\", 0.0),\n    (\"Denver\", 1.609),      # 5,280 ft\n    (\"High Altitude\", 4.0)\n]\n\nprintln(\"Wind Tunnel Facility Conditions:\")\nprintln(\"Location\\tAlt(km)\\tρ(kg/m³)\\tp(kPa)\\tRe correction\")\nprintln(\"--------\\t------\\t--------\\t------\\t-------------\")\n\n# Reference: sea level\nrho_ref, p_ref, T_ref, a_ref, mu_ref = atmosphere_properties_at(0.0)\n\nfor (location, alt) in test_conditions\n    rho, p, T, a, mu = atmosphere_properties_at(alt)\n    \n    # Reynolds number correction factor\n    Re_correction = (rho/rho_ref) * (mu_ref/mu)\n    \n    println(\"$location\\t$(alt)\\t$(round(rho, digits=3))\\t\\t$(round(p/1000, digits=1))\\t$(round(Re_correction, digits=3))\")\nend","category":"page"},{"location":"api/atmos1976/#Supersonic-Aircraft-Analysis","page":"Atmospheric Model","title":"Supersonic Aircraft Analysis","text":"","category":"section"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Analyze conditions for supersonic flight:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"# Concorde-type aircraft analysis\ncruise_alts = [16.0, 18.0, 20.0]  # km\ncruise_mach = 2.0\n\nprintln(\"Supersonic Cruise Analysis:\")\nprintln(\"Alt(km)\\tT(K)\\ta(m/s)\\tV(m/s)\\tρ(kg/m³)\\tRe/m(×10⁶)\")\nprintln(\"------\\t-----\\t------\\t------\\t--------\\t----------\")\n\nfor alt in cruise_alts\n    rho, p, T, a, mu = atmosphere_properties_at(alt)\n    \n    V_cruise = cruise_mach * a\n    Re_per_m = rho * V_cruise / mu\n    \n    println(\"$(alt)\\t$(round(T, digits=1))\\t$(round(a, digits=1))\\t$(round(V_cruise, digits=1))\\t$(round(rho, digits=3))\\t\\t$(round(Re_per_m/1e6, digits=2))\")\nend","category":"page"},{"location":"api/atmos1976/#Validation-Examples","page":"Atmospheric Model","title":"Validation Examples","text":"","category":"section"},{"location":"api/atmos1976/#Standard-Atmosphere-Verification","page":"Atmospheric Model","title":"Standard Atmosphere Verification","text":"","category":"section"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Compare with known atmospheric data:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"# Validate against standard atmosphere tables\nvalidation_points = [\n    (0.0, 1.2250, 101325, 288.15),      # Sea level\n    (11.0, 0.3639, 22632, 216.65),     # Tropopause\n    (20.0, 0.0880, 5474.9, 216.65),    # Lower stratosphere\n]\n\nprintln(\"Model Validation:\")\nprintln(\"Alt(km)\\tParameter\\tCalculated\\tStandard\\tError(%)\")\nprintln(\"------\\t---------\\t----------\\t--------\\t-------\")\n\nfor (alt, rho_std, p_std, T_std) in validation_points\n    rho_calc, p_calc, T_calc, _, _ = atmosphere_properties_at(alt)\n    \n    rho_error = abs(rho_calc - rho_std) / rho_std * 100\n    p_error = abs(p_calc - p_std) / p_std * 100\n    T_error = abs(T_calc - T_std) / T_std * 100\n    \n    println(\"$(alt)\\tDensity\\t\\t$(round(rho_calc, digits=4))\\t\\t$(rho_std)\\t$(round(rho_error, digits=3))\")\n    println(\"$(alt)\\tPressure\\t$(round(p_calc, digits=1))\\t$(p_std)\\t$(round(p_error, digits=3))\")\n    println(\"$(alt)\\tTemperature\\t$(round(T_calc, digits=2))\\t\\t$(T_std)\\t$(round(T_error, digits=3))\")\n    println()\nend","category":"page"},{"location":"api/atmos1976/#Altitude-Conversion-Verification","page":"Atmospheric Model","title":"Altitude Conversion Verification","text":"","category":"section"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Verify geopotential altitude conversions:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"println(\"Altitude Conversion Verification:\")\nprintln(\"Geometric(km)\\tGeopotential(km)\\tDifference(m)\")\nprintln(\"------------\\t---------------\\t-------------\")\n\nfor h_geom in [0, 10, 20, 30, 50, 80]\n    h_geop = geometric_to_geopotential_altitude(h_geom)\n    h_back = geopotential_to_geometric_altitude(h_geop)\n    difference = (h_geom - h_geop) * 1000  # Convert to meters\n    error = abs(h_back - h_geom)\n    \n    println(\"$(h_geom)\\t\\t$(round(h_geop, digits=3))\\t\\t$(round(difference, digits=1))\")\n    println(\"Round-trip error: $(round(error*1000, digits=3)) m\")\nend","category":"page"},{"location":"api/atmos1976/#Viscosity-Temperature-Dependence","page":"Atmospheric Model","title":"Viscosity Temperature Dependence","text":"","category":"section"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Analyze viscosity variation with temperature:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"println(\"Viscosity Analysis:\")\nprintln(\"T(K)\\tμ(μPa·s)\\tμ/μ₀\")\nprintln(\"----\\t--------\\t----\")\n\n# Reference viscosity at 288.15 K\nmu_ref = sutherland_viscosity(288.15)\n\ntemperatures = [200, 250, 288.15, 300, 400, 500]\n\nfor T in temperatures\n    mu = sutherland_viscosity(T)\n    mu_ratio = mu / mu_ref\n    \n    println(\"$(T)\\t$(round(mu*1e6, digits=1))\\t\\t$(round(mu_ratio, digits=3))\")\nend","category":"page"},{"location":"api/atmos1976/#Atmospheric-Density-Scale-Height","page":"Atmospheric Model","title":"Atmospheric Density Scale Height","text":"","category":"section"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Calculate density scale height in different layers:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"# Scale height analysis\naltitudes = [0.0, 5.0, 11.0, 15.0, 20.0]\n\nprintln(\"Atmospheric Scale Height Analysis:\")\nprintln(\"Alt Range(km)\\tρ₁(kg/m³)\\tρ₂(kg/m³)\\tH(km)\")\nprintln(\"------------\\t---------\\t---------\\t-----\")\n\nfor i in 1:length(altitudes)-1\n    alt1 = altitudes[i]\n    alt2 = altitudes[i+1]\n    \n    rho1, _, _, _, _ = atmosphere_properties_at(alt1)\n    rho2, _, _, _, _ = atmosphere_properties_at(alt2)\n    \n    # Calculate scale height: H = Δh / ln(ρ₁/ρ₂)\n    delta_h = alt2 - alt1\n    scale_height = delta_h / log(rho1/rho2)\n    \n    println(\"$(alt1)-$(alt2)\\t\\t$(round(rho1, digits=3))\\t\\t$(round(rho2, digits=3))\\t\\t$(round(scale_height, digits=1))\")\nend","category":"page"},{"location":"api/atmos1976/#Different-Units-and-Conversions","page":"Atmospheric Model","title":"Different Units and Conversions","text":"","category":"section"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Working with different unit systems:","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"# Convert to different units\nalt_ft = 36000  # feet\nalt_km = alt_ft * 0.0003048  # Convert to km\n\nrho, p, T, a, mu = atmosphere_properties_at(alt_km)\n\n# Convert to imperial units\nrho_slugft3 = rho / 515.379  # kg/m³ to slug/ft³\np_lbft2 = p / 47.88  # Pa to lb/ft²\nT_F = T * 9/5 - 459.67  # K to °F\na_fts = a * 3.28084  # m/s to ft/s\n\nprintln(\"Atmospheric Properties at $(alt_ft) ft:\")\nprintln(\"Metric Units:\")\nprintln(\"  Density: $(round(rho, digits=4)) kg/m³\")\nprintln(\"  Pressure: $(round(p, digits=1)) Pa\")\nprintln(\"  Temperature: $(round(T, digits=1)) K\")\nprintln(\"  Speed of sound: $(round(a, digits=1)) m/s\")\n\nprintln(\"\\nImperial Units:\")\nprintln(\"  Density: $(round(rho_slugft3, digits=6)) slug/ft³\")\nprintln(\"  Pressure: $(round(p_lbft2, digits=1)) lb/ft²\")\nprintln(\"  Temperature: $(round(T_F, digits=1)) °F\")\nprintln(\"  Speed of sound: $(round(a_fts, digits=1)) ft/s\")","category":"page"},{"location":"api/atmos1976/#Limitations-and-Considerations","page":"Atmospheric Model","title":"Limitations and Considerations","text":"","category":"section"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Altitude Range: Valid up to approximately 86 km altitude\nStandard Conditions: Represents average mid-latitude conditions\nSeasonal Variations: Does not account for seasonal or geographical variations\nWeather Effects: Does not include local weather phenomena\nComposition: Assumes constant gas composition with altitude\nReal Atmosphere: Actual conditions may vary significantly from the model","category":"page"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"For precise applications requiring local atmospheric data, meteorological measurements should be used instead of or in addition to the standard atmosphere model.","category":"page"},{"location":"api/atmos1976/#See-Also","page":"Atmospheric Model","title":"See Also","text":"","category":"section"},{"location":"api/atmos1976/","page":"Atmospheric Model","title":"Atmospheric Model","text":"Isentropic Relations: For flow property calculations\nNormal Shock Waves: For shock wave analysis in atmospheric conditions\nNozzle Analysis: For propulsion system analysis at altitude","category":"page"}]
}
